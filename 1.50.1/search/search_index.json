{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ready to Start and Explore","text":""},{"location":"#highlights","title":"Highlights","text":"<p>Prebuilt libraries and required header files packaged with Conan</p> <ul> <li>For several target architectures build (cross-compiled) with one compiler (GCC-9):</li> <li>x64</li> <li>ARM-v7</li> <li>ARM-v8</li> <li>Convenient with build configurations <code>Release</code> and <code>Debug</code></li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<p>One of the compilers:</p> <ul> <li>Conan application as C++ package-manager</li> <li>GCC compiler</li> <li>A target generator e.g. CMake</li> <li>Build essentials, make</li> </ul>"},{"location":"#list-of-available-version-for-further-details","title":"List of available version for further details","text":""},{"location":"#links","title":"Links","text":"<ul> <li>Official website: https://github.com/thommyho/Cpp-gRPC-Linux-x64-ARM-PreBuilts</li> </ul>"},{"location":"list/","title":"Release Table","text":"<p>Or use following release table</p> Version Build-Info Conan-Setup Conan-Package-Info 1.50.1 ( latest) link Release-Debug Table-Overview 1.47.1 link Release-Debug Table-Overview 1.46.3 link Release-Debug Table-Overview"},{"location":"packages/v1_46_3/abseil/","title":"abseil/20220623.0","text":""},{"location":"packages/v1_46_3/abseil/#using-the-abseil-conan-package","title":"Using the abseil Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate abseil in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#using-abseil-with-cmake","title":"Using abseil with CMake","text":""},{"location":"packages/v1_46_3/abseil/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use abseil in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global abseil::abseil CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(abseil_project CXX)\n\nfind_package(absl)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} abseil::abseil)\n</code></pre> <p></p> <p>To install abseil/20220623.0, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the abseil Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the abseil absl_atomic_hook component, through the absl::atomic_hook target.</p> <pre><code>...\n# Link just to abseil absl_atomic_hook component\ntarget_link_libraries(${PROJECT_NAME} absl::atomic_hook)\n</code></pre> <p></p> <p>To check all the available components for abseil Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_46_3/abseil/#libcmakeconan_trickcxx_stdcmake","title":"lib/cmake/conan_trick/cxx_std.cmake","text":"<pre><code>target_compile_features(absl::atomic_hook INTERFACE cxx_std_11)\ntarget_compile_features(absl::errno_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::log_severity INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_logging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::spinlock_wait INTERFACE cxx_std_11)\ntarget_compile_features(absl::config INTERFACE cxx_std_11)\ntarget_compile_features(absl::dynamic_annotations INTERFACE cxx_std_11)\ntarget_compile_features(absl::core_headers INTERFACE cxx_std_11)\ntarget_compile_features(absl::malloc_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base INTERFACE cxx_std_11)\ntarget_compile_features(absl::throw_delegate INTERFACE cxx_std_11)\ntarget_compile_features(absl::pretty_function INTERFACE cxx_std_11)\ntarget_compile_features(absl::endian INTERFACE cxx_std_11)\ntarget_compile_features(absl::scoped_set_env INTERFACE cxx_std_11)\ntarget_compile_features(absl::strerror INTERFACE cxx_std_11)\ntarget_compile_features(absl::fast_type_id INTERFACE cxx_std_11)\ntarget_compile_features(absl::prefetch INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm_container INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup INTERFACE cxx_std_11)\ntarget_compile_features(absl::btree INTERFACE cxx_std_11)\ntarget_compile_features(absl::compressed_tuple INTERFACE cxx_std_11)\ntarget_compile_features(absl::fixed_array INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector INTERFACE cxx_std_11)\ntarget_compile_features(absl::counting_allocator INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_function_defaults INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_policy_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtablez_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug_hooks INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_slot_policy INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_common INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::layout INTERFACE cxx_std_11)\ntarget_compile_features(absl::stacktrace INTERFACE cxx_std_11)\ntarget_compile_features(absl::symbolize INTERFACE cxx_std_11)\ntarget_compile_features(absl::examine_stack INTERFACE cxx_std_11)\ntarget_compile_features(absl::failure_signal_handler INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::demangle_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::leak_check INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_path_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_program_name INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_config INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_marshalling INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_private_handle_accessor INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_reflection INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_parse INTERFACE cxx_std_11)\ntarget_compile_features(absl::any_invocable INTERFACE cxx_std_11)\ntarget_compile_features(absl::bind_front INTERFACE cxx_std_11)\ntarget_compile_features(absl::function_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::city INTERFACE cxx_std_11)\ntarget_compile_features(absl::low_level_hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::type_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::meta INTERFACE cxx_std_11)\ntarget_compile_features(absl::bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::int128 INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric_representation INTERFACE cxx_std_11)\ntarget_compile_features(absl::sample_recorder INTERFACE cxx_std_11)\ntarget_compile_features(absl::exponential_biased INTERFACE cxx_std_11)\ntarget_compile_features(absl::periodic_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_random INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_bit_gen_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_mock_helpers INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_distributions INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_gen_exception INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_sequences INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_caller INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fast_uniform_bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_seed_material INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pool_urbg INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_salted_seed_seq INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_iostream_state_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_generate_real INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_wide_multiply INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fastmath INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_nonsecure_base INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pcg_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_platform INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_slow INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_test_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_uniform_helper INTERFACE cxx_std_11)\ntarget_compile_features(absl::status INTERFACE cxx_std_11)\ntarget_compile_features(absl::statusor INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_tracker INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_functions INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_statistics INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_handle INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_info INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_sample_token INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_scope INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord INTERFACE cxx_std_11)\ntarget_compile_features(absl::graphcycles_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::kernel_timeout_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::synchronization INTERFACE cxx_std_11)\ntarget_compile_features(absl::time INTERFACE cxx_std_11)\ntarget_compile_features(absl::civil_time INTERFACE cxx_std_11)\ntarget_compile_features(absl::time_zone INTERFACE cxx_std_11)\ntarget_compile_features(absl::any INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::span INTERFACE cxx_std_11)\ntarget_compile_features(absl::optional INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_optional_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_variant_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::variant INTERFACE cxx_std_11)\ntarget_compile_features(absl::compare INTERFACE cxx_std_11)\ntarget_compile_features(absl::utility INTERFACE cxx_std_11)\n</code></pre>"},{"location":"packages/v1_46_3/abseil/#using-abseil-with-visual-studio","title":"Using abseil with Visual Studio","text":""},{"location":"packages/v1_46_3/abseil/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#using-abseil-with-autotools-and-pkg-config","title":"Using abseil with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/abseil/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/abseil/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the abseil.pc file (and the ones corresponding to abseil dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags abseil)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l abseil)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other abseil)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the abseil Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for abseil Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#declared-components-for-abseil","title":"Declared components for abseil","text":"<p>These are all the declared components for the abseil Conan package: * Component absl_atomic_hook:   * CMake target name: <code>absl::atomic_hook</code>   * pkg-config .pc file: absl_atomic_hook.pc   * Requires other components: absl_config, absl_core_headers * Component absl_errno_saver:   * CMake target name: <code>absl::errno_saver</code>   * pkg-config .pc file: absl_errno_saver.pc   * Requires other components: absl_config * Component absl_log_severity:   * CMake target name: <code>absl::log_severity</code>   * pkg-config .pc file: absl_log_severity.pc   * Requires other components: absl_core_headers   * Links to libraries: absl_log_severity * Component absl_raw_logging_internal:   * CMake target name: <code>absl::raw_logging_internal</code>   * pkg-config .pc file: absl_raw_logging_internal.pc   * Requires other components: absl_atomic_hook, absl_config, absl_core_headers, absl_errno_saver, absl_log_severity   * Links to libraries: absl_raw_logging_internal * Component absl_spinlock_wait:   * CMake target name: <code>absl::spinlock_wait</code>   * pkg-config .pc file: absl_spinlock_wait.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_errno_saver   * Links to libraries: absl_spinlock_wait * Component absl_config:   * CMake target name: <code>absl::config</code>   * pkg-config .pc file: absl_config.pc * Component absl_dynamic_annotations:   * CMake target name: <code>absl::dynamic_annotations</code>   * pkg-config .pc file: absl_dynamic_annotations.pc   * Requires other components: absl_config * Component absl_core_headers:   * CMake target name: <code>absl::core_headers</code>   * pkg-config .pc file: absl_core_headers.pc   * Requires other components: absl_config * Component absl_malloc_internal:   * CMake target name: <code>absl::malloc_internal</code>   * pkg-config .pc file: absl_malloc_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_raw_logging_internal   * Links to libraries: absl_malloc_internal   * Systems libs: pthread * Component absl_base_internal:   * CMake target name: <code>absl::base_internal</code>   * pkg-config .pc file: absl_base_internal.pc   * Requires other components: absl_config, absl_type_traits * Component absl_base:   * CMake target name: <code>absl::base</code>   * pkg-config .pc file: absl_base.pc   * Requires other components: absl_atomic_hook, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_log_severity, absl_raw_logging_internal, absl_spinlock_wait, absl_type_traits   * Links to libraries: absl_base   * Systems libs: pthread, rt * Component absl_throw_delegate:   * CMake target name: <code>absl::throw_delegate</code>   * pkg-config .pc file: absl_throw_delegate.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_throw_delegate * Component absl_pretty_function:   * CMake target name: <code>absl::pretty_function</code>   * pkg-config .pc file: absl_pretty_function.pc * Component absl_endian:   * CMake target name: <code>absl::endian</code>   * pkg-config .pc file: absl_endian.pc   * Requires other components: absl_base, absl_config, absl_core_headers * Component absl_scoped_set_env:   * CMake target name: <code>absl::scoped_set_env</code>   * pkg-config .pc file: absl_scoped_set_env.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_scoped_set_env * Component absl_strerror:   * CMake target name: <code>absl::strerror</code>   * pkg-config .pc file: absl_strerror.pc   * Requires other components: absl_config, absl_core_headers, absl_errno_saver   * Links to libraries: absl_strerror * Component absl_fast_type_id:   * CMake target name: <code>absl::fast_type_id</code>   * pkg-config .pc file: absl_fast_type_id.pc   * Requires other components: absl_config * Component absl_prefetch:   * CMake target name: <code>absl::prefetch</code>   * pkg-config .pc file: absl_prefetch.pc   * Requires other components: absl_config * Component absl_algorithm:   * CMake target name: <code>absl::algorithm</code>   * pkg-config .pc file: absl_algorithm.pc   * Requires other components: absl_config * Component absl_algorithm_container:   * CMake target name: <code>absl::algorithm_container</code>   * pkg-config .pc file: absl_algorithm_container.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_meta * Component absl_cleanup_internal:   * CMake target name: <code>absl::cleanup_internal</code>   * pkg-config .pc file: absl_cleanup_internal.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_utility * Component absl_cleanup:   * CMake target name: <code>absl::cleanup</code>   * pkg-config .pc file: absl_cleanup.pc   * Requires other components: absl_cleanup_internal, absl_config, absl_core_headers * Component absl_btree:   * CMake target name: <code>absl::btree</code>   * pkg-config .pc file: absl_btree.pc   * Requires other components: absl_container_common, absl_compare, absl_compressed_tuple, absl_container_memory, absl_cord, absl_core_headers, absl_layout, absl_memory, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits, absl_utility * Component absl_compressed_tuple:   * CMake target name: <code>absl::compressed_tuple</code>   * pkg-config .pc file: absl_compressed_tuple.pc   * Requires other components: absl_utility * Component absl_fixed_array:   * CMake target name: <code>absl::fixed_array</code>   * pkg-config .pc file: absl_fixed_array.pc   * Requires other components: absl_compressed_tuple, absl_algorithm, absl_config, absl_core_headers, absl_dynamic_annotations, absl_throw_delegate, absl_memory * Component absl_inlined_vector_internal:   * CMake target name: <code>absl::inlined_vector_internal</code>   * pkg-config .pc file: absl_inlined_vector_internal.pc   * Requires other components: absl_compressed_tuple, absl_core_headers, absl_memory, absl_span, absl_type_traits * Component absl_inlined_vector:   * CMake target name: <code>absl::inlined_vector</code>   * pkg-config .pc file: absl_inlined_vector.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_inlined_vector_internal, absl_throw_delegate, absl_memory * Component absl_counting_allocator:   * CMake target name: <code>absl::counting_allocator</code>   * pkg-config .pc file: absl_counting_allocator.pc   * Requires other components: absl_config * Component absl_flat_hash_map:   * CMake target name: <code>absl::flat_hash_map</code>   * pkg-config .pc file: absl_flat_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_flat_hash_set:   * CMake target name: <code>absl::flat_hash_set</code>   * pkg-config .pc file: absl_flat_hash_set.pc   * Requires other components: absl_container_memory, absl_hash_function_defaults, absl_raw_hash_set, absl_algorithm_container, absl_core_headers, absl_memory * Component absl_node_hash_map:   * CMake target name: <code>absl::node_hash_map</code>   * pkg-config .pc file: absl_node_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_node_hash_set:   * CMake target name: <code>absl::node_hash_set</code>   * pkg-config .pc file: absl_node_hash_set.pc   * Requires other components: absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_set, absl_algorithm_container, absl_memory * Component absl_container_memory:   * CMake target name: <code>absl::container_memory</code>   * pkg-config .pc file: absl_container_memory.pc   * Requires other components: absl_config, absl_memory, absl_type_traits, absl_utility * Component absl_hash_function_defaults:   * CMake target name: <code>absl::hash_function_defaults</code>   * pkg-config .pc file: absl_hash_function_defaults.pc   * Requires other components: absl_config, absl_cord, absl_hash, absl_strings * Component absl_hash_policy_traits:   * CMake target name: <code>absl::hash_policy_traits</code>   * pkg-config .pc file: absl_hash_policy_traits.pc   * Requires other components: absl_meta * Component absl_hashtablez_sampler:   * CMake target name: <code>absl::hashtablez_sampler</code>   * pkg-config .pc file: absl_hashtablez_sampler.pc   * Requires other components: absl_base, absl_config, absl_exponential_biased, absl_sample_recorder, absl_synchronization   * Links to libraries: absl_hashtablez_sampler * Component absl_hashtable_debug:   * CMake target name: <code>absl::hashtable_debug</code>   * pkg-config .pc file: absl_hashtable_debug.pc   * Requires other components: absl_hashtable_debug_hooks * Component absl_hashtable_debug_hooks:   * CMake target name: <code>absl::hashtable_debug_hooks</code>   * pkg-config .pc file: absl_hashtable_debug_hooks.pc   * Requires other components: absl_config * Component absl_node_slot_policy:   * CMake target name: <code>absl::node_slot_policy</code>   * pkg-config .pc file: absl_node_slot_policy.pc   * Requires other components: absl_config * Component absl_raw_hash_map:   * CMake target name: <code>absl::raw_hash_map</code>   * pkg-config .pc file: absl_raw_hash_map.pc   * Requires other components: absl_container_memory, absl_raw_hash_set, absl_throw_delegate * Component absl_container_common:   * CMake target name: <code>absl::container_common</code>   * pkg-config .pc file: absl_container_common.pc   * Requires other components: absl_type_traits * Component absl_raw_hash_set:   * CMake target name: <code>absl::raw_hash_set</code>   * pkg-config .pc file: absl_raw_hash_set.pc   * Requires other components: absl_bits, absl_compressed_tuple, absl_config, absl_container_common, absl_container_memory, absl_core_headers, absl_endian, absl_hash_policy_traits, absl_hashtable_debug_hooks, absl_memory, absl_meta, absl_optional, absl_prefetch, absl_utility, absl_hashtablez_sampler   * Links to libraries: absl_raw_hash_set * Component absl_layout:   * CMake target name: <code>absl::layout</code>   * pkg-config .pc file: absl_layout.pc   * Requires other components: absl_config, absl_core_headers, absl_meta, absl_strings, absl_span, absl_utility * Component absl_stacktrace:   * CMake target name: <code>absl::stacktrace</code>   * pkg-config .pc file: absl_stacktrace.pc   * Requires other components: absl_debugging_internal, absl_config, absl_core_headers   * Links to libraries: absl_stacktrace * Component absl_symbolize:   * CMake target name: <code>absl::symbolize</code>   * pkg-config .pc file: absl_symbolize.pc   * Requires other components: absl_debugging_internal, absl_demangle_internal, absl_base, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_strings   * Links to libraries: absl_symbolize * Component absl_examine_stack:   * CMake target name: <code>absl::examine_stack</code>   * pkg-config .pc file: absl_examine_stack.pc   * Requires other components: absl_stacktrace, absl_symbolize, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_examine_stack * Component absl_failure_signal_handler:   * CMake target name: <code>absl::failure_signal_handler</code>   * pkg-config .pc file: absl_failure_signal_handler.pc   * Requires other components: absl_examine_stack, absl_stacktrace, absl_base, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_failure_signal_handler * Component absl_debugging_internal:   * CMake target name: <code>absl::debugging_internal</code>   * pkg-config .pc file: absl_debugging_internal.pc   * Requires other components: absl_core_headers, absl_config, absl_dynamic_annotations, absl_errno_saver, absl_raw_logging_internal   * Links to libraries: absl_debugging_internal * Component absl_demangle_internal:   * CMake target name: <code>absl::demangle_internal</code>   * pkg-config .pc file: absl_demangle_internal.pc   * Requires other components: absl_base, absl_core_headers   * Links to libraries: absl_demangle_internal * Component absl_leak_check:   * CMake target name: <code>absl::leak_check</code>   * pkg-config .pc file: absl_leak_check.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_leak_check * Component absl_debugging:   * CMake target name: <code>absl::debugging</code>   * pkg-config .pc file: absl_debugging.pc   * Requires other components: absl_stacktrace, absl_leak_check * Component absl_flags_path_util:   * CMake target name: <code>absl::flags_path_util</code>   * pkg-config .pc file: absl_flags_path_util.pc   * Requires other components: absl_config, absl_strings * Component absl_flags_program_name:   * CMake target name: <code>absl::flags_program_name</code>   * pkg-config .pc file: absl_flags_program_name.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_path_util, absl_strings, absl_synchronization   * Links to libraries: absl_flags_program_name * Component absl_flags_config:   * CMake target name: <code>absl::flags_config</code>   * pkg-config .pc file: absl_flags_config.pc   * Requires other components: absl_config, absl_flags_path_util, absl_flags_program_name, absl_core_headers, absl_strings, absl_synchronization   * Links to libraries: absl_flags_config * Component absl_flags_marshalling:   * CMake target name: <code>absl::flags_marshalling</code>   * pkg-config .pc file: absl_flags_marshalling.pc   * Requires other components: absl_config, absl_core_headers, absl_log_severity, absl_optional, absl_strings, absl_str_format   * Links to libraries: absl_flags_marshalling * Component absl_flags_commandlineflag_internal:   * CMake target name: <code>absl::flags_commandlineflag_internal</code>   * pkg-config .pc file: absl_flags_commandlineflag_internal.pc   * Requires other components: absl_config, absl_dynamic_annotations, absl_fast_type_id   * Links to libraries: absl_flags_commandlineflag_internal * Component absl_flags_commandlineflag:   * CMake target name: <code>absl::flags_commandlineflag</code>   * pkg-config .pc file: absl_flags_commandlineflag.pc   * Requires other components: absl_config, absl_fast_type_id, absl_flags_commandlineflag_internal, absl_optional, absl_strings   * Links to libraries: absl_flags_commandlineflag * Component absl_flags_private_handle_accessor:   * CMake target name: <code>absl::flags_private_handle_accessor</code>   * pkg-config .pc file: absl_flags_private_handle_accessor.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_strings   * Links to libraries: absl_flags_private_handle_accessor * Component absl_flags_reflection:   * CMake target name: <code>absl::flags_reflection</code>   * pkg-config .pc file: absl_flags_reflection.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_private_handle_accessor, absl_flags_config, absl_strings, absl_synchronization, absl_flat_hash_map   * Links to libraries: absl_flags_reflection * Component absl_flags_internal:   * CMake target name: <code>absl::flags_internal</code>   * pkg-config .pc file: absl_flags_internal.pc   * Requires other components: absl_base, absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_config, absl_flags_marshalling, absl_synchronization, absl_meta, absl_utility   * Links to libraries: absl_flags_internal * Component absl_flags:   * CMake target name: <code>absl::flags</code>   * pkg-config .pc file: absl_flags.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_config, absl_flags_internal, absl_flags_reflection, absl_base, absl_core_headers, absl_strings   * Links to libraries: absl_flags * Component absl_flags_usage_internal:   * CMake target name: <code>absl::flags_usage_internal</code>   * pkg-config .pc file: absl_flags_usage_internal.pc   * Requires other components: absl_config, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_internal, absl_flags_path_util, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flat_hash_map, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage_internal * Component absl_flags_usage:   * CMake target name: <code>absl::flags_usage</code>   * pkg-config .pc file: absl_flags_usage.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_usage_internal, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage * Component absl_flags_parse:   * CMake target name: <code>absl::flags_parse</code>   * pkg-config .pc file: absl_flags_parse.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_internal, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flags_usage, absl_strings, absl_synchronization   * Links to libraries: absl_flags_parse * Component absl_any_invocable:   * CMake target name: <code>absl::any_invocable</code>   * pkg-config .pc file: absl_any_invocable.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_bind_front:   * CMake target name: <code>absl::bind_front</code>   * pkg-config .pc file: absl_bind_front.pc   * Requires other components: absl_base_internal, absl_compressed_tuple * Component absl_function_ref:   * CMake target name: <code>absl::function_ref</code>   * pkg-config .pc file: absl_function_ref.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_meta * Component absl_hash:   * CMake target name: <code>absl::hash</code>   * pkg-config .pc file: absl_hash.pc   * Requires other components: absl_city, absl_config, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_meta, absl_int128, absl_strings, absl_optional, absl_variant, absl_utility, absl_low_level_hash   * Links to libraries: absl_hash * Component absl_city:   * CMake target name: <code>absl::city</code>   * pkg-config .pc file: absl_city.pc   * Requires other components: absl_config, absl_core_headers, absl_endian   * Links to libraries: absl_city * Component absl_low_level_hash:   * CMake target name: <code>absl::low_level_hash</code>   * pkg-config .pc file: absl_low_level_hash.pc   * Requires other components: absl_bits, absl_config, absl_endian, absl_int128   * Links to libraries: absl_low_level_hash * Component absl_memory:   * CMake target name: <code>absl::memory</code>   * pkg-config .pc file: absl_memory.pc   * Requires other components: absl_core_headers, absl_meta * Component absl_type_traits:   * CMake target name: <code>absl::type_traits</code>   * pkg-config .pc file: absl_type_traits.pc   * Requires other components: absl_config * Component absl_meta:   * CMake target name: <code>absl::meta</code>   * pkg-config .pc file: absl_meta.pc   * Requires other components: absl_type_traits * Component absl_bits:   * CMake target name: <code>absl::bits</code>   * pkg-config .pc file: absl_bits.pc   * Requires other components: absl_core_headers * Component absl_int128:   * CMake target name: <code>absl::int128</code>   * pkg-config .pc file: absl_int128.pc   * Requires other components: absl_config, absl_core_headers, absl_bits   * Links to libraries: absl_int128 * Component absl_numeric:   * CMake target name: <code>absl::numeric</code>   * pkg-config .pc file: absl_numeric.pc   * Requires other components: absl_int128 * Component absl_numeric_representation:   * CMake target name: <code>absl::numeric_representation</code>   * pkg-config .pc file: absl_numeric_representation.pc   * Requires other components: absl_config * Component absl_sample_recorder:   * CMake target name: <code>absl::sample_recorder</code>   * pkg-config .pc file: absl_sample_recorder.pc   * Requires other components: absl_base, absl_synchronization * Component absl_exponential_biased:   * CMake target name: <code>absl::exponential_biased</code>   * pkg-config .pc file: absl_exponential_biased.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_exponential_biased * Component absl_periodic_sampler:   * CMake target name: <code>absl::periodic_sampler</code>   * pkg-config .pc file: absl_periodic_sampler.pc   * Requires other components: absl_core_headers, absl_exponential_biased   * Links to libraries: absl_periodic_sampler * Component absl_random_random:   * CMake target name: <code>absl::random_random</code>   * pkg-config .pc file: absl_random_random.pc   * Requires other components: absl_random_distributions, absl_random_internal_nonsecure_base, absl_random_internal_pcg_engine, absl_random_internal_pool_urbg, absl_random_internal_randen_engine, absl_random_seed_sequences * Component absl_random_bit_gen_ref:   * CMake target name: <code>absl::random_bit_gen_ref</code>   * pkg-config .pc file: absl_random_bit_gen_ref.pc   * Requires other components: absl_core_headers, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_type_traits * Component absl_random_internal_mock_helpers:   * CMake target name: <code>absl::random_internal_mock_helpers</code>   * pkg-config .pc file: absl_random_internal_mock_helpers.pc   * Requires other components: absl_fast_type_id, absl_optional * Component absl_random_distributions:   * CMake target name: <code>absl::random_distributions</code>   * pkg-config .pc file: absl_random_distributions.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_random_internal_generate_real, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_random_internal_traits, absl_random_internal_uniform_helper, absl_random_internal_wide_multiply, absl_strings, absl_type_traits   * Links to libraries: absl_random_distributions * Component absl_random_seed_gen_exception:   * CMake target name: <code>absl::random_seed_gen_exception</code>   * pkg-config .pc file: absl_random_seed_gen_exception.pc   * Requires other components: absl_config   * Links to libraries: absl_random_seed_gen_exception * Component absl_random_seed_sequences:   * CMake target name: <code>absl::random_seed_sequences</code>   * pkg-config .pc file: absl_random_seed_sequences.pc   * Requires other components: absl_config, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_random_seed_gen_exception, absl_span   * Links to libraries: absl_random_seed_sequences * Component absl_random_internal_traits:   * CMake target name: <code>absl::random_internal_traits</code>   * pkg-config .pc file: absl_random_internal_traits.pc   * Requires other components: absl_config * Component absl_random_internal_distribution_caller:   * CMake target name: <code>absl::random_internal_distribution_caller</code>   * pkg-config .pc file: absl_random_internal_distribution_caller.pc   * Requires other components: absl_config, absl_utility, absl_fast_type_id * Component absl_random_internal_fast_uniform_bits:   * CMake target name: <code>absl::random_internal_fast_uniform_bits</code>   * pkg-config .pc file: absl_random_internal_fast_uniform_bits.pc   * Requires other components: absl_config * Component absl_random_internal_seed_material:   * CMake target name: <code>absl::random_internal_seed_material</code>   * pkg-config .pc file: absl_random_internal_seed_material.pc   * Requires other components: absl_core_headers, absl_optional, absl_random_internal_fast_uniform_bits, absl_raw_logging_internal, absl_span, absl_strings   * Links to libraries: absl_random_internal_seed_material * Component absl_random_internal_pool_urbg:   * CMake target name: <code>absl::random_internal_pool_urbg</code>   * pkg-config .pc file: absl_random_internal_pool_urbg.pc   * Requires other components: absl_base, absl_config, absl_core_headers, absl_endian, absl_random_internal_randen, absl_random_internal_seed_material, absl_random_internal_traits, absl_random_seed_gen_exception, absl_raw_logging_internal, absl_span   * Links to libraries: absl_random_internal_pool_urbg * Component absl_random_internal_salted_seed_seq:   * CMake target name: <code>absl::random_internal_salted_seed_seq</code>   * pkg-config .pc file: absl_random_internal_salted_seed_seq.pc   * Requires other components: absl_inlined_vector, absl_optional, absl_span, absl_random_internal_seed_material, absl_type_traits * Component absl_random_internal_iostream_state_saver:   * CMake target name: <code>absl::random_internal_iostream_state_saver</code>   * pkg-config .pc file: absl_random_internal_iostream_state_saver.pc   * Requires other components: absl_int128, absl_type_traits * Component absl_random_internal_generate_real:   * CMake target name: <code>absl::random_internal_generate_real</code>   * pkg-config .pc file: absl_random_internal_generate_real.pc   * Requires other components: absl_bits, absl_random_internal_fastmath, absl_random_internal_traits, absl_type_traits * Component absl_random_internal_wide_multiply:   * CMake target name: <code>absl::random_internal_wide_multiply</code>   * pkg-config .pc file: absl_random_internal_wide_multiply.pc   * Requires other components: absl_bits, absl_config, absl_int128 * Component absl_random_internal_fastmath:   * CMake target name: <code>absl::random_internal_fastmath</code>   * pkg-config .pc file: absl_random_internal_fastmath.pc   * Requires other components: absl_bits * Component absl_random_internal_nonsecure_base:   * CMake target name: <code>absl::random_internal_nonsecure_base</code>   * pkg-config .pc file: absl_random_internal_nonsecure_base.pc   * Requires other components: absl_core_headers, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_span, absl_type_traits * Component absl_random_internal_pcg_engine:   * CMake target name: <code>absl::random_internal_pcg_engine</code>   * pkg-config .pc file: absl_random_internal_pcg_engine.pc   * Requires other components: absl_config, absl_int128, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_type_traits * Component absl_random_internal_randen_engine:   * CMake target name: <code>absl::random_internal_randen_engine</code>   * pkg-config .pc file: absl_random_internal_randen_engine.pc   * Requires other components: absl_endian, absl_random_internal_iostream_state_saver, absl_random_internal_randen, absl_raw_logging_internal, absl_type_traits * Component absl_random_internal_platform:   * CMake target name: <code>absl::random_internal_platform</code>   * pkg-config .pc file: absl_random_internal_platform.pc   * Requires other components: absl_config   * Links to libraries: absl_random_internal_platform * Component absl_random_internal_randen:   * CMake target name: <code>absl::random_internal_randen</code>   * pkg-config .pc file: absl_random_internal_randen.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes, absl_random_internal_randen_slow   * Links to libraries: absl_random_internal_randen * Component absl_random_internal_randen_slow:   * CMake target name: <code>absl::random_internal_randen_slow</code>   * pkg-config .pc file: absl_random_internal_randen_slow.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_slow * Component absl_random_internal_randen_hwaes:   * CMake target name: <code>absl::random_internal_randen_hwaes</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes_impl, absl_config   * Links to libraries: absl_random_internal_randen_hwaes * Component absl_random_internal_randen_hwaes_impl:   * CMake target name: <code>absl::random_internal_randen_hwaes_impl</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes_impl.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_hwaes_impl * Component absl_random_internal_distribution_test_util:   * CMake target name: <code>absl::random_internal_distribution_test_util</code>   * pkg-config .pc file: absl_random_internal_distribution_test_util.pc   * Requires other components: absl_config, absl_core_headers, absl_raw_logging_internal, absl_strings, absl_str_format, absl_span   * Links to libraries: absl_random_internal_distribution_test_util * Component absl_random_internal_uniform_helper:   * CMake target name: <code>absl::random_internal_uniform_helper</code>   * pkg-config .pc file: absl_random_internal_uniform_helper.pc   * Requires other components: absl_config, absl_random_internal_traits, absl_type_traits * Component absl_status:   * CMake target name: <code>absl::status</code>   * pkg-config .pc file: absl_status.pc   * Requires other components: absl_atomic_hook, absl_config, absl_cord, absl_core_headers, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_stacktrace, absl_str_format, absl_strerror, absl_strings, absl_symbolize   * Links to libraries: absl_status * Component absl_statusor:   * CMake target name: <code>absl::statusor</code>   * pkg-config .pc file: absl_statusor.pc   * Requires other components: absl_base, absl_status, absl_core_headers, absl_raw_logging_internal, absl_type_traits, absl_strings, absl_utility, absl_variant   * Links to libraries: absl_statusor * Component absl_strings:   * CMake target name: <code>absl::strings</code>   * pkg-config .pc file: absl_strings.pc   * Requires other components: absl_strings_internal, absl_base, absl_bits, absl_config, absl_core_headers, absl_endian, absl_int128, absl_memory, absl_raw_logging_internal, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_strings   * Systems libs: m * Component absl_strings_internal:   * CMake target name: <code>absl::strings_internal</code>   * pkg-config .pc file: absl_strings_internal.pc   * Requires other components: absl_config, absl_core_headers, absl_endian, absl_raw_logging_internal, absl_type_traits   * Links to libraries: absl_strings_internal * Component absl_str_format:   * CMake target name: <code>absl::str_format</code>   * pkg-config .pc file: absl_str_format.pc   * Requires other components: absl_str_format_internal * Component absl_str_format_internal:   * CMake target name: <code>absl::str_format_internal</code>   * pkg-config .pc file: absl_str_format_internal.pc   * Requires other components: absl_bits, absl_strings, absl_config, absl_core_headers, absl_numeric_representation, absl_type_traits, absl_utility, absl_int128, absl_span   * Links to libraries: absl_str_format_internal * Component absl_cord_internal:   * CMake target name: <code>absl::cord_internal</code>   * pkg-config .pc file: absl_cord_internal.pc   * Requires other components: absl_base_internal, absl_compressed_tuple, absl_config, absl_core_headers, absl_endian, absl_inlined_vector, absl_layout, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_cord_internal * Component absl_cordz_update_tracker:   * CMake target name: <code>absl::cordz_update_tracker</code>   * pkg-config .pc file: absl_cordz_update_tracker.pc   * Requires other components: absl_config * Component absl_cordz_functions:   * CMake target name: <code>absl::cordz_functions</code>   * pkg-config .pc file: absl_cordz_functions.pc   * Requires other components: absl_config, absl_core_headers, absl_exponential_biased, absl_raw_logging_internal   * Links to libraries: absl_cordz_functions * Component absl_cordz_statistics:   * CMake target name: <code>absl::cordz_statistics</code>   * pkg-config .pc file: absl_cordz_statistics.pc   * Requires other components: absl_config, absl_core_headers, absl_cordz_update_tracker, absl_synchronization * Component absl_cordz_handle:   * CMake target name: <code>absl::cordz_handle</code>   * pkg-config .pc file: absl_cordz_handle.pc   * Requires other components: absl_base, absl_config, absl_raw_logging_internal, absl_synchronization   * Links to libraries: absl_cordz_handle * Component absl_cordz_info:   * CMake target name: <code>absl::cordz_info</code>   * pkg-config .pc file: absl_cordz_info.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_handle, absl_cordz_statistics, absl_cordz_update_tracker, absl_core_headers, absl_inlined_vector, absl_span, absl_raw_logging_internal, absl_stacktrace, absl_synchronization   * Links to libraries: absl_cordz_info * Component absl_cordz_sample_token:   * CMake target name: <code>absl::cordz_sample_token</code>   * pkg-config .pc file: absl_cordz_sample_token.pc   * Requires other components: absl_config, absl_cordz_handle, absl_cordz_info   * Links to libraries: absl_cordz_sample_token * Component absl_cordz_update_scope:   * CMake target name: <code>absl::cordz_update_scope</code>   * pkg-config .pc file: absl_cordz_update_scope.pc   * Requires other components: absl_config, absl_cord_internal, absl_cordz_info, absl_cordz_update_tracker, absl_core_headers * Component absl_cord:   * CMake target name: <code>absl::cord</code>   * pkg-config .pc file: absl_cord.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_info, absl_cordz_update_scope, absl_cordz_update_tracker, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_span, absl_strings, absl_type_traits   * Links to libraries: absl_cord * Component absl_graphcycles_internal:   * CMake target name: <code>absl::graphcycles_internal</code>   * pkg-config .pc file: absl_graphcycles_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_malloc_internal, absl_raw_logging_internal   * Links to libraries: absl_graphcycles_internal * Component absl_kernel_timeout_internal:   * CMake target name: <code>absl::kernel_timeout_internal</code>   * pkg-config .pc file: absl_kernel_timeout_internal.pc   * Requires other components: absl_core_headers, absl_raw_logging_internal, absl_time * Component absl_synchronization:   * CMake target name: <code>absl::synchronization</code>   * pkg-config .pc file: absl_synchronization.pc   * Requires other components: absl_graphcycles_internal, absl_kernel_timeout_internal, absl_atomic_hook, absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_stacktrace, absl_symbolize, absl_time   * Links to libraries: absl_synchronization   * Systems libs: pthread * Component absl_time:   * CMake target name: <code>absl::time</code>   * pkg-config .pc file: absl_time.pc   * Requires other components: absl_base, absl_civil_time, absl_core_headers, absl_int128, absl_raw_logging_internal, absl_strings, absl_time_zone   * Links to libraries: absl_time * Component absl_civil_time:   * CMake target name: <code>absl::civil_time</code>   * pkg-config .pc file: absl_civil_time.pc   * Links to libraries: absl_civil_time * Component absl_time_zone:   * CMake target name: <code>absl::time_zone</code>   * pkg-config .pc file: absl_time_zone.pc   * Links to libraries: absl_time_zone * Component absl_any:   * CMake target name: <code>absl::any</code>   * pkg-config .pc file: absl_any.pc   * Requires other components: absl_bad_any_cast, absl_config, absl_core_headers, absl_fast_type_id, absl_type_traits, absl_utility * Component absl_bad_any_cast:   * CMake target name: <code>absl::bad_any_cast</code>   * pkg-config .pc file: absl_bad_any_cast.pc   * Requires other components: absl_bad_any_cast_impl, absl_config * Component absl_bad_any_cast_impl:   * CMake target name: <code>absl::bad_any_cast_impl</code>   * pkg-config .pc file: absl_bad_any_cast_impl.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_any_cast_impl * Component absl_span:   * CMake target name: <code>absl::span</code>   * pkg-config .pc file: absl_span.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_throw_delegate, absl_type_traits * Component absl_optional:   * CMake target name: <code>absl::optional</code>   * pkg-config .pc file: absl_optional.pc   * Requires other components: absl_bad_optional_access, absl_base_internal, absl_config, absl_core_headers, absl_memory, absl_type_traits, absl_utility * Component absl_bad_optional_access:   * CMake target name: <code>absl::bad_optional_access</code>   * pkg-config .pc file: absl_bad_optional_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_optional_access * Component absl_bad_variant_access:   * CMake target name: <code>absl::bad_variant_access</code>   * pkg-config .pc file: absl_bad_variant_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_variant_access * Component absl_variant:   * CMake target name: <code>absl::variant</code>   * pkg-config .pc file: absl_variant.pc   * Requires other components: absl_bad_variant_access, absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_compare:   * CMake target name: <code>absl::compare</code>   * pkg-config .pc file: absl_compare.pc   * Requires other components: absl_core_headers, absl_type_traits * Component absl_utility:   * CMake target name: <code>absl::utility</code>   * pkg-config .pc file: absl_utility.pc   * Requires other components: absl_base_internal, absl_config, absl_type_traits</p> <p></p>"},{"location":"packages/v1_46_3/abseil/#exposed-header-files-for-abseil","title":"Exposed header files for abseil","text":"<pre><code>#include &lt;absl/cleanup/cleanup.h&gt;\n#include &lt;absl/cleanup/internal/cleanup.h&gt;\n#include &lt;absl/base/call_once.h&gt;\n#include &lt;absl/base/config.h&gt;\n#include &lt;absl/base/macros.h&gt;\n#include &lt;absl/base/const_init.h&gt;\n#include &lt;absl/base/port.h&gt;\n#include &lt;absl/base/options.h&gt;\n#include &lt;absl/base/optimization.h&gt;\n#include &lt;absl/base/dynamic_annotations.h&gt;\n#include &lt;absl/base/log_severity.h&gt;\n#include &lt;absl/base/casts.h&gt;\n#include &lt;absl/base/thread_annotations.h&gt;\n#include &lt;absl/base/policy_checks.h&gt;\n#include &lt;absl/base/attributes.h&gt;\n#include &lt;absl/base/internal/spinlock_linux.inc&gt;\n#include &lt;absl/base/internal/spinlock_akaros.inc&gt;\n#include &lt;absl/base/internal/sysinfo.h&gt;\n#include &lt;absl/base/internal/scoped_set_env.h&gt;\n#include &lt;absl/base/internal/unscaledcycleclock.h&gt;\n#include &lt;absl/base/internal/errno_saver.h&gt;\n#include &lt;absl/base/internal/hide_ptr.h&gt;\n#include &lt;absl/base/internal/strerror.h&gt;\n#include &lt;absl/base/internal/pretty_function.h&gt;\n#include &lt;absl/base/internal/identity.h&gt;\n#include &lt;absl/base/internal/tsan_mutex_interface.h&gt;\n#include &lt;absl/base/internal/endian.h&gt;\n#include &lt;absl/base/internal/cycleclock.h&gt;\n#include &lt;absl/base/internal/spinlock_win32.inc&gt;\n#include &lt;absl/base/internal/fast_type_id.h&gt;\n#include &lt;absl/base/internal/direct_mmap.h&gt;\n#include &lt;absl/base/internal/prefetch.h&gt;\n#include &lt;absl/base/internal/spinlock_posix.inc&gt;\n#include &lt;absl/base/internal/raw_logging.h&gt;\n#include &lt;absl/base/internal/atomic_hook.h&gt;\n#include &lt;absl/base/internal/exception_safety_testing.h&gt;\n#include &lt;absl/base/internal/per_thread_tls.h&gt;\n#include &lt;absl/base/internal/spinlock_wait.h&gt;\n#include &lt;absl/base/internal/atomic_hook_test_helper.h&gt;\n#include &lt;absl/base/internal/low_level_scheduling.h&gt;\n#include &lt;absl/base/internal/exception_testing.h&gt;\n#include &lt;absl/base/internal/invoke.h&gt;\n#include &lt;absl/base/internal/spinlock.h&gt;\n#include &lt;absl/base/internal/dynamic_annotations.h&gt;\n#include &lt;absl/base/internal/low_level_alloc.h&gt;\n#include &lt;absl/base/internal/inline_variable_testing.h&gt;\n#include &lt;absl/base/internal/thread_annotations.h&gt;\n#include &lt;absl/base/internal/thread_identity.h&gt;\n#include &lt;absl/base/internal/throw_delegate.h&gt;\n#include &lt;absl/base/internal/scheduling_mode.h&gt;\n#include &lt;absl/base/internal/unaligned_access.h&gt;\n#include &lt;absl/base/internal/inline_variable.h&gt;\n#include &lt;absl/container/flat_hash_map.h&gt;\n#include &lt;absl/container/inlined_vector.h&gt;\n#include &lt;absl/container/btree_map.h&gt;\n#include &lt;absl/container/flat_hash_set.h&gt;\n#include &lt;absl/container/btree_set.h&gt;\n#include &lt;absl/container/node_hash_set.h&gt;\n#include &lt;absl/container/fixed_array.h&gt;\n#include &lt;absl/container/btree_test.h&gt;\n#include &lt;absl/container/node_hash_map.h&gt;\n#include &lt;absl/container/internal/container_memory.h&gt;\n#include &lt;absl/container/internal/inlined_vector.h&gt;\n#include &lt;absl/container/internal/hash_generator_testing.h&gt;\n#include &lt;absl/container/internal/btree.h&gt;\n#include &lt;absl/container/internal/unordered_map_lookup_test.h&gt;\n#include &lt;absl/container/internal/hashtable_debug.h&gt;\n#include &lt;absl/container/internal/unordered_set_constructor_test.h&gt;\n#include &lt;absl/container/internal/tracked.h&gt;\n#include &lt;absl/container/internal/unordered_set_modifiers_test.h&gt;\n#include &lt;absl/container/internal/compressed_tuple.h&gt;\n#include &lt;absl/container/internal/hash_function_defaults.h&gt;\n#include &lt;absl/container/internal/hash_policy_testing.h&gt;\n#include &lt;absl/container/internal/common.h&gt;\n#include &lt;absl/container/internal/unordered_set_lookup_test.h&gt;\n#include &lt;absl/container/internal/test_instance_tracker.h&gt;\n#include &lt;absl/container/internal/raw_hash_set.h&gt;\n#include &lt;absl/container/internal/hashtablez_sampler.h&gt;\n#include &lt;absl/container/internal/hash_policy_traits.h&gt;\n#include &lt;absl/container/internal/unordered_map_members_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_constructor_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_modifiers_test.h&gt;\n#include &lt;absl/container/internal/layout.h&gt;\n#include &lt;absl/container/internal/counting_allocator.h&gt;\n#include &lt;absl/container/internal/hashtable_debug_hooks.h&gt;\n#include &lt;absl/container/internal/raw_hash_map.h&gt;\n#include &lt;absl/container/internal/btree_container.h&gt;\n#include &lt;absl/container/internal/unordered_set_members_test.h&gt;\n#include &lt;absl/container/internal/node_slot_policy.h&gt;\n#include &lt;absl/strings/substitute.h&gt;\n#include &lt;absl/strings/escaping.h&gt;\n#include &lt;absl/strings/str_cat.h&gt;\n#include &lt;absl/strings/str_join.h&gt;\n#include &lt;absl/strings/str_format.h&gt;\n#include &lt;absl/strings/numbers.h&gt;\n#include &lt;absl/strings/cord.h&gt;\n#include &lt;absl/strings/cord_test_helpers.h&gt;\n#include &lt;absl/strings/str_split.h&gt;\n#include &lt;absl/strings/string_view.h&gt;\n#include &lt;absl/strings/ascii.h&gt;\n#include &lt;absl/strings/cordz_test_helpers.h&gt;\n#include &lt;absl/strings/str_replace.h&gt;\n#include &lt;absl/strings/cord_analysis.h&gt;\n#include &lt;absl/strings/match.h&gt;\n#include &lt;absl/strings/charconv.h&gt;\n#include &lt;absl/strings/strip.h&gt;\n#include &lt;absl/strings/cord_buffer.h&gt;\n#include &lt;absl/strings/internal/escaping.h&gt;\n#include &lt;absl/strings/internal/cord_rep_crc.h&gt;\n#include &lt;absl/strings/internal/pow10_helper.h&gt;\n#include &lt;absl/strings/internal/cordz_update_scope.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree.h&gt;\n#include &lt;absl/strings/internal/numbers_test_common.h&gt;\n#include &lt;absl/strings/internal/memutil.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring_reader.h&gt;\n#include &lt;absl/strings/internal/cord_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_flat.h&gt;\n#include &lt;absl/strings/internal/cordz_handle.h&gt;\n#include &lt;absl/strings/internal/cord_rep_consume.h&gt;\n#include &lt;absl/strings/internal/resize_uninitialized.h&gt;\n#include &lt;absl/strings/internal/cordz_update_tracker.h&gt;\n#include &lt;absl/strings/internal/char_map.h&gt;\n#include &lt;absl/strings/internal/cord_data_edge.h&gt;\n#include &lt;absl/strings/internal/charconv_parse.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_reader.h&gt;\n#include &lt;absl/strings/internal/ostringstream.h&gt;\n#include &lt;absl/strings/internal/str_split_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_test_util.h&gt;\n#include &lt;absl/strings/internal/str_join_internal.h&gt;\n#include &lt;absl/strings/internal/cordz_functions.h&gt;\n#include &lt;absl/strings/internal/cordz_sample_token.h&gt;\n#include &lt;absl/strings/internal/charconv_bigint.h&gt;\n#include &lt;absl/strings/internal/escaping_test_common.h&gt;\n#include &lt;absl/strings/internal/string_constant.h&gt;\n#include &lt;absl/strings/internal/cordz_statistics.h&gt;\n#include &lt;absl/strings/internal/cordz_info.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring.h&gt;\n#include &lt;absl/strings/internal/utf8.h&gt;\n#include &lt;absl/strings/internal/stl_type_traits.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_navigator.h&gt;\n#include &lt;absl/strings/internal/str_format/arg.h&gt;\n#include &lt;absl/strings/internal/str_format/extension.h&gt;\n#include &lt;absl/strings/internal/str_format/checker.h&gt;\n#include &lt;absl/strings/internal/str_format/output.h&gt;\n#include &lt;absl/strings/internal/str_format/bind.h&gt;\n#include &lt;absl/strings/internal/str_format/parser.h&gt;\n#include &lt;absl/strings/internal/str_format/float_conversion.h&gt;\n#include &lt;absl/flags/config.h&gt;\n#include &lt;absl/flags/flag.h&gt;\n#include &lt;absl/flags/declare.h&gt;\n#include &lt;absl/flags/parse.h&gt;\n#include &lt;absl/flags/usage_config.h&gt;\n#include &lt;absl/flags/usage.h&gt;\n#include &lt;absl/flags/commandlineflag.h&gt;\n#include &lt;absl/flags/reflection.h&gt;\n#include &lt;absl/flags/marshalling.h&gt;\n#include &lt;absl/flags/internal/sequence_lock.h&gt;\n#include &lt;absl/flags/internal/flag.h&gt;\n#include &lt;absl/flags/internal/program_name.h&gt;\n#include &lt;absl/flags/internal/private_handle_accessor.h&gt;\n#include &lt;absl/flags/internal/parse.h&gt;\n#include &lt;absl/flags/internal/usage.h&gt;\n#include &lt;absl/flags/internal/commandlineflag.h&gt;\n#include &lt;absl/flags/internal/registry.h&gt;\n#include &lt;absl/flags/internal/flag_msvc.inc&gt;\n#include &lt;absl/flags/internal/path_util.h&gt;\n#include &lt;absl/debugging/stacktrace.h&gt;\n#include &lt;absl/debugging/symbolize.h&gt;\n#include &lt;absl/debugging/leak_check.h&gt;\n#include &lt;absl/debugging/failure_signal_handler.h&gt;\n#include &lt;absl/debugging/symbolize_win32.inc&gt;\n#include &lt;absl/debugging/symbolize_emscripten.inc&gt;\n#include &lt;absl/debugging/symbolize_darwin.inc&gt;\n#include &lt;absl/debugging/symbolize_elf.inc&gt;\n#include &lt;absl/debugging/symbolize_unimplemented.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_powerpc-inl.inc&gt;\n#include &lt;absl/debugging/internal/symbolize.h&gt;\n#include &lt;absl/debugging/internal/address_is_readable.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_x86-inl.inc&gt;\n#include &lt;absl/debugging/internal/vdso_support.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_win32-inl.inc&gt;\n#include &lt;absl/debugging/internal/stack_consumption.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_riscv-inl.inc&gt;\n#include &lt;absl/debugging/internal/examine_stack.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_aarch64-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_config.h&gt;\n#include &lt;absl/debugging/internal/demangle.h&gt;\n#include &lt;absl/debugging/internal/elf_mem_image.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_emscripten-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_arm-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_unimplemented-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_generic-inl.inc&gt;\n#include &lt;absl/time/civil_time.h&gt;\n#include &lt;absl/time/time.h&gt;\n#include &lt;absl/time/clock.h&gt;\n#include &lt;absl/time/internal/get_current_time_chrono.inc&gt;\n#include &lt;absl/time/internal/get_current_time_posix.inc&gt;\n#include &lt;absl/time/internal/test_util.h&gt;\n#include &lt;absl/time/internal/zoneinfo.inc&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_if.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_info.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_impl.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_fixed.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_libc.h&gt;\n#include &lt;absl/time/internal/cctz/src/tzfile.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_posix.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/zone_info_source.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time_detail.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/time_zone.h&gt;\n#include &lt;absl/meta/type_traits.h&gt;\n#include &lt;absl/functional/any_invocable.h&gt;\n#include &lt;absl/functional/function_ref.h&gt;\n#include &lt;absl/functional/bind_front.h&gt;\n#include &lt;absl/functional/internal/front_binder.h&gt;\n#include &lt;absl/functional/internal/any_invocable.h&gt;\n#include &lt;absl/functional/internal/function_ref.h&gt;\n#include &lt;absl/status/status_payload_printer.h&gt;\n#include &lt;absl/status/statusor.h&gt;\n#include &lt;absl/status/status.h&gt;\n#include &lt;absl/status/internal/statusor_internal.h&gt;\n#include &lt;absl/status/internal/status_internal.h&gt;\n#include &lt;absl/random/bit_gen_ref.h&gt;\n#include &lt;absl/random/exponential_distribution.h&gt;\n#include &lt;absl/random/distributions.h&gt;\n#include &lt;absl/random/bernoulli_distribution.h&gt;\n#include &lt;absl/random/log_uniform_int_distribution.h&gt;\n#include &lt;absl/random/random.h&gt;\n#include &lt;absl/random/gaussian_distribution.h&gt;\n#include &lt;absl/random/seed_gen_exception.h&gt;\n#include &lt;absl/random/beta_distribution.h&gt;\n#include &lt;absl/random/poisson_distribution.h&gt;\n#include &lt;absl/random/zipf_distribution.h&gt;\n#include &lt;absl/random/uniform_int_distribution.h&gt;\n#include &lt;absl/random/mocking_bit_gen.h&gt;\n#include &lt;absl/random/seed_sequences.h&gt;\n#include &lt;absl/random/uniform_real_distribution.h&gt;\n#include &lt;absl/random/discrete_distribution.h&gt;\n#include &lt;absl/random/mock_distributions.h&gt;\n#include &lt;absl/random/internal/fastmath.h&gt;\n#include &lt;absl/random/internal/fast_uniform_bits.h&gt;\n#include &lt;absl/random/internal/salted_seed_seq.h&gt;\n#include &lt;absl/random/internal/chi_square.h&gt;\n#include &lt;absl/random/internal/randen_traits.h&gt;\n#include &lt;absl/random/internal/pool_urbg.h&gt;\n#include &lt;absl/random/internal/distribution_caller.h&gt;\n#include &lt;absl/random/internal/mock_helpers.h&gt;\n#include &lt;absl/random/internal/traits.h&gt;\n#include &lt;absl/random/internal/seed_material.h&gt;\n#include &lt;absl/random/internal/uniform_helper.h&gt;\n#include &lt;absl/random/internal/sequence_urbg.h&gt;\n#include &lt;absl/random/internal/generate_real.h&gt;\n#include &lt;absl/random/internal/nonsecure_base.h&gt;\n#include &lt;absl/random/internal/platform.h&gt;\n#include &lt;absl/random/internal/pcg_engine.h&gt;\n#include &lt;absl/random/internal/mock_overload_set.h&gt;\n#include &lt;absl/random/internal/explicit_seed_seq.h&gt;\n#include &lt;absl/random/internal/iostream_state_saver.h&gt;\n#include &lt;absl/random/internal/randen_hwaes.h&gt;\n#include &lt;absl/random/internal/wide_multiply.h&gt;\n#include &lt;absl/random/internal/randen_detect.h&gt;\n#include &lt;absl/random/internal/randen_slow.h&gt;\n#include &lt;absl/random/internal/randen_engine.h&gt;\n#include &lt;absl/random/internal/randen.h&gt;\n#include &lt;absl/random/internal/distribution_test_util.h&gt;\n#include &lt;absl/random/internal/nanobenchmark.h&gt;\n#include &lt;absl/types/variant.h&gt;\n#include &lt;absl/types/bad_variant_access.h&gt;\n#include &lt;absl/types/bad_optional_access.h&gt;\n#include &lt;absl/types/span.h&gt;\n#include &lt;absl/types/bad_any_cast.h&gt;\n#include &lt;absl/types/optional.h&gt;\n#include &lt;absl/types/compare.h&gt;\n#include &lt;absl/types/any.h&gt;\n#include &lt;absl/types/internal/variant.h&gt;\n#include &lt;absl/types/internal/conformance_archetype.h&gt;\n#include &lt;absl/types/internal/parentheses.h&gt;\n#include &lt;absl/types/internal/conformance_testing_helpers.h&gt;\n#include &lt;absl/types/internal/conformance_aliases.h&gt;\n#include &lt;absl/types/internal/span.h&gt;\n#include &lt;absl/types/internal/transform_args.h&gt;\n#include &lt;absl/types/internal/optional.h&gt;\n#include &lt;absl/types/internal/conformance_testing.h&gt;\n#include &lt;absl/types/internal/conformance_profile.h&gt;\n#include &lt;absl/synchronization/blocking_counter.h&gt;\n#include &lt;absl/synchronization/mutex.h&gt;\n#include &lt;absl/synchronization/barrier.h&gt;\n#include &lt;absl/synchronization/notification.h&gt;\n#include &lt;absl/synchronization/internal/graphcycles.h&gt;\n#include &lt;absl/synchronization/internal/futex.h&gt;\n#include &lt;absl/synchronization/internal/waiter.h&gt;\n#include &lt;absl/synchronization/internal/create_thread_identity.h&gt;\n#include &lt;absl/synchronization/internal/kernel_timeout.h&gt;\n#include &lt;absl/synchronization/internal/per_thread_sem.h&gt;\n#include &lt;absl/synchronization/internal/thread_pool.h&gt;\n#include &lt;absl/utility/utility.h&gt;\n#include &lt;absl/memory/memory.h&gt;\n#include &lt;absl/numeric/int128_have_intrinsic.inc&gt;\n#include &lt;absl/numeric/bits.h&gt;\n#include &lt;absl/numeric/int128_no_intrinsic.inc&gt;\n#include &lt;absl/numeric/int128.h&gt;\n#include &lt;absl/numeric/internal/representation.h&gt;\n#include &lt;absl/numeric/internal/bits.h&gt;\n#include &lt;absl/profiling/internal/periodic_sampler.h&gt;\n#include &lt;absl/profiling/internal/exponential_biased.h&gt;\n#include &lt;absl/profiling/internal/sample_recorder.h&gt;\n#include &lt;absl/algorithm/algorithm.h&gt;\n#include &lt;absl/algorithm/container.h&gt;\n#include &lt;absl/hash/hash.h&gt;\n#include &lt;absl/hash/hash_testing.h&gt;\n#include &lt;absl/hash/internal/hash.h&gt;\n#include &lt;absl/hash/internal/low_level_hash.h&gt;\n#include &lt;absl/hash/internal/city.h&gt;\n#include &lt;absl/hash/internal/spy_hash_state.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/abseil/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/c-ares/","title":"c-ares/1.18.1","text":""},{"location":"packages/v1_46_3/c-ares/#using-the-c-ares-conan-package","title":"Using the c-ares Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate c-ares in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#using-c-ares-with-cmake","title":"Using c-ares with CMake","text":""},{"location":"packages/v1_46_3/c-ares/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use c-ares in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global c-ares::cares CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(c-ares_project C)\n\nfind_package(c-ares)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To install c-ares/1.18.1, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the c-ares Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the c-ares cares component, through the c-ares::cares target.</p> <pre><code>...\n# Link just to c-ares cares component\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To check all the available components for c-ares Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#using-c-ares-with-visual-studio","title":"Using c-ares with Visual Studio","text":""},{"location":"packages/v1_46_3/c-ares/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#using-c-ares-with-autotools-and-pkg-config","title":"Using c-ares with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/c-ares/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/c-ares/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the libcares.pc file (and the ones corresponding to c-ares dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags c-ares)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l c-ares)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other c-ares)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the c-ares Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for c-ares Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#declared-components-for-c-ares","title":"Declared components for c-ares","text":"<p>These are all the declared components for the c-ares Conan package: * Component cares:   * CMake target name: <code>c-ares::cares</code>   * pkg-config .pc file: libcares.pc   * Links to libraries: cares   * Systems libs: rt   * Preprocessor definitions: <code>CARES_STATICLIB</code></p> <p></p>"},{"location":"packages/v1_46_3/c-ares/#exposed-header-files-for-c-ares","title":"Exposed header files for c-ares","text":"<pre><code>#include &lt;ares_nameser.h&gt;\n#include &lt;ares_build.h&gt;\n#include &lt;ares_dns.h&gt;\n#include &lt;ares.h&gt;\n#include &lt;ares_version.h&gt;\n#include &lt;ares_rules.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/c-ares/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/googleapis/","title":"googleapis/cci.20220711","text":""},{"location":"packages/v1_46_3/googleapis/#googleapiscci20220711-dependencies","title":"googleapis/cci.20220711 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_46_3/googleapis/#using-the-googleapis-conan-package","title":"Using the googleapis Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate googleapis in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/googleapis/#using-googleapis-with-cmake","title":"Using googleapis with CMake","text":""},{"location":"packages/v1_46_3/googleapis/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use googleapis in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global googleapis::googleapis CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(googleapis_project CXX)\n\nfind_package(googleapis)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} googleapis::googleapis)\n</code></pre> <p></p> <p>To install googleapis/cci.20220711, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/googleapis/#using-googleapis-with-visual-studio","title":"Using googleapis with Visual Studio","text":""},{"location":"packages/v1_46_3/googleapis/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/googleapis/#using-googleapis-with-autotools-and-pkg-config","title":"Using googleapis with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/googleapis/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/googleapis/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the googleapis.pc file (and the ones corresponding to googleapis dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags googleapis)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l googleapis)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other googleapis)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/googleapis/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/googleapis/#exposed-header-files-for-googleapis","title":"Exposed header files for googleapis","text":"<pre><code>#include &lt;google/container/v1beta1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1alpha1/cluster_service.pb.h&gt;\n#include &lt;google/apps/script/type/addon_widget_set.pb.h&gt;\n#include &lt;google/apps/script/type/extension_point.pb.h&gt;\n#include &lt;google/apps/script/type/script_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/slides/slides_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/calendar/calendar_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/docs/docs_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/drive/drive_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/sheets/sheets_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/gmail/gmail_addon_manifest.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/resources.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/analytics_admin.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/data.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/analytics_data_api.pb.h&gt;\n#include &lt;google/cloud/extended_operations.pb.h&gt;\n#include &lt;google/cloud/speech/v1/resource.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech_adaptation.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/order.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/procurement_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/logging/v1/runtime_log.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/environment.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/execution.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/event.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance_config.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/managed_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/runtime.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/schedule.pb.h&gt;\n#include &lt;google/cloud/redis/v1beta1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/redis/v1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/filestore/v1/cloud_filestore_service.pb.h&gt;\n#include &lt;google/cloud/dataproc/logging/autoscaler_log.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/autoscaling_policies.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/operations.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/shared.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/jobs.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/clusters.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/workflow_templates.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/batches.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/task.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/queue.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/target.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/cloudtasks.pb.h&gt;\n#include &lt;google/cloud/stream/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_io.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_processor_service.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/functions/v2alpha/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v1/operations.pb.h&gt;\n#include &lt;google/cloud/functions/v1/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2beta/functions.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_databases.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_backup_runs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_ssl_certs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instances.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_operations.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_flags.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instance_names.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v1/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/constraint.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/checker.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/explanations.pb.h&gt;\n#include &lt;google/cloud/kms/v1/service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/ekm_service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/resources.pb.h&gt;\n#include &lt;google/cloud/iap/v1/service.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v2/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_bindings.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/organizations.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_keys.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/projects.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_values.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/service.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/resources.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/service.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/resources.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/batch.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company.pb.h&gt;\n#include &lt;google/cloud/talent/v4/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/cursor.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/common.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/admin.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/subscriber.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/topic_stats.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/logging/v1/g_suite_add_ons_log_entry.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/v1/gsuiteaddons.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/service.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/enums.pb.h&gt;\n#include &lt;google/cloud/dataform/v1alpha2/dataform.pb.h&gt;\n#include &lt;google/cloud/recaptchaenterprise/v1/recaptchaenterprise.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/tether.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/connection.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/saas_instance_payload.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/notification_service_payload.pb.h&gt;\n#include &lt;google/cloud/vmmigration/v1/vmmigration.pb.h&gt;\n#include &lt;google/cloud/resourcesettings/v1/resource_settings.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/service_binding.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tcp_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/grpc_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tls_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/http_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/mesh.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/video_stitcher_service.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/stitch_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/sessions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/ad_tag_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/companions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/slates.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/cdn_keys.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/events.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/services.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/resources.pb.h&gt;\n#include &lt;google/cloud/video/livestream/logging/v1/logs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/service.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/outputs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search_service.pb.h&gt;\n#include &lt;google/cloud/vision/v1/web_detection.pb.h&gt;\n#include &lt;google/cloud/vision/v1/image_annotator.pb.h&gt;\n#include &lt;google/cloud/vision/v1/text_annotation.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search.pb.h&gt;\n#include &lt;google/cloud/vision/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/provisioning_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_models.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/job.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/cloudscheduler.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/target.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/trace.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/connectivity_test.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/reachability.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/volume.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/gkebackup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup_plan.pb.h&gt;\n#include &lt;google/cloud/common/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/audit/audit_log.pb.h&gt;\n#include &lt;google/cloud/translate/v3/translation_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/instance_os_policies_compliance.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/config_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/config_common.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/nfs_share.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/instance.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/volume.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/baremetalsolution.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/lun.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/network.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/job.pb.h&gt;\n#include &lt;google/cloud/batch/v1/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1/job.pb.h&gt;\n#include &lt;google/cloud/ids/v1/ids.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_service.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/common_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_service.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/operations.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/image_versions.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/environments.pb.h&gt;\n#include &lt;google/cloud/clouddms/logging/v1/clouddms_platform_logs.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms_resources.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms.pb.h&gt;\n#include &lt;google/cloud/location/locations.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_render_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/rollout_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/target_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/log_enums.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/deliverypipeline_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/cloud_deploy.pb.h&gt;\n#include &lt;google/cloud/certificatemanager/v1/certificate_manager.pb.h&gt;\n#include &lt;google/cloud/accessapproval/v1/accessapproval.pb.h&gt;\n#include &lt;google/cloud/aiplatform/logging/prediction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_schema.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/hyperparameter_tuning_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/entity_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_monitoring_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/value.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_selector.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/machine_resources.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/execution.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/training_pipeline.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/vizier_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_labeling_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_item.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/batch_prediction_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/artifact.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/completion_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/env_var.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_run.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/io.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_data.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_index_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_time_series.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_online_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation_slice.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_store.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/manual_batch_tuning_parameters.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_failure_policy.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/user_action_reference.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/event.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/unmanaged_container_model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/custom_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_deployment_monitoring_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/encryption_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/types.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/operation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/study.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/accelerator_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/lineage_subgraph.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migration_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_experiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/context.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation_metadata.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migratable_resource.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/saved_query.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_model_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_regression.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/export_evaluated_data_items_config.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_tables.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_classification.pb.h&gt;\n#include &lt;google/cloud/datafusion/v1/datafusion.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/resource.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/resource.pb.h&gt;\n#include &lt;google/cloud/metastore/v1alpha/metastore.pb.h&gt;\n#include &lt;google/cloud/metastore/logging/v1/log_streams.pb.h&gt;\n#include &lt;google/cloud/metastore/v1/metastore.pb.h&gt;\n#include &lt;google/cloud/texttospeech/v1/cloud_tts.pb.h&gt;\n#include &lt;google/cloud/workflows/type/engine_call.pb.h&gt;\n#include &lt;google/cloud/workflows/type/executions_system.pb.h&gt;\n#include &lt;google/cloud/workflows/v1/workflows.pb.h&gt;\n#include &lt;google/cloud/workflows/executions/v1/executions.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/regulatoryintercept/logging/v1/regulatory_intercept_ack_log_entry.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1beta1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/common.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms.pb.h&gt;\n#include &lt;google/cloud/domains/v1/domains.pb.h&gt;\n#include &lt;google/cloud/tpu/v1/cloud_tpu.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text.pb.h&gt;\n#include &lt;google/cloud/automl/v1/service.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_segment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/operations.pb.h&gt;\n#include &lt;google/cloud/automl/v1/data_items.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_payload.pb.h&gt;\n#include &lt;google/cloud/automl/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/automl/v1/detection.pb.h&gt;\n#include &lt;google/cloud/automl/v1/io.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/translation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/image.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/automl/v1/classification.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_extraction.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model.pb.h&gt;\n#include &lt;google/cloud/automl/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/automl/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config_error.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_addon.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/crawled_url.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_error_trace.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_type_stats.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/web_security_scanner.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_warning_trace.pb.h&gt;\n#include &lt;google/cloud/bigquery/connection/v1/connection.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/transfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/datatransfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/logging/v1/audit_data.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/standard_sql.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/encryption_config.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model.pb.h&gt;\n#include &lt;google/cloud/bigquery/reservation/v1/reservation.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/common/common.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/v1beta1/dataexchange.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/read_options.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_error_details.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_metrics.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_entities.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_service.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/translation_config.pb.h&gt;\n#include &lt;google/cloud/shell/v1/cloudshell.pb.h&gt;\n#include &lt;google/cloud/networkanalyzer/logging/v1/analyzer_log.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/iam_binding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_message.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/access.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mute_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/securitycenter_service.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/contact_details.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/resource.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/indicator.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/file.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/source.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/finding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mitre_attack.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/process.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/organization_settings.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/connection.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/bigquery_export.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/compliance.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/asset.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/run_asset_discovery_response.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/external_system.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/security_marks.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/exfiltration.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/folder.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1alpha2/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1beta1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/service.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/feature.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/multiclusteringress/multiclusteringress.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/configmanagement/configmanagement.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway_service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/logging/v1/secret_event.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/resources.pb.h&gt;\n#include &lt;google/cloud/channel/v1/service.pb.h&gt;\n#include &lt;google/cloud/channel/v1/operations.pb.h&gt;\n#include &lt;google/cloud/channel/v1/products.pb.h&gt;\n#include &lt;google/cloud/channel/v1/offers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/subscriber_event.pb.h&gt;\n#include &lt;google/cloud/channel/v1/common.pb.h&gt;\n#include &lt;google/cloud/channel/v1/entitlements.pb.h&gt;\n#include &lt;google/cloud/channel/v1/channel_partner_links.pb.h&gt;\n#include &lt;google/cloud/channel/v1/customers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/repricing.pb.h&gt;\n#include &lt;google/cloud/asset/v1/assets.pb.h&gt;\n#include &lt;google/cloud/asset/v1/asset_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/prediction_service.pb.h&gt;\n#include &lt;google/cloud/run/v2/service.pb.h&gt;\n#include &lt;google/cloud/run/v2/condition.pb.h&gt;\n#include &lt;google/cloud/run/v2/vendor_settings.pb.h&gt;\n#include &lt;google/cloud/run/v2/k8s.min.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision.pb.h&gt;\n#include &lt;google/cloud/run/v2/traffic_target.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision_template.pb.h&gt;\n#include &lt;google/cloud/videointelligence/v1/video_intelligence.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/common_fields.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/rules.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/transactions.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/resolutions.pb.h&gt;\n#include &lt;google/cloud/gkeconnect/gateway/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/eventarc/publishing/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/eventarc.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/trigger.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/discovery.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel_connection.pb.h&gt;\n#include &lt;google/cloud/memcache/v1/cloud_memcache.pb.h&gt;\n#include &lt;google/cloud/oslogin/common/common.pb.h&gt;\n#include &lt;google/cloud/oslogin/v1/oslogin.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/gcs_fileset_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/bigquery.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/datacatalog.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/timestamps.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/common.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/usage.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/dataplex_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/schema.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/table_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanager.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/search.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/data_source.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/tags.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanagerserialization.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/physical_schema.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream_resources.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/service.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vpcaccess/v1/vpc_access.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientgateways/v1/client_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnections/v1/app_connections_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/resource_info.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connectors_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connector_instance_config.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appgateways/v1/app_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientconnectorservices/v1/client_connector_services_service.pb.h&gt;\n#include &lt;google/cloud/webrisk/v1/webrisk.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/async_model.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/fleet_routing.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_model.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_dataset.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/recommender/logging/v1/action_log.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_billing.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_catalog.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_service.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_model.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/lookup_service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/namespace.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/registration_service.pb.h&gt;\n#include &lt;google/cloud/language/v1/language_service.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/resources.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/contact_center_insights.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/service.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/logs.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/metadata.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/resources.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/content.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/analyze.pb.h&gt;\n#include &lt;google/cloud/iot/v1/device_manager.pb.h&gt;\n#include &lt;google/cloud/iot/v1/resources.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/authentication_service.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/mfa_info.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/account_management_service.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/hub.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_events.pb.h&gt;\n#include &lt;google/devtools/build/v1/publish_build_event.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_status.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/action.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_processing_error.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configured_target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/common.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/upload_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_set.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage_summary.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configuration.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_file_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_upload.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/download_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/test_suite.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/invocation.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/controller.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/data.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/debugger.pb.h&gt;\n#include &lt;google/devtools/cloudbuild/v1/cloudbuild.pb.h&gt;\n#include &lt;google/devtools/cloudprofiler/v2/profiler.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v1/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/tracing.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/service.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/package.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/version.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/tag.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/file.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/apt_artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/repository.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/settings.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/yum_artifact.pb.h&gt;\n#include &lt;google/devtools/source/v1/source_context.pb.h&gt;\n#include &lt;google/devtools/testing/v1/application_details.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_environment_discovery.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_execution.pb.h&gt;\n#include &lt;google/devtools/containeranalysis/v1/containeranalysis.pb.h&gt;\n#include &lt;google/example/library/v1/library.pb.h&gt;\n#include &lt;google/streetview/publish/v1/streetview_publish.pb.h&gt;\n#include &lt;google/streetview/publish/v1/rpcmessages.pb.h&gt;\n#include &lt;google/streetview/publish/v1/resources.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/dlp.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/storage.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/xychart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/text.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/layouts.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table_display_options.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/common.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/alertchart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboards_service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/metrics.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/logs_panel.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard_filter.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/collapsible_group.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/widget.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/drilldowns.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/scorecard.pb.h&gt;\n#include &lt;google/monitoring/v3/span_context.pb.h&gt;\n#include &lt;google/monitoring/v3/alert_service.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service.pb.h&gt;\n#include &lt;google/monitoring/v3/group_service.pb.h&gt;\n#include &lt;google/monitoring/v3/query_service.pb.h&gt;\n#include &lt;google/monitoring/v3/notification.pb.h&gt;\n#include &lt;google/monitoring/v3/metric.pb.h&gt;\n#include &lt;google/monitoring/v3/dropped_labels.pb.h&gt;\n#include &lt;google/monitoring/v3/alert.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime.pb.h&gt;\n#include &lt;google/monitoring/v3/common.pb.h&gt;\n#include &lt;google/monitoring/v3/notification_service.pb.h&gt;\n#include &lt;google/monitoring/v3/metric_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service_service.pb.h&gt;\n#include &lt;google/monitoring/v3/group.pb.h&gt;\n#include &lt;google/monitoring/v3/mutation_record.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scope.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scopes.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/environment.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/jobs.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/snapshots.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/metrics.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/templates.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/messages.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/streaming.pb.h&gt;\n#include &lt;google/geo/type/viewport.pb.h&gt;\n#include &lt;google/api/field_behavior.pb.h&gt;\n#include &lt;google/api/service.pb.h&gt;\n#include &lt;google/api/routing.pb.h&gt;\n#include &lt;google/api/annotations.pb.h&gt;\n#include &lt;google/api/metric.pb.h&gt;\n#include &lt;google/api/httpbody.pb.h&gt;\n#include &lt;google/api/system_parameter.pb.h&gt;\n#include &lt;google/api/consumer.pb.h&gt;\n#include &lt;google/api/visibility.pb.h&gt;\n#include &lt;google/api/endpoint.pb.h&gt;\n#include &lt;google/api/distribution.pb.h&gt;\n#include &lt;google/api/backend.pb.h&gt;\n#include &lt;google/api/usage.pb.h&gt;\n#include &lt;google/api/control.pb.h&gt;\n#include &lt;google/api/source_info.pb.h&gt;\n#include &lt;google/api/billing.pb.h&gt;\n#include &lt;google/api/documentation.pb.h&gt;\n#include &lt;google/api/monitored_resource.pb.h&gt;\n#include &lt;google/api/resource.pb.h&gt;\n#include &lt;google/api/launch_stage.pb.h&gt;\n#include &lt;google/api/config_change.pb.h&gt;\n#include &lt;google/api/quota.pb.h&gt;\n#include &lt;google/api/client.pb.h&gt;\n#include &lt;google/api/label.pb.h&gt;\n#include &lt;google/api/context.pb.h&gt;\n#include &lt;google/api/logging.pb.h&gt;\n#include &lt;google/api/monitoring.pb.h&gt;\n#include &lt;google/api/http.pb.h&gt;\n#include &lt;google/api/auth.pb.h&gt;\n#include &lt;google/api/log.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/resources.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/servicemanager.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/service_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/check_error.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/quota_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/distribution.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/log_entry.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/metric_value.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/operation.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/http_request.pb.h&gt;\n#include &lt;google/api/servicecontrol/v2/service_controller.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/value.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/decl.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/source.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/expr.pb.h&gt;\n#include &lt;google/api/expr/conformance/v1alpha1/conformance_service.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/value.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/explain.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/syntax.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/checked.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/resources.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/serviceusage.pb.h&gt;\n#include &lt;google/chromeos/uidetection/v1/ui_detection.pb.h&gt;\n#include &lt;google/type/color.pb.h&gt;\n#include &lt;google/type/latlng.pb.h&gt;\n#include &lt;google/type/quaternion.pb.h&gt;\n#include &lt;google/type/decimal.pb.h&gt;\n#include &lt;google/type/timeofday.pb.h&gt;\n#include &lt;google/type/phone_number.pb.h&gt;\n#include &lt;google/type/calendar_period.pb.h&gt;\n#include &lt;google/type/dayofweek.pb.h&gt;\n#include &lt;google/type/date.pb.h&gt;\n#include &lt;google/type/postal_address.pb.h&gt;\n#include &lt;google/type/expr.pb.h&gt;\n#include &lt;google/type/month.pb.h&gt;\n#include &lt;google/type/fraction.pb.h&gt;\n#include &lt;google/type/money.pb.h&gt;\n#include &lt;google/type/datetime.pb.h&gt;\n#include &lt;google/type/interval.pb.h&gt;\n#include &lt;google/chat/logging/v1/chat_app_log_entry.pb.h&gt;\n#include &lt;google/pubsub/v1/schema.pb.h&gt;\n#include &lt;google/pubsub/v1/pubsub.pb.h&gt;\n#include &lt;google/partner/aistreams/v1alpha1/aistreams.pb.h&gt;\n#include &lt;google/maps/routing/v2/maneuver.pb.h&gt;\n#include &lt;google/maps/routing/v2/speed_reading_interval.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_travel_mode.pb.h&gt;\n#include &lt;google/maps/routing/v2/polyline.pb.h&gt;\n#include &lt;google/maps/routing/v2/waypoint.pb.h&gt;\n#include &lt;google/maps/routing/v2/location.pb.h&gt;\n#include &lt;google/maps/routing/v2/fallback_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_passes.pb.h&gt;\n#include &lt;google/maps/routing/v2/routes_service.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routing/v2/units.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/route.pb.h&gt;\n#include &lt;google/maps/routing/v2/routing_preference.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_modifiers.pb.h&gt;\n#include &lt;google/maps/routing/v2/navigation_instruction.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/polyline.pb.h&gt;\n#include &lt;google/maps/routes/v1/waypoint.pb.h&gt;\n#include &lt;google/maps/routes/v1/fallback_info.pb.h&gt;\n#include &lt;google/maps/routes/v1/toll_passes.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_matrix_element.pb.h&gt;\n#include &lt;google/maps/routes/v1/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routes/v1/route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/custom_route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_route_matrix_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_search_values.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_lookup_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_match.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_identifier.pb.h&gt;\n#include &lt;google/maps/roads/v1op/roads.pb.h&gt;\n#include &lt;google/iam/admin/v1/iam.pb.h&gt;\n#include &lt;google/iam/admin/v1/audit_data.pb.h&gt;\n#include &lt;google/iam/v1/iam_policy.pb.h&gt;\n#include &lt;google/iam/v1/policy.pb.h&gt;\n#include &lt;google/iam/v1/options.pb.h&gt;\n#include &lt;google/iam/v1/logging/audit_data.pb.h&gt;\n#include &lt;google/iam/v2beta/deny.pb.h&gt;\n#include &lt;google/iam/v2beta/policy.pb.h&gt;\n#include &lt;google/iam/credentials/v1/common.pb.h&gt;\n#include &lt;google/iam/credentials/v1/iamcredentials.pb.h&gt;\n#include &lt;google/networking/trafficdirector/type/traffic_director_log_entry.pb.h&gt;\n#include &lt;google/logging/type/log_severity.pb.h&gt;\n#include &lt;google/logging/type/http_request.pb.h&gt;\n#include &lt;google/logging/v2/log_entry.pb.h&gt;\n#include &lt;google/logging/v2/logging_metrics.pb.h&gt;\n#include &lt;google/logging/v2/logging.pb.h&gt;\n#include &lt;google/logging/v2/logging_config.pb.h&gt;\n#include &lt;google/datastore/admin/v1/datastore_admin.pb.h&gt;\n#include &lt;google/datastore/admin/v1/migration.pb.h&gt;\n#include &lt;google/datastore/admin/v1/index.pb.h&gt;\n#include &lt;google/datastore/v1/entity.pb.h&gt;\n#include &lt;google/datastore/v1/datastore.pb.h&gt;\n#include &lt;google/datastore/v1/query.pb.h&gt;\n#include &lt;google/appengine/logging/v1/request_log.pb.h&gt;\n#include &lt;google/appengine/v1/app_yaml.pb.h&gt;\n#include &lt;google/appengine/v1/firewall.pb.h&gt;\n#include &lt;google/appengine/v1/instance.pb.h&gt;\n#include &lt;google/appengine/v1/service.pb.h&gt;\n#include &lt;google/appengine/v1/certificate.pb.h&gt;\n#include &lt;google/appengine/v1/domain_mapping.pb.h&gt;\n#include &lt;google/appengine/v1/appengine.pb.h&gt;\n#include &lt;google/appengine/v1/deployed_files.pb.h&gt;\n#include &lt;google/appengine/v1/location.pb.h&gt;\n#include &lt;google/appengine/v1/version.pb.h&gt;\n#include &lt;google/appengine/v1/network_settings.pb.h&gt;\n#include &lt;google/appengine/v1/audit_data.pb.h&gt;\n#include &lt;google/appengine/v1/deploy.pb.h&gt;\n#include &lt;google/appengine/v1/operation.pb.h&gt;\n#include &lt;google/appengine/v1/application.pb.h&gt;\n#include &lt;google/appengine/v1/domain.pb.h&gt;\n#include &lt;google/appengine/legacy/audit_data.pb.h&gt;\n#include &lt;google/actions/type/datetime_range.pb.h&gt;\n#include &lt;google/actions/type/date_range.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/type/device_resources.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_policy.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_context_manager.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/gcp_user_access_binding.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_level.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/service_perimeter.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/instance.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/table.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_table_admin.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/common.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_instance_admin.pb.h&gt;\n#include &lt;google/bigtable/v2/data.pb.h&gt;\n#include &lt;google/bigtable/v2/bigtable.pb.h&gt;\n#include &lt;google/bigtable/v2/response_params.pb.h&gt;\n#include &lt;google/firestore/admin/v1/index.pb.h&gt;\n#include &lt;google/firestore/admin/v1/location.pb.h&gt;\n#include &lt;google/firestore/admin/v1/operation.pb.h&gt;\n#include &lt;google/firestore/admin/v1/database.pb.h&gt;\n#include &lt;google/firestore/admin/v1/field.pb.h&gt;\n#include &lt;google/firestore/admin/v1/firestore_admin.pb.h&gt;\n#include &lt;google/firestore/v1/firestore.pb.h&gt;\n#include &lt;google/firestore/v1/common.pb.h&gt;\n#include &lt;google/firestore/v1/write.pb.h&gt;\n#include &lt;google/firestore/v1/query.pb.h&gt;\n#include &lt;google/firestore/v1/document.pb.h&gt;\n#include &lt;google/firestore/bundle/bundle.pb.h&gt;\n#include &lt;google/storage/v1/storage_resources.pb.h&gt;\n#include &lt;google/storage/v1/storage.pb.h&gt;\n#include &lt;google/storage/v2/storage.pb.h&gt;\n#include &lt;google/longrunning/operations.pb.h&gt;\n#include &lt;google/rpc/status.pb.h&gt;\n#include &lt;google/rpc/code.pb.h&gt;\n#include &lt;google/rpc/error_details.pb.h&gt;\n#include &lt;google/rpc/context/attribute_context.pb.h&gt;\n#include &lt;google/spanner/admin/instance/v1/spanner_instance_admin.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/backup.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/common.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/spanner_database_admin.pb.h&gt;\n#include &lt;google/spanner/v1/type.pb.h&gt;\n#include &lt;google/spanner/v1/keys.pb.h&gt;\n#include &lt;google/spanner/v1/transaction.pb.h&gt;\n#include &lt;google/spanner/v1/commit_response.pb.h&gt;\n#include &lt;google/spanner/v1/mutation.pb.h&gt;\n#include &lt;google/spanner/v1/query_plan.pb.h&gt;\n#include &lt;google/spanner/v1/result_set.pb.h&gt;\n#include &lt;google/spanner/v1/spanner.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer_types.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance.pb.h&gt;\n#include &lt;grafeas/v1/intoto_statement.pb.h&gt;\n#include &lt;grafeas/v1/provenance.pb.h&gt;\n#include &lt;grafeas/v1/deployment.pb.h&gt;\n#include &lt;grafeas/v1/upgrade.pb.h&gt;\n#include &lt;grafeas/v1/attestation.pb.h&gt;\n#include &lt;grafeas/v1/common.pb.h&gt;\n#include &lt;grafeas/v1/package.pb.h&gt;\n#include &lt;grafeas/v1/cvss.pb.h&gt;\n#include &lt;grafeas/v1/grafeas.pb.h&gt;\n#include &lt;grafeas/v1/build.pb.h&gt;\n#include &lt;grafeas/v1/intoto_provenance.pb.h&gt;\n#include &lt;grafeas/v1/discovery.pb.h&gt;\n#include &lt;grafeas/v1/image.pb.h&gt;\n#include &lt;grafeas/v1/compliance.pb.h&gt;\n#include &lt;grafeas/v1/vulnerability.pb.h&gt;\n#include &lt;grafeas/v1/severity.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance_zero_two.pb.h&gt;\n#include &lt;grafeas/v1/dsse_attestation.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/googleapis/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/grpc-proto/","title":"grpc-proto/cci.20220627","text":""},{"location":"packages/v1_46_3/grpc-proto/#grpc-protocci20220627-dependencies","title":"grpc-proto/cci.20220627 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_46_3/grpc-proto/#using-the-grpc-proto-conan-package","title":"Using the grpc-proto Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc-proto in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#using-grpc-proto-with-cmake","title":"Using grpc-proto with CMake","text":""},{"location":"packages/v1_46_3/grpc-proto/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc-proto in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc-proto::grpc-proto CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc-proto_project CXX)\n\nfind_package(grpc-proto)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc-proto::grpc-proto)\n</code></pre> <p></p> <p>To install grpc-proto/cci.20220627, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#using-grpc-proto-with-visual-studio","title":"Using grpc-proto with Visual Studio","text":""},{"location":"packages/v1_46_3/grpc-proto/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#using-grpc-proto-with-autotools-and-pkg-config","title":"Using grpc-proto with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/grpc-proto/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc-proto.pc file (and the ones corresponding to grpc-proto dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc-proto)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc-proto)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc-proto)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/grpc-proto/#exposed-header-files-for-grpc-proto","title":"Exposed header files for grpc-proto","text":"<pre><code>#include &lt;grpc/channelz/v1/channelz.pb.h&gt;\n#include &lt;grpc/gcp/handshaker.pb.h&gt;\n#include &lt;grpc/gcp/transport_security_common.pb.h&gt;\n#include &lt;grpc/gcp/altscontext.pb.h&gt;\n#include &lt;grpc/core/stats.pb.h&gt;\n#include &lt;grpc/health/v1/health.pb.h&gt;\n#include &lt;grpc/reflection/v1alpha/reflection.pb.h&gt;\n#include &lt;grpc/reflection/v1/reflection.pb.h&gt;\n#include &lt;grpc/service_config/service_config.pb.h&gt;\n#include &lt;grpc/testing/stats.pb.h&gt;\n#include &lt;grpc/testing/benchmark_service.pb.h&gt;\n#include &lt;grpc/testing/control.pb.h&gt;\n#include &lt;grpc/testing/worker_service.pb.h&gt;\n#include &lt;grpc/testing/payloads.pb.h&gt;\n#include &lt;grpc/testing/messages.pb.h&gt;\n#include &lt;grpc/testing/report_qps_scenario_service.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls_config.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls.pb.h&gt;\n#include &lt;grpc/binlog/v1/binarylog.pb.h&gt;\n#include &lt;grpc/lb/v1/load_balancer.pb.h&gt;\n#include &lt;grpc/lb/v1/load_reporter.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/grpc-proto/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/grpc/","title":"grpc/1.46.3","text":""},{"location":"packages/v1_46_3/grpc/#grpc1463-setup-with-artifactory","title":"grpc/1.46.3 setup with artifactory","text":"<p>For Conan 1.13 and up, use the following command to activate the revision feature:</p> <p><pre><code>export CONAN_REVISIONS_ENABLED=1\n</code></pre> For your Conan command line client to work with this Conan repository, you first need to add the repository to your client configuration using the following command:</p> <pre><code>conan remote add armv7-armv8-x86_64-linux-thommyho http://artifactory.dns.army:8081/artifactory/api/conan/armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p>No user login required: anonymous read access is always granted!</p> <p>To install the dependencies defined in your project's conanfile.txt from an Artifactory Conan repository, use the following command:</p> <pre><code>conan install . grpc/1.46.3@ -r armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/grpc/#grpc1463-dependencies","title":"grpc/1.46.3 dependencies","text":"<ul> <li>abseil/20220623.0</li> <li>c-ares/1.18.1</li> <li>openssl/1.1.1s</li> <li>re2/20220601</li> <li>zlib/1.2.13</li> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>grpc-proto/cci.20220627</li> </ul>"},{"location":"packages/v1_46_3/grpc/#using-the-grpc-conan-package","title":"Using the grpc Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#using-grpc-with-cmake","title":"Using grpc with CMake","text":""},{"location":"packages/v1_46_3/grpc/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.46.3\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc::grpc CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc_project CXX)\n\nfind_package(gRPC)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc::grpc)\n</code></pre> <p></p> <p>To install grpc/1.46.3, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the grpc Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the grpc address_sorting component, through the gRPC::address_sorting target.</p> <pre><code>...\n# Link just to grpc address_sorting component\ntarget_link_libraries(${PROJECT_NAME} gRPC::address_sorting)\n</code></pre> <p></p> <p>To check all the available components for grpc Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_46_3/grpc/#libcmakeconan_trickgrpc_cpp_plugincmake","title":"lib/cmake/conan_trick/grpc_cpp_plugin.cmake","text":"<pre><code>if(NOT TARGET gRPC::grpc_cpp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CPP_PLUGIN_PROGRAM NAMES grpc_cpp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CPP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CPP_PLUGIN_PROGRAM\n#         NAMES grpc_cpp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CPP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CPP_PLUGIN_PROGRAM \"${GRPC_CPP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_cpp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_cpp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CPP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_csharp_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_csharp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CSHARP_PLUGIN_PROGRAM NAMES grpc_csharp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CSHARP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CSHARP_PLUGIN_PROGRAM\n#         NAMES grpc_csharp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CSHARP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CSHARP_PLUGIN_PROGRAM \"${GRPC_CSHARP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_csharp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_csharp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CSHARP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_node_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_node_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_NODE_PLUGIN_PROGRAM NAMES grpc_node_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_NODE_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_NODE_PLUGIN_PROGRAM\n#         NAMES grpc_node_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_NODE_PLUGIN_PROGRAM)\nget_filename_component(GRPC_NODE_PLUGIN_PROGRAM \"${GRPC_NODE_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_node_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_node_plugin PROPERTY IMPORTED_LOCATION ${GRPC_NODE_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_objective_c_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_objective_c_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM NAMES grpc_objective_c_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_OBJECTIVE_C_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\n#         NAMES grpc_objective_c_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM)\nget_filename_component(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM \"${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_objective_c_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_objective_c_plugin PROPERTY IMPORTED_LOCATION ${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_php_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_php_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PHP_PLUGIN_PROGRAM NAMES grpc_php_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PHP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PHP_PLUGIN_PROGRAM\n#         NAMES grpc_php_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PHP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PHP_PLUGIN_PROGRAM \"${GRPC_PHP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_php_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_php_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PHP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_python_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_python_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PYTHON_PLUGIN_PROGRAM NAMES grpc_python_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PYTHON_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PYTHON_PLUGIN_PROGRAM\n#         NAMES grpc_python_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PYTHON_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PYTHON_PLUGIN_PROGRAM \"${GRPC_PYTHON_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_python_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_python_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PYTHON_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_ruby_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_ruby_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_RUBY_PLUGIN_PROGRAM NAMES grpc_ruby_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_RUBY_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_RUBY_PLUGIN_PROGRAM\n#         NAMES grpc_ruby_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_RUBY_PLUGIN_PROGRAM)\nget_filename_component(GRPC_RUBY_PLUGIN_PROGRAM \"${GRPC_RUBY_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_ruby_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_ruby_plugin PROPERTY IMPORTED_LOCATION ${GRPC_RUBY_PLUGIN_PROGRAM})\nendif()\nendif()\n</code></pre>"},{"location":"packages/v1_46_3/grpc/#using-grpc-with-visual-studio","title":"Using grpc with Visual Studio","text":""},{"location":"packages/v1_46_3/grpc/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.46.3\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#using-grpc-with-autotools-and-pkg-config","title":"Using grpc with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/grpc/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.46.3\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/grpc/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc.pc file (and the ones corresponding to grpc dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc/1.46.3\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the grpc Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for grpc Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#declared-components-for-grpc","title":"Declared components for grpc","text":"<p>These are all the declared components for the grpc Conan package: * Component address_sorting:   * CMake target name: <code>gRPC::address_sorting</code>   * pkg-config .pc file: address_sorting.pc   * Links to libraries: address_sorting   * Systems libs: m, pthread * Component gpr:   * CMake target name: <code>gRPC::gpr</code>   * pkg-config .pc file: gpr.pc   * Requires other components: upb, abseil::absl_base, abseil::absl_memory, abseil::absl_status, abseil::absl_str_format, abseil::absl_strings, abseil::absl_synchronization, abseil::absl_time, abseil::absl_optional   * Links to libraries: gpr   * Systems libs: m, pthread * Component _grpc:   * CMake target name: <code>gRPC::grpc</code>   * pkg-config .pc file: grpc.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_bind_front, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, abseil::absl_random_random, c-ares::cares, openssl::crypto, openssl::ssl, re2::re2, zlib::zlib   * Links to libraries: grpc   * Systems libs: m, pthread * Component grpc++:   * CMake target name: <code>gRPC::grpc++</code>   * pkg-config .pc file: grpc++.pc   * Requires other components: _grpc, protobuf::libprotobuf   * Links to libraries: grpc++   * Systems libs: m, pthread * Component grpc++_alts:   * CMake target name: <code>gRPC::grpc++_alts</code>   * pkg-config .pc file: grpc++_alts.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_alts   * Systems libs: m, pthread * Component grpc++_error_details:   * CMake target name: <code>gRPC::grpc++_error_details</code>   * pkg-config .pc file: grpc++_error_details.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_error_details   * Systems libs: m, pthread * Component upb:   * CMake target name: <code>gRPC::upb</code>   * pkg-config .pc file: upb.pc   * Links to libraries: upb   * Systems libs: m, pthread * Component grpc_plugin_support:   * CMake target name: <code>gRPC::grpc_plugin_support</code>   * pkg-config .pc file: grpc_plugin_support.pc   * Requires other components: protobuf::libprotoc, protobuf::libprotobuf   * Links to libraries: grpc_plugin_support   * Systems libs: m, pthread * Component grpc_unsecure:   * CMake target name: <code>gRPC::grpc_unsecure</code>   * pkg-config .pc file: grpc_unsecure.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, c-ares::cares, re2::re2, zlib::zlib, abseil::absl_random_random   * Links to libraries: grpc_unsecure   * Systems libs: m, pthread * Component grpc++_unsecure:   * CMake target name: <code>gRPC::grpc++_unsecure</code>   * pkg-config .pc file: grpc++_unsecure.pc   * Requires other components: grpc_unsecure, protobuf::libprotobuf   * Links to libraries: grpc++_unsecure   * Systems libs: m, pthread * Component grpc++_reflection:   * CMake target name: <code>gRPC::grpc++_reflection</code>   * pkg-config .pc file: grpc++_reflection.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpc++_reflection   * Systems libs: m, pthread * Component grpcpp_channelz:   * CMake target name: <code>gRPC::grpcpp_channelz</code>   * pkg-config .pc file: grpcpp_channelz.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpcpp_channelz   * Systems libs: m, pthread * Component grpc_execs:   * CMake target name: <code>grpc::grpc_execs</code>   * pkg-config .pc file: grpc-grpc_execs.pc</p> <p></p>"},{"location":"packages/v1_46_3/grpc/#exposed-header-files-for-grpc","title":"Exposed header files for grpc","text":"<pre><code>#include &lt;grpc/slice.h&gt;\n#include &lt;grpc/byte_buffer_reader.h&gt;\n#include &lt;grpc/grpc.h&gt;\n#include &lt;grpc/load_reporting.h&gt;\n#include &lt;grpc/grpc_security.h&gt;\n#include &lt;grpc/grpc_security_constants.h&gt;\n#include &lt;grpc/compression.h&gt;\n#include &lt;grpc/fork.h&gt;\n#include &lt;grpc/byte_buffer.h&gt;\n#include &lt;grpc/census.h&gt;\n#include &lt;grpc/status.h&gt;\n#include &lt;grpc/slice_buffer.h&gt;\n#include &lt;grpc/grpc_posix.h&gt;\n#include &lt;grpc/support/atm_windows.h&gt;\n#include &lt;grpc/support/sync_posix.h&gt;\n#include &lt;grpc/support/string_util.h&gt;\n#include &lt;grpc/support/log.h&gt;\n#include &lt;grpc/support/sync_abseil.h&gt;\n#include &lt;grpc/support/cpu.h&gt;\n#include &lt;grpc/support/log_windows.h&gt;\n#include &lt;grpc/support/time.h&gt;\n#include &lt;grpc/support/port_platform.h&gt;\n#include &lt;grpc/support/atm.h&gt;\n#include &lt;grpc/support/sync.h&gt;\n#include &lt;grpc/support/thd_id.h&gt;\n#include &lt;grpc/support/atm_gcc_sync.h&gt;\n#include &lt;grpc/support/sync_windows.h&gt;\n#include &lt;grpc/support/workaround_list.h&gt;\n#include &lt;grpc/support/sync_generic.h&gt;\n#include &lt;grpc/support/atm_gcc_atomic.h&gt;\n#include &lt;grpc/support/sync_custom.h&gt;\n#include &lt;grpc/support/alloc.h&gt;\n#include &lt;grpc/impl/codegen/atm_windows.h&gt;\n#include &lt;grpc/impl/codegen/slice.h&gt;\n#include &lt;grpc/impl/codegen/sync_posix.h&gt;\n#include &lt;grpc/impl/codegen/log.h&gt;\n#include &lt;grpc/impl/codegen/sync_abseil.h&gt;\n#include &lt;grpc/impl/codegen/gpr_slice.h&gt;\n#include &lt;grpc/impl/codegen/port_platform.h&gt;\n#include &lt;grpc/impl/codegen/atm.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer_reader.h&gt;\n#include &lt;grpc/impl/codegen/sync.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_sync.h&gt;\n#include &lt;grpc/impl/codegen/sync_windows.h&gt;\n#include &lt;grpc/impl/codegen/sync_generic.h&gt;\n#include &lt;grpc/impl/codegen/connectivity_state.h&gt;\n#include &lt;grpc/impl/codegen/fork.h&gt;\n#include &lt;grpc/impl/codegen/grpc_types.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_atomic.h&gt;\n#include &lt;grpc/impl/codegen/sync_custom.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc/impl/codegen/compression_types.h&gt;\n#include &lt;grpc/impl/codegen/gpr_types.h&gt;\n#include &lt;grpc/impl/codegen/status.h&gt;\n#include &lt;grpc/impl/codegen/propagation_bits.h&gt;\n#include &lt;grpc/event_engine/endpoint_config.h&gt;\n#include &lt;grpc/event_engine/event_engine.h&gt;\n#include &lt;grpc/event_engine/port.h&gt;\n#include &lt;grpc/event_engine/memory_request.h&gt;\n#include &lt;grpc/event_engine/memory_allocator.h&gt;\n#include &lt;grpc/event_engine/internal/memory_allocator_impl.h&gt;\n#include &lt;grpc++/grpc++.h&gt;\n#include &lt;grpc++/create_channel.h&gt;\n#include &lt;grpc++/resource_quota.h&gt;\n#include &lt;grpc++/create_channel_posix.h&gt;\n#include &lt;grpc++/alarm.h&gt;\n#include &lt;grpc++/channel.h&gt;\n#include &lt;grpc++/client_context.h&gt;\n#include &lt;grpc++/health_check_service_interface.h&gt;\n#include &lt;grpc++/server_context.h&gt;\n#include &lt;grpc++/completion_queue.h&gt;\n#include &lt;grpc++/server_builder.h&gt;\n#include &lt;grpc++/server.h&gt;\n#include &lt;grpc++/server_posix.h&gt;\n#include &lt;grpc++/security/credentials.h&gt;\n#include &lt;grpc++/security/auth_metadata_processor.h&gt;\n#include &lt;grpc++/security/server_credentials.h&gt;\n#include &lt;grpc++/security/auth_context.h&gt;\n#include &lt;grpc++/support/async_unary_call.h&gt;\n#include &lt;grpc++/support/slice.h&gt;\n#include &lt;grpc++/support/config.h&gt;\n#include &lt;grpc++/support/status_code_enum.h&gt;\n#include &lt;grpc++/support/channel_arguments.h&gt;\n#include &lt;grpc++/support/time.h&gt;\n#include &lt;grpc++/support/stub_options.h&gt;\n#include &lt;grpc++/support/async_stream.h&gt;\n#include &lt;grpc++/support/string_ref.h&gt;\n#include &lt;grpc++/support/sync_stream.h&gt;\n#include &lt;grpc++/support/byte_buffer.h&gt;\n#include &lt;grpc++/support/error_details.h&gt;\n#include &lt;grpc++/support/status.h&gt;\n#include &lt;grpc++/generic/async_generic_service.h&gt;\n#include &lt;grpc++/generic/generic_stub.h&gt;\n#include &lt;grpc++/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpc++/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_plugin.h&gt;\n#include &lt;grpc++/impl/call.h&gt;\n#include &lt;grpc++/impl/server_initializer.h&gt;\n#include &lt;grpc++/impl/channel_argument_option.h&gt;\n#include &lt;grpc++/impl/service_type.h&gt;\n#include &lt;grpc++/impl/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/rpc_method.h&gt;\n#include &lt;grpc++/impl/grpc_library.h&gt;\n#include &lt;grpc++/impl/serialization_traits.h&gt;\n#include &lt;grpc++/impl/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/slice.h&gt;\n#include &lt;grpc++/impl/codegen/config.h&gt;\n#include &lt;grpc++/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpc++/impl/codegen/time.h&gt;\n#include &lt;grpc++/impl/codegen/proto_utils.h&gt;\n#include &lt;grpc++/impl/codegen/call.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen.h&gt;\n#include &lt;grpc++/impl/codegen/metadata_map.h&gt;\n#include &lt;grpc++/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpc++/impl/codegen/client_context.h&gt;\n#include &lt;grpc++/impl/codegen/channel_interface.h&gt;\n#include &lt;grpc++/impl/codegen/stub_options.h&gt;\n#include &lt;grpc++/impl/codegen/call_hook.h&gt;\n#include &lt;grpc++/impl/codegen/service_type.h&gt;\n#include &lt;grpc++/impl/codegen/server_interface.h&gt;\n#include &lt;grpc++/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_method.h&gt;\n#include &lt;grpc++/impl/codegen/async_stream.h&gt;\n#include &lt;grpc++/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpc++/impl/codegen/server_context.h&gt;\n#include &lt;grpc++/impl/codegen/string_ref.h&gt;\n#include &lt;grpc++/impl/codegen/sync_stream.h&gt;\n#include &lt;grpc++/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc++/impl/codegen/grpc_library.h&gt;\n#include &lt;grpc++/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue.h&gt;\n#include &lt;grpc++/impl/codegen/status.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/security/auth_context.h&gt;\n#include &lt;grpcpp/xds_server_builder.h&gt;\n#include &lt;grpcpp/create_channel.h&gt;\n#include &lt;grpcpp/resource_quota.h&gt;\n#include &lt;grpcpp/grpcpp.h&gt;\n#include &lt;grpcpp/create_channel_posix.h&gt;\n#include &lt;grpcpp/alarm.h&gt;\n#include &lt;grpcpp/channel.h&gt;\n#include &lt;grpcpp/client_context.h&gt;\n#include &lt;grpcpp/health_check_service_interface.h&gt;\n#include &lt;grpcpp/create_channel_binder.h&gt;\n#include &lt;grpcpp/server_context.h&gt;\n#include &lt;grpcpp/completion_queue.h&gt;\n#include &lt;grpcpp/server_builder.h&gt;\n#include &lt;grpcpp/server.h&gt;\n#include &lt;grpcpp/server_posix.h&gt;\n#include &lt;grpcpp/security/credentials.h&gt;\n#include &lt;grpcpp/security/tls_certificate_verifier.h&gt;\n#include &lt;grpcpp/security/tls_credentials_options.h&gt;\n#include &lt;grpcpp/security/auth_metadata_processor.h&gt;\n#include &lt;grpcpp/security/server_credentials.h&gt;\n#include &lt;grpcpp/security/binder_security_policy.h&gt;\n#include &lt;grpcpp/security/tls_certificate_provider.h&gt;\n#include &lt;grpcpp/security/binder_credentials.h&gt;\n#include &lt;grpcpp/security/auth_context.h&gt;\n#include &lt;grpcpp/security/authorization_policy_provider.h&gt;\n#include &lt;grpcpp/security/alts_util.h&gt;\n#include &lt;grpcpp/security/alts_context.h&gt;\n#include &lt;grpcpp/support/async_unary_call.h&gt;\n#include &lt;grpcpp/support/slice.h&gt;\n#include &lt;grpcpp/support/config.h&gt;\n#include &lt;grpcpp/support/message_allocator.h&gt;\n#include &lt;grpcpp/support/validate_service_config.h&gt;\n#include &lt;grpcpp/support/client_interceptor.h&gt;\n#include &lt;grpcpp/support/server_interceptor.h&gt;\n#include &lt;grpcpp/support/status_code_enum.h&gt;\n#include &lt;grpcpp/support/channel_arguments.h&gt;\n#include &lt;grpcpp/support/time.h&gt;\n#include &lt;grpcpp/support/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/support/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/support/stub_options.h&gt;\n#include &lt;grpcpp/support/interceptor.h&gt;\n#include &lt;grpcpp/support/async_stream.h&gt;\n#include &lt;grpcpp/support/string_ref.h&gt;\n#include &lt;grpcpp/support/sync_stream.h&gt;\n#include &lt;grpcpp/support/byte_buffer.h&gt;\n#include &lt;grpcpp/support/client_callback.h&gt;\n#include &lt;grpcpp/support/error_details.h&gt;\n#include &lt;grpcpp/support/status.h&gt;\n#include &lt;grpcpp/support/server_callback.h&gt;\n#include &lt;grpcpp/support/method_handler.h&gt;\n#include &lt;grpcpp/generic/async_generic_service.h&gt;\n#include &lt;grpcpp/generic/generic_stub.h&gt;\n#include &lt;grpcpp/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpcpp/ext/channelz_service_plugin.h&gt;\n#include &lt;grpcpp/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpcpp/impl/server_builder_option.h&gt;\n#include &lt;grpcpp/impl/server_builder_plugin.h&gt;\n#include &lt;grpcpp/impl/call.h&gt;\n#include &lt;grpcpp/impl/server_initializer.h&gt;\n#include &lt;grpcpp/impl/channel_argument_option.h&gt;\n#include &lt;grpcpp/impl/service_type.h&gt;\n#include &lt;grpcpp/impl/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/rpc_method.h&gt;\n#include &lt;grpcpp/impl/grpc_library.h&gt;\n#include &lt;grpcpp/impl/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback_handlers.h&gt;\n#include &lt;grpcpp/impl/codegen/slice.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/config.h&gt;\n#include &lt;grpcpp/impl/codegen/async_generic_service.h&gt;\n#include &lt;grpcpp/impl/codegen/message_allocator.h&gt;\n#include &lt;grpcpp/impl/codegen/delegating_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/client_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpcpp/impl/codegen/time.h&gt;\n#include &lt;grpcpp/impl/codegen/sync.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_utils.h&gt;\n#include &lt;grpcpp/impl/codegen/call.h&gt;\n#include &lt;grpcpp/impl/codegen/intercepted_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen.h&gt;\n#include &lt;grpcpp/impl/codegen/metadata_map.h&gt;\n#include &lt;grpcpp/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpcpp/impl/codegen/client_context.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/impl/codegen/channel_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/stub_options.h&gt;\n#include &lt;grpcpp/impl/codegen/call_hook.h&gt;\n#include &lt;grpcpp/impl/codegen/service_type.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_method.h&gt;\n#include &lt;grpcpp/impl/codegen/async_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpcpp/impl/codegen/server_context.h&gt;\n#include &lt;grpcpp/impl/codegen/string_ref.h&gt;\n#include &lt;grpcpp/impl/codegen/sync_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpcpp/impl/codegen/grpc_library.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor_common.h&gt;\n#include &lt;grpcpp/impl/codegen/client_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue.h&gt;\n#include &lt;grpcpp/impl/codegen/status.h&gt;\n#include &lt;grpcpp/impl/codegen/callback_common.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler.h&gt;\n#include &lt;grpcpp/impl/codegen/security/auth_context.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/grpc/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/openssl/","title":"openssl/1.1.1s","text":""},{"location":"packages/v1_46_3/openssl/#using-the-openssl-conan-package","title":"Using the openssl Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate openssl in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#using-openssl-with-cmake","title":"Using openssl with CMake","text":""},{"location":"packages/v1_46_3/openssl/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use openssl in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global openssl::openssl CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(openssl_project C)\n\nfind_package(OpenSSL)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} openssl::openssl)\n</code></pre> <p></p> <p>To install openssl/1.1.1s, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the openssl Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the openssl crypto component, through the OpenSSL::Crypto target.</p> <pre><code>...\n# Link just to openssl crypto component\ntarget_link_libraries(${PROJECT_NAME} OpenSSL::Crypto)\n</code></pre> <p></p> <p>To check all the available components for openssl Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_46_3/openssl/#libcmakeconan-official-openssl-variablescmake","title":"lib/cmake/conan-official-openssl-variables.cmake","text":"<pre><code>set(OPENSSL_FOUND TRUE)\nif(DEFINED OpenSSL_INCLUDE_DIR)\nset(OPENSSL_INCLUDE_DIR ${OpenSSL_INCLUDE_DIR})\nendif()\nif(DEFINED OpenSSL_Crypto_LIBS)\nset(OPENSSL_CRYPTO_LIBRARY ${OpenSSL_Crypto_LIBS})\nset(OPENSSL_CRYPTO_LIBRARIES ${OpenSSL_Crypto_LIBS}\n${OpenSSL_Crypto_DEPENDENCIES}\n${OpenSSL_Crypto_FRAMEWORKS}\n${OpenSSL_Crypto_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_Crypto_LIBS_RELEASE)\nset(OPENSSL_CRYPTO_LIBRARY ${openssl_OpenSSL_Crypto_LIBS_RELEASE})\nset(OPENSSL_CRYPTO_LIBRARIES ${openssl_OpenSSL_Crypto_LIBS_RELEASE}\n${openssl_OpenSSL_Crypto_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_Crypto_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_Crypto_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_SSL_LIBS)\nset(OPENSSL_SSL_LIBRARY ${OpenSSL_SSL_LIBS})\nset(OPENSSL_SSL_LIBRARIES ${OpenSSL_SSL_LIBS}\n${OpenSSL_SSL_DEPENDENCIES}\n${OpenSSL_SSL_FRAMEWORKS}\n${OpenSSL_SSL_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_SSL_LIBS_RELEASE)\nset(OPENSSL_SSL_LIBRARY ${openssl_OpenSSL_SSL_LIBS_RELEASE})\nset(OPENSSL_SSL_LIBRARIES ${openssl_OpenSSL_SSL_LIBS_RELEASE}\n${openssl_OpenSSL_SSL_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_SSL_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_SSL_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_LIBRARIES)\nset(OPENSSL_LIBRARIES ${OpenSSL_LIBRARIES})\nendif()\nif(DEFINED OpenSSL_VERSION)\nset(OPENSSL_VERSION ${OpenSSL_VERSION})\nendif()\n</code></pre>"},{"location":"packages/v1_46_3/openssl/#using-openssl-with-visual-studio","title":"Using openssl with Visual Studio","text":""},{"location":"packages/v1_46_3/openssl/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#using-openssl-with-autotools-and-pkg-config","title":"Using openssl with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/openssl/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/openssl/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the openssl.pc file (and the ones corresponding to openssl dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags openssl)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l openssl)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other openssl)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the openssl Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for openssl Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#declared-components-for-openssl","title":"Declared components for openssl","text":"<p>These are all the declared components for the openssl Conan package: * Component crypto:   * CMake target name: <code>OpenSSL::Crypto</code>   * pkg-config .pc file: libcrypto.pc   * Links to libraries: crypto   * Systems libs: dl, rt, pthread * Component ssl:   * CMake target name: <code>OpenSSL::SSL</code>   * pkg-config .pc file: libssl.pc   * Requires other components: crypto   * Links to libraries: ssl   * Systems libs: dl, pthread</p> <p></p>"},{"location":"packages/v1_46_3/openssl/#exposed-header-files-for-openssl","title":"Exposed header files for openssl","text":"<pre><code>#include &lt;openssl/e_os2.h&gt;\n#include &lt;openssl/dsaerr.h&gt;\n#include &lt;openssl/opensslconf.h&gt;\n#include &lt;openssl/conf.h&gt;\n#include &lt;openssl/crypto.h&gt;\n#include &lt;openssl/x509err.h&gt;\n#include &lt;openssl/asn1.h&gt;\n#include &lt;openssl/lhash.h&gt;\n#include &lt;openssl/des.h&gt;\n#include &lt;openssl/ocsperr.h&gt;\n#include &lt;openssl/rand_drbg.h&gt;\n#include &lt;openssl/randerr.h&gt;\n#include &lt;openssl/cmserr.h&gt;\n#include &lt;openssl/rc4.h&gt;\n#include &lt;openssl/idea.h&gt;\n#include &lt;openssl/pem.h&gt;\n#include &lt;openssl/conf_api.h&gt;\n#include &lt;openssl/err.h&gt;\n#include &lt;openssl/pkcs12err.h&gt;\n#include &lt;openssl/pemerr.h&gt;\n#include &lt;openssl/buffer.h&gt;\n#include &lt;openssl/obj_mac.h&gt;\n#include &lt;openssl/x509_vfy.h&gt;\n#include &lt;openssl/rc5.h&gt;\n#include &lt;openssl/md5.h&gt;\n#include &lt;openssl/stack.h&gt;\n#include &lt;openssl/ssl3.h&gt;\n#include &lt;openssl/bio.h&gt;\n#include &lt;openssl/ossl_typ.h&gt;\n#include &lt;openssl/aes.h&gt;\n#include &lt;openssl/modes.h&gt;\n#include &lt;openssl/dh.h&gt;\n#include &lt;openssl/rsa.h&gt;\n#include &lt;openssl/comp.h&gt;\n#include &lt;openssl/asn1_mac.h&gt;\n#include &lt;openssl/cast.h&gt;\n#include &lt;openssl/ssl2.h&gt;\n#include &lt;openssl/sslerr.h&gt;\n#include &lt;openssl/safestack.h&gt;\n#include &lt;openssl/hmac.h&gt;\n#include &lt;openssl/symhacks.h&gt;\n#include &lt;openssl/ssl.h&gt;\n#include &lt;openssl/kdferr.h&gt;\n#include &lt;openssl/bn.h&gt;\n#include &lt;openssl/srp.h&gt;\n#include &lt;openssl/buffererr.h&gt;\n#include &lt;openssl/dsa.h&gt;\n#include &lt;openssl/ecerr.h&gt;\n#include &lt;openssl/ui.h&gt;\n#include &lt;openssl/comperr.h&gt;\n#include &lt;openssl/engineerr.h&gt;\n#include &lt;openssl/store.h&gt;\n#include &lt;openssl/rand.h&gt;\n#include &lt;openssl/pkcs12.h&gt;\n#include &lt;openssl/ocsp.h&gt;\n#include &lt;openssl/pem2.h&gt;\n#include &lt;openssl/pkcs7.h&gt;\n#include &lt;openssl/async.h&gt;\n#include &lt;openssl/cterr.h&gt;\n#include &lt;openssl/asyncerr.h&gt;\n#include &lt;openssl/bnerr.h&gt;\n#include &lt;openssl/objects.h&gt;\n#include &lt;openssl/cryptoerr.h&gt;\n#include &lt;openssl/opensslv.h&gt;\n#include &lt;openssl/x509v3.h&gt;\n#include &lt;openssl/tls1.h&gt;\n#include &lt;openssl/asn1err.h&gt;\n#include &lt;openssl/dtls1.h&gt;\n#include &lt;openssl/pkcs7err.h&gt;\n#include &lt;openssl/rc2.h&gt;\n#include &lt;openssl/md4.h&gt;\n#include &lt;openssl/ts.h&gt;\n#include &lt;openssl/kdf.h&gt;\n#include &lt;openssl/txt_db.h&gt;\n#include &lt;openssl/ebcdic.h&gt;\n#include &lt;openssl/evp.h&gt;\n#include &lt;openssl/md2.h&gt;\n#include &lt;openssl/ec.h&gt;\n#include &lt;openssl/ecdh.h&gt;\n#include &lt;openssl/objectserr.h&gt;\n#include &lt;openssl/uierr.h&gt;\n#include &lt;openssl/dherr.h&gt;\n#include &lt;openssl/bioerr.h&gt;\n#include &lt;openssl/evperr.h&gt;\n#include &lt;openssl/x509.h&gt;\n#include &lt;openssl/camellia.h&gt;\n#include &lt;openssl/rsaerr.h&gt;\n#include &lt;openssl/mdc2.h&gt;\n#include &lt;openssl/cmac.h&gt;\n#include &lt;openssl/seed.h&gt;\n#include &lt;openssl/tserr.h&gt;\n#include &lt;openssl/engine.h&gt;\n#include &lt;openssl/blowfish.h&gt;\n#include &lt;openssl/conferr.h&gt;\n#include &lt;openssl/storeerr.h&gt;\n#include &lt;openssl/cms.h&gt;\n#include &lt;openssl/asn1t.h&gt;\n#include &lt;openssl/sha.h&gt;\n#include &lt;openssl/whrlpool.h&gt;\n#include &lt;openssl/srtp.h&gt;\n#include &lt;openssl/ecdsa.h&gt;\n#include &lt;openssl/ct.h&gt;\n#include &lt;openssl/x509v3err.h&gt;\n#include &lt;openssl/ripemd.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/openssl/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/protobuf/","title":"protobuf/3.21.4","text":""},{"location":"packages/v1_46_3/protobuf/#protobuf3214-dependencies","title":"protobuf/3.21.4 dependencies","text":"<ul> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_46_3/protobuf/#using-the-protobuf-conan-package","title":"Using the protobuf Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate protobuf in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#using-protobuf-with-cmake","title":"Using protobuf with CMake","text":""},{"location":"packages/v1_46_3/protobuf/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use protobuf in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global protobuf::protobuf CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(protobuf_project CXX)\n\nfind_package(protobuf)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} protobuf::protobuf)\n</code></pre> <p></p> <p>To install protobuf/3.21.4, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the protobuf Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the protobuf libprotobuf component, through the protobuf::libprotobuf target.</p> <pre><code>...\n# Link just to protobuf libprotobuf component\ntarget_link_libraries(${PROJECT_NAME} protobuf::libprotobuf)\n</code></pre> <p></p> <p>To check all the available components for protobuf Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_46_3/protobuf/#libcmakeprotobufprotobuf-generatecmake","title":"lib/cmake/protobuf/protobuf-generate.cmake","text":"<pre><code># User options\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-options.cmake\")\n\n# Depend packages\n# BEGIN CONAN PATCH\n#_protobuf_FIND_ZLIB@\n# END CONAN PATCH\n\n# Imported targets\nif(NOT TARGET protobuf::protoc)\nif(CMAKE_CROSSCOMPILING)\nfind_program(PROTOC_PROGRAM protoc PATHS ENV PATH NO_DEFAULT_PATH)\nendif()\nif(NOT PROTOC_PROGRAM)\nset(PROTOC_PROGRAM \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/protoc\")\nendif()\nget_filename_component(PROTOC_PROGRAM \"${PROTOC_PROGRAM}\" ABSOLUTE)\nset(Protobuf_PROTOC_EXECUTABLE ${PROTOC_PROGRAM} CACHE FILEPATH \"The protoc compiler\")\nadd_executable(protobuf::protoc IMPORTED)\nset_property(TARGET protobuf::protoc PROPERTY IMPORTED_LOCATION ${Protobuf_PROTOC_EXECUTABLE})\nendif()\n\n\nfunction(protobuf_generate)\ninclude(CMakeParseArguments)\n\nset(_options APPEND_PATH)\nset(_singleargs LANGUAGE OUT_VAR EXPORT_MACRO PROTOC_OUT_DIR PLUGIN PLUGIN_OPTIONS)\nif(COMMAND target_sources)\nlist(APPEND _singleargs TARGET)\nendif()\nset(_multiargs PROTOS IMPORT_DIRS GENERATE_EXTENSIONS PROTOC_OPTIONS)\n\ncmake_parse_arguments(protobuf_generate \"${_options}\" \"${_singleargs}\" \"${_multiargs}\" \"${ARGN}\")\n\nif(NOT protobuf_generate_PROTOS AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without any targets or source files\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_OUT_VAR AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without a target or output variable\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_LANGUAGE)\nset(protobuf_generate_LANGUAGE cpp)\nendif()\nstring(TOLOWER ${protobuf_generate_LANGUAGE} protobuf_generate_LANGUAGE)\n\nif(NOT protobuf_generate_PROTOC_OUT_DIR)\nset(protobuf_generate_PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR})\nendif()\n\nif(protobuf_generate_EXPORT_MACRO AND protobuf_generate_LANGUAGE STREQUAL cpp)\nset(_dll_export_decl \"dllexport_decl=${protobuf_generate_EXPORT_MACRO}\")\nendif()\n\nforeach(_option ${_dll_export_decl} ${protobuf_generate_PLUGIN_OPTIONS})\n# append comma - not using CMake lists and string replacement as users\n# might have semicolons in options\nif(_plugin_options)\nset( _plugin_options \"${_plugin_options},\")\nendif()\nset(_plugin_options \"${_plugin_options}${_option}\")\nendforeach()\n\nif(protobuf_generate_PLUGIN)\nset(_plugin \"--plugin=${protobuf_generate_PLUGIN}\")\nendif()\n\nif(NOT protobuf_generate_GENERATE_EXTENSIONS)\nif(protobuf_generate_LANGUAGE STREQUAL cpp)\nset(protobuf_generate_GENERATE_EXTENSIONS .pb.h .pb.cc)\nelseif(protobuf_generate_LANGUAGE STREQUAL python)\nset(protobuf_generate_GENERATE_EXTENSIONS _pb2.py)\nelse()\nmessage(SEND_ERROR \"Error: protobuf_generate given unknown Language ${LANGUAGE}, please provide a value for GENERATE_EXTENSIONS\")\nreturn()\nendif()\nendif()\n\nif(protobuf_generate_TARGET)\nget_target_property(_source_list ${protobuf_generate_TARGET} SOURCES)\nforeach(_file ${_source_list})\nif(_file MATCHES \"proto$\")\nlist(APPEND protobuf_generate_PROTOS ${_file})\nendif()\nendforeach()\nendif()\n\nif(NOT protobuf_generate_PROTOS)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any .proto files\")\nreturn()\nendif()\n\nif(protobuf_generate_APPEND_PATH)\n# Create an include path for each file specified\nforeach(_file ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_file} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\nlist(FIND _protobuf_include_path ${_abs_dir} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${_abs_dir})\nendif()\nendforeach()\nendif()\n\nforeach(DIR ${protobuf_generate_IMPORT_DIRS})\nget_filename_component(ABS_PATH ${DIR} ABSOLUTE)\nlist(FIND _protobuf_include_path ${ABS_PATH} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${ABS_PATH})\nendif()\nendforeach()\n\nif(NOT _protobuf_include_path)\nset(_protobuf_include_path -I ${CMAKE_CURRENT_SOURCE_DIR})\nendif()\n\nset(_generated_srcs_all)\nforeach(_proto ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_proto} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\n\nget_filename_component(_file_full_name ${_proto} NAME)\nstring(FIND \"${_file_full_name}\" \".\" _file_last_ext_pos REVERSE)\nstring(SUBSTRING \"${_file_full_name}\" 0 ${_file_last_ext_pos} _basename)\n\nset(_suitable_include_found FALSE)\nforeach(DIR ${_protobuf_include_path})\nif(NOT DIR STREQUAL \"-I\")\nfile(RELATIVE_PATH _rel_dir ${DIR} ${_abs_dir})\nstring(FIND \"${_rel_dir}\" \"../\" _is_in_parent_folder)\nif (NOT ${_is_in_parent_folder} EQUAL 0)\nset(_suitable_include_found TRUE)\nbreak()\nendif()\nendif()\nendforeach()\n\nif(NOT _suitable_include_found)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any correct proto include directory.\")\nreturn()\nendif()\n\nset(_generated_srcs)\nforeach(_ext ${protobuf_generate_GENERATE_EXTENSIONS})\nlist(APPEND _generated_srcs \"${protobuf_generate_PROTOC_OUT_DIR}/${_rel_dir}/${_basename}${_ext}\")\nendforeach()\nlist(APPEND _generated_srcs_all ${_generated_srcs})\n\nset(_comment \"Running ${protobuf_generate_LANGUAGE} protocol buffer compiler on ${_proto}\")\nif(protobuf_generate_PROTOC_OPTIONS)\nset(_comment \"${_comment}, protoc-options: ${protobuf_generate_PROTOC_OPTIONS}\")\nendif()\nif(_plugin_options)\nset(_comment \"${_comment}, plugin-options: ${_plugin_options}\")\nendif()\n\nadd_custom_command(\nOUTPUT ${_generated_srcs}\nCOMMAND protobuf::protoc\nARGS ${protobuf_generate_PROTOC_OPTIONS} --${protobuf_generate_LANGUAGE}_out ${_plugin_options}:${protobuf_generate_PROTOC_OUT_DIR} ${_plugin} ${_protobuf_include_path} ${_abs_file}\nDEPENDS ${_abs_file} protobuf::protoc\nCOMMENT ${_comment}\nVERBATIM )\nendforeach()\n\nset_source_files_properties(${_generated_srcs_all} PROPERTIES GENERATED TRUE)\nif(protobuf_generate_OUT_VAR)\nset(${protobuf_generate_OUT_VAR} ${_generated_srcs_all} PARENT_SCOPE)\nendif()\nif(protobuf_generate_TARGET)\ntarget_sources(${protobuf_generate_TARGET} PRIVATE ${_generated_srcs_all})\nendif()\n\nendfunction()\n\n# CMake FindProtobuf module compatible file\nif(protobuf_MODULE_COMPATIBLE)\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-module.cmake\")\nendif()\n\n```#### lib/cmake/protobuf/protobuf-module.cmake\n```cmake\n# This file contains backwards compatibility patches for various legacy functions and variables\n# Functions\n\nfunction(PROTOBUF_GENERATE_CPP SRCS HDRS)\ncmake_parse_arguments(protobuf_generate_cpp \"\" \"EXPORT_MACRO\" \"\" ${ARGN})\n\nset(_proto_files \"${protobuf_generate_cpp_UNPARSED_ARGUMENTS}\")\nif(NOT _proto_files)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_CPP() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE cpp EXPORT_MACRO ${protobuf_generate_cpp_EXPORT_MACRO} OUT_VAR _outvar ${_import_arg} PROTOS ${_proto_files})\n\nset(${SRCS})\nset(${HDRS})\nforeach(_file ${_outvar})\nif(_file MATCHES \"cc$\")\nlist(APPEND ${SRCS} ${_file})\nelse()\nlist(APPEND ${HDRS} ${_file})\nendif()\nendforeach()\nset(${SRCS} ${${SRCS}} PARENT_SCOPE)\nset(${HDRS} ${${HDRS}} PARENT_SCOPE)\nendfunction()\n\nfunction(PROTOBUF_GENERATE_PYTHON SRCS)\nif(NOT ARGN)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_PYTHON() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE python OUT_VAR _outvar ${_import_arg} PROTOS ${ARGN})\nset(${SRCS} ${_outvar} PARENT_SCOPE)\nendfunction()\n\n# Environment\n\n# Backwards compatibility\n# Define camel case versions of input variables\nforeach(UPPER\nPROTOBUF_SRC_ROOT_FOLDER\nPROTOBUF_IMPORT_DIRS\nPROTOBUF_DEBUG\nPROTOBUF_LIBRARY\nPROTOBUF_PROTOC_LIBRARY\nPROTOBUF_INCLUDE_DIR\nPROTOBUF_PROTOC_EXECUTABLE\nPROTOBUF_LIBRARY_DEBUG\nPROTOBUF_PROTOC_LIBRARY_DEBUG\nPROTOBUF_LITE_LIBRARY\nPROTOBUF_LITE_LIBRARY_DEBUG\n)\nif (DEFINED ${UPPER})\nstring(REPLACE \"PROTOBUF_\" \"Protobuf_\" Camel ${UPPER})\nif (NOT DEFINED ${Camel})\nset(${Camel} ${${UPPER}})\nendif()\nendif()\nendforeach()\n\nif(0)\nif(DEFINED Protobuf_SRC_ROOT_FOLDER)\nmessage(AUTHOR_WARNING \"Variable Protobuf_SRC_ROOT_FOLDER defined, but not\"\n\" used in CONFIG mode\")\nendif()\n\ninclude(SelectLibraryConfigurations)\n\n# Internal function: search for normal library as well as a debug one\n#    if the debug one is specified also include debug/optimized keywords\n#    in *_LIBRARIES variable\nfunction(_protobuf_find_libraries name filename)\nif(${name}_LIBRARIES)\n# Use result recorded by a previous call.\nelseif(${name}_LIBRARY)\n# Honor cache entry used by CMake 3.5 and lower.\nset(${name}_LIBRARIES \"${${name}_LIBRARY}\" PARENT_SCOPE)\nelseif(TARGET protobuf::lib${filename})\nget_target_property(${name}_LIBRARY_RELEASE protobuf::lib${filename}\nLOCATION_RELEASE)\nget_target_property(${name}_LIBRARY_RELWITHDEBINFO protobuf::lib${filename}\nLOCATION_RELWITHDEBINFO)\nget_target_property(${name}_LIBRARY_MINSIZEREL protobuf::lib${filename}\nLOCATION_MINSIZEREL)\nget_target_property(${name}_LIBRARY_DEBUG protobuf::lib${filename}\nLOCATION_DEBUG)\n\nselect_library_configurations(${name})\nset(${name}_LIBRARY ${${name}_LIBRARY} PARENT_SCOPE)\nset(${name}_LIBRARIES ${${name}_LIBRARIES} PARENT_SCOPE)\nendif()\nendfunction()\n\n#\n# Main.\n#\n\n# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n# for each directory where a proto file is referenced.\nif(NOT DEFINED PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(PROTOBUF_GENERATE_CPP_APPEND_PATH TRUE)\nendif()\n\n# The Protobuf library\n_protobuf_find_libraries(Protobuf protobuf)\n\n# The Protobuf Lite library\n_protobuf_find_libraries(Protobuf_LITE protobuf-lite)\n\n# The Protobuf Protoc Library\n_protobuf_find_libraries(Protobuf_PROTOC protoc)\n\n# Set the include directory\nget_target_property(Protobuf_INCLUDE_DIRS protobuf::libprotobuf\nINTERFACE_INCLUDE_DIRECTORIES)\n\n# Set the protoc Executable\nif(NOT Protobuf_PROTOC_EXECUTABLE AND TARGET protobuf::protoc)\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELEASE)\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELWITHDEBINFO)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_MINSIZEREL)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_DEBUG)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_NOCONFIG)\nendif()\nendif()\n\n# Version info variable\nset(Protobuf_VERSION \"3.21.4.0\")\n\ninclude(FindPackageHandleStandardArgs)\nFIND_PACKAGE_HANDLE_STANDARD_ARGS(Protobuf\nREQUIRED_VARS Protobuf_PROTOC_EXECUTABLE Protobuf_LIBRARIES Protobuf_INCLUDE_DIRS\nVERSION_VAR Protobuf_VERSION\n)\n\n# Backwards compatibility\nendif()\nforeach(Camel\nProtobuf_VERSION\nProtobuf_SRC_ROOT_FOLDER\nProtobuf_IMPORT_DIRS\nProtobuf_DEBUG\nProtobuf_INCLUDE_DIRS\nProtobuf_LIBRARIES\nProtobuf_PROTOC_LIBRARIES\nProtobuf_LITE_LIBRARIES\nProtobuf_LIBRARY\nProtobuf_PROTOC_LIBRARY\nProtobuf_INCLUDE_DIR\nProtobuf_PROTOC_EXECUTABLE\nProtobuf_LIBRARY_DEBUG\nProtobuf_PROTOC_LIBRARY_DEBUG\nProtobuf_LITE_LIBRARY\nProtobuf_LITE_LIBRARY_DEBUG\n)\nstring(TOUPPER ${Camel} UPPER)\nset(${UPPER} ${${Camel}})\nendforeach()\n\n```#### lib/cmake/protobuf/protobuf-options.cmake\n```cmake\n# Verbose output\noption(protobuf_VERBOSE \"Enable for verbose output\" OFF)\nmark_as_advanced(protobuf_VERBOSE)\n\n# FindProtobuf module compatible\noption(protobuf_MODULE_COMPATIBLE \"CMake built-in FindProtobuf.cmake module compatible\" OFF)\nmark_as_advanced(protobuf_MODULE_COMPATIBLE)\n</code></pre>"},{"location":"packages/v1_46_3/protobuf/#using-protobuf-with-visual-studio","title":"Using protobuf with Visual Studio","text":""},{"location":"packages/v1_46_3/protobuf/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#using-protobuf-with-autotools-and-pkg-config","title":"Using protobuf with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/protobuf/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/protobuf/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the protobuf_full_package.pc file (and the ones corresponding to protobuf dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags protobuf)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l protobuf)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other protobuf)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the protobuf Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for protobuf Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#declared-components-for-protobuf","title":"Declared components for protobuf","text":"<p>These are all the declared components for the protobuf Conan package: * Component libprotobuf:   * CMake target name: <code>protobuf::libprotobuf</code>   * pkg-config .pc file: protobuf.pc   * Requires other components: zlib::zlib   * Links to libraries: protobuf   * Systems libs: pthread, atomic * Component libprotoc:   * CMake target name: <code>protobuf::libprotoc</code>   * pkg-config .pc file: protobuf_full_package-libprotoc.pc   * Requires other components: libprotobuf   * Links to libraries: protoc</p> <p></p>"},{"location":"packages/v1_46_3/protobuf/#exposed-header-files-for-protobuf","title":"Exposed header files for protobuf","text":"<pre><code>#include &lt;google/protobuf/api.pb.h&gt;\n#include &lt;google/protobuf/field_mask.pb.h&gt;\n#include &lt;google/protobuf/generated_message_util.h&gt;\n#include &lt;google/protobuf/implicit_weak_message.h&gt;\n#include &lt;google/protobuf/any.pb.h&gt;\n#include &lt;google/protobuf/type.proto&gt;\n#include &lt;google/protobuf/text_format.h&gt;\n#include &lt;google/protobuf/descriptor.h&gt;\n#include &lt;google/protobuf/map_field.h&gt;\n#include &lt;google/protobuf/map_field_inl.h&gt;\n#include &lt;google/protobuf/arenaz_sampler.h&gt;\n#include &lt;google/protobuf/type.pb.h&gt;\n#include &lt;google/protobuf/extension_set_inl.h&gt;\n#include &lt;google/protobuf/timestamp.proto&gt;\n#include &lt;google/protobuf/struct.proto&gt;\n#include &lt;google/protobuf/duration.proto&gt;\n#include &lt;google/protobuf/arenastring.h&gt;\n#include &lt;google/protobuf/message.h&gt;\n#include &lt;google/protobuf/arena_impl.h&gt;\n#include &lt;google/protobuf/has_bits.h&gt;\n#include &lt;google/protobuf/metadata.h&gt;\n#include &lt;google/protobuf/empty.pb.h&gt;\n#include &lt;google/protobuf/map_entry.h&gt;\n#include &lt;google/protobuf/field_mask.proto&gt;\n#include &lt;google/protobuf/descriptor_database.h&gt;\n#include &lt;google/protobuf/wire_format_lite.h&gt;\n#include &lt;google/protobuf/wrappers.proto&gt;\n#include &lt;google/protobuf/struct.pb.h&gt;\n#include &lt;google/protobuf/any.proto&gt;\n#include &lt;google/protobuf/port.h&gt;\n#include &lt;google/protobuf/repeated_ptr_field.h&gt;\n#include &lt;google/protobuf/endian.h&gt;\n#include &lt;google/protobuf/generated_message_tctable_decl.h&gt;\n#include &lt;google/protobuf/generated_message_reflection.h&gt;\n#include &lt;google/protobuf/map_entry_lite.h&gt;\n#include &lt;google/protobuf/reflection_ops.h&gt;\n#include &lt;google/protobuf/metadata_lite.h&gt;\n#include &lt;google/protobuf/repeated_field.h&gt;\n#include &lt;google/protobuf/wire_format.h&gt;\n#include &lt;google/protobuf/field_access_listener.h&gt;\n#include &lt;google/protobuf/service.h&gt;\n#include &lt;google/protobuf/duration.pb.h&gt;\n#include &lt;google/protobuf/port_def.inc&gt;\n#include &lt;google/protobuf/dynamic_message.h&gt;\n#include &lt;google/protobuf/generated_enum_util.h&gt;\n#include &lt;google/protobuf/explicitly_constructed.h&gt;\n#include &lt;google/protobuf/api.proto&gt;\n#include &lt;google/protobuf/message_lite.h&gt;\n#include &lt;google/protobuf/generated_enum_reflection.h&gt;\n#include &lt;google/protobuf/map_type_handler.h&gt;\n#include &lt;google/protobuf/unknown_field_set.h&gt;\n#include &lt;google/protobuf/map_field_lite.h&gt;\n#include &lt;google/protobuf/timestamp.pb.h&gt;\n#include &lt;google/protobuf/descriptor.pb.h&gt;\n#include &lt;google/protobuf/empty.proto&gt;\n#include &lt;google/protobuf/generated_message_tctable_impl.h&gt;\n#include &lt;google/protobuf/reflection.h&gt;\n#include &lt;google/protobuf/descriptor.proto&gt;\n#include &lt;google/protobuf/wrappers.pb.h&gt;\n#include &lt;google/protobuf/parse_context.h&gt;\n#include &lt;google/protobuf/map.h&gt;\n#include &lt;google/protobuf/generated_message_bases.h&gt;\n#include &lt;google/protobuf/arena.h&gt;\n#include &lt;google/protobuf/port_undef.inc&gt;\n#include &lt;google/protobuf/source_context.proto&gt;\n#include &lt;google/protobuf/extension_set.h&gt;\n#include &lt;google/protobuf/inlined_string_field.h&gt;\n#include &lt;google/protobuf/source_context.pb.h&gt;\n#include &lt;google/protobuf/any.h&gt;\n#include &lt;google/protobuf/util/type_resolver.h&gt;\n#include &lt;google/protobuf/util/time_util.h&gt;\n#include &lt;google/protobuf/util/message_differencer.h&gt;\n#include &lt;google/protobuf/util/json_util.h&gt;\n#include &lt;google/protobuf/util/field_comparator.h&gt;\n#include &lt;google/protobuf/util/delimited_message_util.h&gt;\n#include &lt;google/protobuf/util/field_mask_util.h&gt;\n#include &lt;google/protobuf/util/type_resolver_util.h&gt;\n#include &lt;google/protobuf/stubs/macros.h&gt;\n#include &lt;google/protobuf/stubs/hash.h&gt;\n#include &lt;google/protobuf/stubs/bytestream.h&gt;\n#include &lt;google/protobuf/stubs/once.h&gt;\n#include &lt;google/protobuf/stubs/template_util.h&gt;\n#include &lt;google/protobuf/stubs/common.h&gt;\n#include &lt;google/protobuf/stubs/logging.h&gt;\n#include &lt;google/protobuf/stubs/port.h&gt;\n#include &lt;google/protobuf/stubs/callback.h&gt;\n#include &lt;google/protobuf/stubs/mutex.h&gt;\n#include &lt;google/protobuf/stubs/platform_macros.h&gt;\n#include &lt;google/protobuf/stubs/map_util.h&gt;\n#include &lt;google/protobuf/stubs/casts.h&gt;\n#include &lt;google/protobuf/stubs/stringpiece.h&gt;\n#include &lt;google/protobuf/stubs/status.h&gt;\n#include &lt;google/protobuf/stubs/stl_util.h&gt;\n#include &lt;google/protobuf/stubs/strutil.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl_lite.h&gt;\n#include &lt;google/protobuf/io/printer.h&gt;\n#include &lt;google/protobuf/io/gzip_stream.h&gt;\n#include &lt;google/protobuf/io/strtod.h&gt;\n#include &lt;google/protobuf/io/coded_stream.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream.h&gt;\n#include &lt;google/protobuf/io/tokenizer.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl.h&gt;\n#include &lt;google/protobuf/io/io_win32.h&gt;\n#include &lt;google/protobuf/compiler/plugin.h&gt;\n#include &lt;google/protobuf/compiler/command_line_interface.h&gt;\n#include &lt;google/protobuf/compiler/importer.h&gt;\n#include &lt;google/protobuf/compiler/code_generator.h&gt;\n#include &lt;google/protobuf/compiler/parser.h&gt;\n#include &lt;google/protobuf/compiler/plugin.proto&gt;\n#include &lt;google/protobuf/compiler/plugin.pb.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_names.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_generator.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_doc_comment.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_options.h&gt;\n#include &lt;google/protobuf/compiler/php/php_generator.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_helpers.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/cpp_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/names.h&gt;\n#include &lt;google/protobuf/compiler/cpp/helpers.h&gt;\n#include &lt;google/protobuf/compiler/cpp/file.h&gt;\n#include &lt;google/protobuf/compiler/java/generator.h&gt;\n#include &lt;google/protobuf/compiler/java/kotlin_generator.h&gt;\n#include &lt;google/protobuf/compiler/java/names.h&gt;\n#include &lt;google/protobuf/compiler/java/java_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/generator.h&gt;\n#include &lt;google/protobuf/compiler/python/python_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/pyi_generator.h&gt;\n#include &lt;google/protobuf/compiler/ruby/ruby_generator.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/protobuf/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/re2/","title":"re2/20220601","text":""},{"location":"packages/v1_46_3/re2/#using-the-re2-conan-package","title":"Using the re2 Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate re2 in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/re2/#using-re2-with-cmake","title":"Using re2 with CMake","text":""},{"location":"packages/v1_46_3/re2/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use re2 in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global re2::re2 CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(re2_project CXX)\n\nfind_package(re2)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} re2::re2)\n</code></pre> <p></p> <p>To install re2/20220601, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/re2/#using-re2-with-visual-studio","title":"Using re2 with Visual Studio","text":""},{"location":"packages/v1_46_3/re2/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/re2/#using-re2-with-autotools-and-pkg-config","title":"Using re2 with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/re2/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/re2/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the re2.pc file (and the ones corresponding to re2 dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags re2)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l re2)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other re2)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/re2/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/re2/#exposed-header-files-for-re2","title":"Exposed header files for re2","text":"<pre><code>#include &lt;re2/filtered_re2.h&gt;\n#include &lt;re2/set.h&gt;\n#include &lt;re2/stringpiece.h&gt;\n#include &lt;re2/re2.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/re2/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_46_3/zlib/","title":"zlib/1.2.13","text":""},{"location":"packages/v1_46_3/zlib/#using-the-zlib-conan-package","title":"Using the zlib Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate zlib in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_46_3/zlib/#using-zlib-with-cmake","title":"Using zlib with CMake","text":""},{"location":"packages/v1_46_3/zlib/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use zlib in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global ZLIB::ZLIB CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(zlib_project C)\n\nfind_package(ZLIB)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} ZLIB::ZLIB)\n</code></pre> <p></p> <p>To install zlib/1.2.13, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/zlib/#using-zlib-with-visual-studio","title":"Using zlib with Visual Studio","text":""},{"location":"packages/v1_46_3/zlib/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_46_3/zlib/#using-zlib-with-autotools-and-pkg-config","title":"Using zlib with Autotools and pkg-config","text":""},{"location":"packages/v1_46_3/zlib/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/zlib/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the zlib.pc file (and the ones corresponding to zlib dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags zlib)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l zlib)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other zlib)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_46_3/zlib/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_46_3/zlib/#exposed-header-files-for-zlib","title":"Exposed header files for zlib","text":"<pre><code>#include &lt;zconf.h&gt;\n#include &lt;zlib.h&gt;\n</code></pre>"},{"location":"packages/v1_46_3/zlib/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:12:53.</p>"},{"location":"packages/v1_47_1/abseil/","title":"abseil/20220623.0","text":""},{"location":"packages/v1_47_1/abseil/#using-the-abseil-conan-package","title":"Using the abseil Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate abseil in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#using-abseil-with-cmake","title":"Using abseil with CMake","text":""},{"location":"packages/v1_47_1/abseil/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use abseil in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global abseil::abseil CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(abseil_project CXX)\n\nfind_package(absl)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} abseil::abseil)\n</code></pre> <p></p> <p>To install abseil/20220623.0, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the abseil Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the abseil absl_atomic_hook component, through the absl::atomic_hook target.</p> <pre><code>...\n# Link just to abseil absl_atomic_hook component\ntarget_link_libraries(${PROJECT_NAME} absl::atomic_hook)\n</code></pre> <p></p> <p>To check all the available components for abseil Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_47_1/abseil/#libcmakeconan_trickcxx_stdcmake","title":"lib/cmake/conan_trick/cxx_std.cmake","text":"<pre><code>target_compile_features(absl::atomic_hook INTERFACE cxx_std_11)\ntarget_compile_features(absl::errno_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::log_severity INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_logging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::spinlock_wait INTERFACE cxx_std_11)\ntarget_compile_features(absl::config INTERFACE cxx_std_11)\ntarget_compile_features(absl::dynamic_annotations INTERFACE cxx_std_11)\ntarget_compile_features(absl::core_headers INTERFACE cxx_std_11)\ntarget_compile_features(absl::malloc_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base INTERFACE cxx_std_11)\ntarget_compile_features(absl::throw_delegate INTERFACE cxx_std_11)\ntarget_compile_features(absl::pretty_function INTERFACE cxx_std_11)\ntarget_compile_features(absl::endian INTERFACE cxx_std_11)\ntarget_compile_features(absl::scoped_set_env INTERFACE cxx_std_11)\ntarget_compile_features(absl::strerror INTERFACE cxx_std_11)\ntarget_compile_features(absl::fast_type_id INTERFACE cxx_std_11)\ntarget_compile_features(absl::prefetch INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm_container INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup INTERFACE cxx_std_11)\ntarget_compile_features(absl::btree INTERFACE cxx_std_11)\ntarget_compile_features(absl::compressed_tuple INTERFACE cxx_std_11)\ntarget_compile_features(absl::fixed_array INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector INTERFACE cxx_std_11)\ntarget_compile_features(absl::counting_allocator INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_function_defaults INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_policy_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtablez_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug_hooks INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_slot_policy INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_common INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::layout INTERFACE cxx_std_11)\ntarget_compile_features(absl::stacktrace INTERFACE cxx_std_11)\ntarget_compile_features(absl::symbolize INTERFACE cxx_std_11)\ntarget_compile_features(absl::examine_stack INTERFACE cxx_std_11)\ntarget_compile_features(absl::failure_signal_handler INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::demangle_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::leak_check INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_path_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_program_name INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_config INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_marshalling INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_private_handle_accessor INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_reflection INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_parse INTERFACE cxx_std_11)\ntarget_compile_features(absl::any_invocable INTERFACE cxx_std_11)\ntarget_compile_features(absl::bind_front INTERFACE cxx_std_11)\ntarget_compile_features(absl::function_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::city INTERFACE cxx_std_11)\ntarget_compile_features(absl::low_level_hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::type_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::meta INTERFACE cxx_std_11)\ntarget_compile_features(absl::bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::int128 INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric_representation INTERFACE cxx_std_11)\ntarget_compile_features(absl::sample_recorder INTERFACE cxx_std_11)\ntarget_compile_features(absl::exponential_biased INTERFACE cxx_std_11)\ntarget_compile_features(absl::periodic_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_random INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_bit_gen_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_mock_helpers INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_distributions INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_gen_exception INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_sequences INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_caller INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fast_uniform_bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_seed_material INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pool_urbg INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_salted_seed_seq INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_iostream_state_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_generate_real INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_wide_multiply INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fastmath INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_nonsecure_base INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pcg_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_platform INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_slow INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_test_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_uniform_helper INTERFACE cxx_std_11)\ntarget_compile_features(absl::status INTERFACE cxx_std_11)\ntarget_compile_features(absl::statusor INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_tracker INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_functions INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_statistics INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_handle INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_info INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_sample_token INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_scope INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord INTERFACE cxx_std_11)\ntarget_compile_features(absl::graphcycles_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::kernel_timeout_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::synchronization INTERFACE cxx_std_11)\ntarget_compile_features(absl::time INTERFACE cxx_std_11)\ntarget_compile_features(absl::civil_time INTERFACE cxx_std_11)\ntarget_compile_features(absl::time_zone INTERFACE cxx_std_11)\ntarget_compile_features(absl::any INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::span INTERFACE cxx_std_11)\ntarget_compile_features(absl::optional INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_optional_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_variant_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::variant INTERFACE cxx_std_11)\ntarget_compile_features(absl::compare INTERFACE cxx_std_11)\ntarget_compile_features(absl::utility INTERFACE cxx_std_11)\n</code></pre>"},{"location":"packages/v1_47_1/abseil/#using-abseil-with-visual-studio","title":"Using abseil with Visual Studio","text":""},{"location":"packages/v1_47_1/abseil/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#using-abseil-with-autotools-and-pkg-config","title":"Using abseil with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/abseil/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/abseil/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the abseil.pc file (and the ones corresponding to abseil dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags abseil)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l abseil)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other abseil)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the abseil Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for abseil Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#declared-components-for-abseil","title":"Declared components for abseil","text":"<p>These are all the declared components for the abseil Conan package: * Component absl_atomic_hook:   * CMake target name: <code>absl::atomic_hook</code>   * pkg-config .pc file: absl_atomic_hook.pc   * Requires other components: absl_config, absl_core_headers * Component absl_errno_saver:   * CMake target name: <code>absl::errno_saver</code>   * pkg-config .pc file: absl_errno_saver.pc   * Requires other components: absl_config * Component absl_log_severity:   * CMake target name: <code>absl::log_severity</code>   * pkg-config .pc file: absl_log_severity.pc   * Requires other components: absl_core_headers   * Links to libraries: absl_log_severity * Component absl_raw_logging_internal:   * CMake target name: <code>absl::raw_logging_internal</code>   * pkg-config .pc file: absl_raw_logging_internal.pc   * Requires other components: absl_atomic_hook, absl_config, absl_core_headers, absl_errno_saver, absl_log_severity   * Links to libraries: absl_raw_logging_internal * Component absl_spinlock_wait:   * CMake target name: <code>absl::spinlock_wait</code>   * pkg-config .pc file: absl_spinlock_wait.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_errno_saver   * Links to libraries: absl_spinlock_wait * Component absl_config:   * CMake target name: <code>absl::config</code>   * pkg-config .pc file: absl_config.pc * Component absl_dynamic_annotations:   * CMake target name: <code>absl::dynamic_annotations</code>   * pkg-config .pc file: absl_dynamic_annotations.pc   * Requires other components: absl_config * Component absl_core_headers:   * CMake target name: <code>absl::core_headers</code>   * pkg-config .pc file: absl_core_headers.pc   * Requires other components: absl_config * Component absl_malloc_internal:   * CMake target name: <code>absl::malloc_internal</code>   * pkg-config .pc file: absl_malloc_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_raw_logging_internal   * Links to libraries: absl_malloc_internal   * Systems libs: pthread * Component absl_base_internal:   * CMake target name: <code>absl::base_internal</code>   * pkg-config .pc file: absl_base_internal.pc   * Requires other components: absl_config, absl_type_traits * Component absl_base:   * CMake target name: <code>absl::base</code>   * pkg-config .pc file: absl_base.pc   * Requires other components: absl_atomic_hook, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_log_severity, absl_raw_logging_internal, absl_spinlock_wait, absl_type_traits   * Links to libraries: absl_base   * Systems libs: pthread, rt * Component absl_throw_delegate:   * CMake target name: <code>absl::throw_delegate</code>   * pkg-config .pc file: absl_throw_delegate.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_throw_delegate * Component absl_pretty_function:   * CMake target name: <code>absl::pretty_function</code>   * pkg-config .pc file: absl_pretty_function.pc * Component absl_endian:   * CMake target name: <code>absl::endian</code>   * pkg-config .pc file: absl_endian.pc   * Requires other components: absl_base, absl_config, absl_core_headers * Component absl_scoped_set_env:   * CMake target name: <code>absl::scoped_set_env</code>   * pkg-config .pc file: absl_scoped_set_env.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_scoped_set_env * Component absl_strerror:   * CMake target name: <code>absl::strerror</code>   * pkg-config .pc file: absl_strerror.pc   * Requires other components: absl_config, absl_core_headers, absl_errno_saver   * Links to libraries: absl_strerror * Component absl_fast_type_id:   * CMake target name: <code>absl::fast_type_id</code>   * pkg-config .pc file: absl_fast_type_id.pc   * Requires other components: absl_config * Component absl_prefetch:   * CMake target name: <code>absl::prefetch</code>   * pkg-config .pc file: absl_prefetch.pc   * Requires other components: absl_config * Component absl_algorithm:   * CMake target name: <code>absl::algorithm</code>   * pkg-config .pc file: absl_algorithm.pc   * Requires other components: absl_config * Component absl_algorithm_container:   * CMake target name: <code>absl::algorithm_container</code>   * pkg-config .pc file: absl_algorithm_container.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_meta * Component absl_cleanup_internal:   * CMake target name: <code>absl::cleanup_internal</code>   * pkg-config .pc file: absl_cleanup_internal.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_utility * Component absl_cleanup:   * CMake target name: <code>absl::cleanup</code>   * pkg-config .pc file: absl_cleanup.pc   * Requires other components: absl_cleanup_internal, absl_config, absl_core_headers * Component absl_btree:   * CMake target name: <code>absl::btree</code>   * pkg-config .pc file: absl_btree.pc   * Requires other components: absl_container_common, absl_compare, absl_compressed_tuple, absl_container_memory, absl_cord, absl_core_headers, absl_layout, absl_memory, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits, absl_utility * Component absl_compressed_tuple:   * CMake target name: <code>absl::compressed_tuple</code>   * pkg-config .pc file: absl_compressed_tuple.pc   * Requires other components: absl_utility * Component absl_fixed_array:   * CMake target name: <code>absl::fixed_array</code>   * pkg-config .pc file: absl_fixed_array.pc   * Requires other components: absl_compressed_tuple, absl_algorithm, absl_config, absl_core_headers, absl_dynamic_annotations, absl_throw_delegate, absl_memory * Component absl_inlined_vector_internal:   * CMake target name: <code>absl::inlined_vector_internal</code>   * pkg-config .pc file: absl_inlined_vector_internal.pc   * Requires other components: absl_compressed_tuple, absl_core_headers, absl_memory, absl_span, absl_type_traits * Component absl_inlined_vector:   * CMake target name: <code>absl::inlined_vector</code>   * pkg-config .pc file: absl_inlined_vector.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_inlined_vector_internal, absl_throw_delegate, absl_memory * Component absl_counting_allocator:   * CMake target name: <code>absl::counting_allocator</code>   * pkg-config .pc file: absl_counting_allocator.pc   * Requires other components: absl_config * Component absl_flat_hash_map:   * CMake target name: <code>absl::flat_hash_map</code>   * pkg-config .pc file: absl_flat_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_flat_hash_set:   * CMake target name: <code>absl::flat_hash_set</code>   * pkg-config .pc file: absl_flat_hash_set.pc   * Requires other components: absl_container_memory, absl_hash_function_defaults, absl_raw_hash_set, absl_algorithm_container, absl_core_headers, absl_memory * Component absl_node_hash_map:   * CMake target name: <code>absl::node_hash_map</code>   * pkg-config .pc file: absl_node_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_node_hash_set:   * CMake target name: <code>absl::node_hash_set</code>   * pkg-config .pc file: absl_node_hash_set.pc   * Requires other components: absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_set, absl_algorithm_container, absl_memory * Component absl_container_memory:   * CMake target name: <code>absl::container_memory</code>   * pkg-config .pc file: absl_container_memory.pc   * Requires other components: absl_config, absl_memory, absl_type_traits, absl_utility * Component absl_hash_function_defaults:   * CMake target name: <code>absl::hash_function_defaults</code>   * pkg-config .pc file: absl_hash_function_defaults.pc   * Requires other components: absl_config, absl_cord, absl_hash, absl_strings * Component absl_hash_policy_traits:   * CMake target name: <code>absl::hash_policy_traits</code>   * pkg-config .pc file: absl_hash_policy_traits.pc   * Requires other components: absl_meta * Component absl_hashtablez_sampler:   * CMake target name: <code>absl::hashtablez_sampler</code>   * pkg-config .pc file: absl_hashtablez_sampler.pc   * Requires other components: absl_base, absl_config, absl_exponential_biased, absl_sample_recorder, absl_synchronization   * Links to libraries: absl_hashtablez_sampler * Component absl_hashtable_debug:   * CMake target name: <code>absl::hashtable_debug</code>   * pkg-config .pc file: absl_hashtable_debug.pc   * Requires other components: absl_hashtable_debug_hooks * Component absl_hashtable_debug_hooks:   * CMake target name: <code>absl::hashtable_debug_hooks</code>   * pkg-config .pc file: absl_hashtable_debug_hooks.pc   * Requires other components: absl_config * Component absl_node_slot_policy:   * CMake target name: <code>absl::node_slot_policy</code>   * pkg-config .pc file: absl_node_slot_policy.pc   * Requires other components: absl_config * Component absl_raw_hash_map:   * CMake target name: <code>absl::raw_hash_map</code>   * pkg-config .pc file: absl_raw_hash_map.pc   * Requires other components: absl_container_memory, absl_raw_hash_set, absl_throw_delegate * Component absl_container_common:   * CMake target name: <code>absl::container_common</code>   * pkg-config .pc file: absl_container_common.pc   * Requires other components: absl_type_traits * Component absl_raw_hash_set:   * CMake target name: <code>absl::raw_hash_set</code>   * pkg-config .pc file: absl_raw_hash_set.pc   * Requires other components: absl_bits, absl_compressed_tuple, absl_config, absl_container_common, absl_container_memory, absl_core_headers, absl_endian, absl_hash_policy_traits, absl_hashtable_debug_hooks, absl_memory, absl_meta, absl_optional, absl_prefetch, absl_utility, absl_hashtablez_sampler   * Links to libraries: absl_raw_hash_set * Component absl_layout:   * CMake target name: <code>absl::layout</code>   * pkg-config .pc file: absl_layout.pc   * Requires other components: absl_config, absl_core_headers, absl_meta, absl_strings, absl_span, absl_utility * Component absl_stacktrace:   * CMake target name: <code>absl::stacktrace</code>   * pkg-config .pc file: absl_stacktrace.pc   * Requires other components: absl_debugging_internal, absl_config, absl_core_headers   * Links to libraries: absl_stacktrace * Component absl_symbolize:   * CMake target name: <code>absl::symbolize</code>   * pkg-config .pc file: absl_symbolize.pc   * Requires other components: absl_debugging_internal, absl_demangle_internal, absl_base, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_strings   * Links to libraries: absl_symbolize * Component absl_examine_stack:   * CMake target name: <code>absl::examine_stack</code>   * pkg-config .pc file: absl_examine_stack.pc   * Requires other components: absl_stacktrace, absl_symbolize, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_examine_stack * Component absl_failure_signal_handler:   * CMake target name: <code>absl::failure_signal_handler</code>   * pkg-config .pc file: absl_failure_signal_handler.pc   * Requires other components: absl_examine_stack, absl_stacktrace, absl_base, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_failure_signal_handler * Component absl_debugging_internal:   * CMake target name: <code>absl::debugging_internal</code>   * pkg-config .pc file: absl_debugging_internal.pc   * Requires other components: absl_core_headers, absl_config, absl_dynamic_annotations, absl_errno_saver, absl_raw_logging_internal   * Links to libraries: absl_debugging_internal * Component absl_demangle_internal:   * CMake target name: <code>absl::demangle_internal</code>   * pkg-config .pc file: absl_demangle_internal.pc   * Requires other components: absl_base, absl_core_headers   * Links to libraries: absl_demangle_internal * Component absl_leak_check:   * CMake target name: <code>absl::leak_check</code>   * pkg-config .pc file: absl_leak_check.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_leak_check * Component absl_debugging:   * CMake target name: <code>absl::debugging</code>   * pkg-config .pc file: absl_debugging.pc   * Requires other components: absl_stacktrace, absl_leak_check * Component absl_flags_path_util:   * CMake target name: <code>absl::flags_path_util</code>   * pkg-config .pc file: absl_flags_path_util.pc   * Requires other components: absl_config, absl_strings * Component absl_flags_program_name:   * CMake target name: <code>absl::flags_program_name</code>   * pkg-config .pc file: absl_flags_program_name.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_path_util, absl_strings, absl_synchronization   * Links to libraries: absl_flags_program_name * Component absl_flags_config:   * CMake target name: <code>absl::flags_config</code>   * pkg-config .pc file: absl_flags_config.pc   * Requires other components: absl_config, absl_flags_path_util, absl_flags_program_name, absl_core_headers, absl_strings, absl_synchronization   * Links to libraries: absl_flags_config * Component absl_flags_marshalling:   * CMake target name: <code>absl::flags_marshalling</code>   * pkg-config .pc file: absl_flags_marshalling.pc   * Requires other components: absl_config, absl_core_headers, absl_log_severity, absl_optional, absl_strings, absl_str_format   * Links to libraries: absl_flags_marshalling * Component absl_flags_commandlineflag_internal:   * CMake target name: <code>absl::flags_commandlineflag_internal</code>   * pkg-config .pc file: absl_flags_commandlineflag_internal.pc   * Requires other components: absl_config, absl_dynamic_annotations, absl_fast_type_id   * Links to libraries: absl_flags_commandlineflag_internal * Component absl_flags_commandlineflag:   * CMake target name: <code>absl::flags_commandlineflag</code>   * pkg-config .pc file: absl_flags_commandlineflag.pc   * Requires other components: absl_config, absl_fast_type_id, absl_flags_commandlineflag_internal, absl_optional, absl_strings   * Links to libraries: absl_flags_commandlineflag * Component absl_flags_private_handle_accessor:   * CMake target name: <code>absl::flags_private_handle_accessor</code>   * pkg-config .pc file: absl_flags_private_handle_accessor.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_strings   * Links to libraries: absl_flags_private_handle_accessor * Component absl_flags_reflection:   * CMake target name: <code>absl::flags_reflection</code>   * pkg-config .pc file: absl_flags_reflection.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_private_handle_accessor, absl_flags_config, absl_strings, absl_synchronization, absl_flat_hash_map   * Links to libraries: absl_flags_reflection * Component absl_flags_internal:   * CMake target name: <code>absl::flags_internal</code>   * pkg-config .pc file: absl_flags_internal.pc   * Requires other components: absl_base, absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_config, absl_flags_marshalling, absl_synchronization, absl_meta, absl_utility   * Links to libraries: absl_flags_internal * Component absl_flags:   * CMake target name: <code>absl::flags</code>   * pkg-config .pc file: absl_flags.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_config, absl_flags_internal, absl_flags_reflection, absl_base, absl_core_headers, absl_strings   * Links to libraries: absl_flags * Component absl_flags_usage_internal:   * CMake target name: <code>absl::flags_usage_internal</code>   * pkg-config .pc file: absl_flags_usage_internal.pc   * Requires other components: absl_config, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_internal, absl_flags_path_util, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flat_hash_map, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage_internal * Component absl_flags_usage:   * CMake target name: <code>absl::flags_usage</code>   * pkg-config .pc file: absl_flags_usage.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_usage_internal, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage * Component absl_flags_parse:   * CMake target name: <code>absl::flags_parse</code>   * pkg-config .pc file: absl_flags_parse.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_internal, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flags_usage, absl_strings, absl_synchronization   * Links to libraries: absl_flags_parse * Component absl_any_invocable:   * CMake target name: <code>absl::any_invocable</code>   * pkg-config .pc file: absl_any_invocable.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_bind_front:   * CMake target name: <code>absl::bind_front</code>   * pkg-config .pc file: absl_bind_front.pc   * Requires other components: absl_base_internal, absl_compressed_tuple * Component absl_function_ref:   * CMake target name: <code>absl::function_ref</code>   * pkg-config .pc file: absl_function_ref.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_meta * Component absl_hash:   * CMake target name: <code>absl::hash</code>   * pkg-config .pc file: absl_hash.pc   * Requires other components: absl_city, absl_config, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_meta, absl_int128, absl_strings, absl_optional, absl_variant, absl_utility, absl_low_level_hash   * Links to libraries: absl_hash * Component absl_city:   * CMake target name: <code>absl::city</code>   * pkg-config .pc file: absl_city.pc   * Requires other components: absl_config, absl_core_headers, absl_endian   * Links to libraries: absl_city * Component absl_low_level_hash:   * CMake target name: <code>absl::low_level_hash</code>   * pkg-config .pc file: absl_low_level_hash.pc   * Requires other components: absl_bits, absl_config, absl_endian, absl_int128   * Links to libraries: absl_low_level_hash * Component absl_memory:   * CMake target name: <code>absl::memory</code>   * pkg-config .pc file: absl_memory.pc   * Requires other components: absl_core_headers, absl_meta * Component absl_type_traits:   * CMake target name: <code>absl::type_traits</code>   * pkg-config .pc file: absl_type_traits.pc   * Requires other components: absl_config * Component absl_meta:   * CMake target name: <code>absl::meta</code>   * pkg-config .pc file: absl_meta.pc   * Requires other components: absl_type_traits * Component absl_bits:   * CMake target name: <code>absl::bits</code>   * pkg-config .pc file: absl_bits.pc   * Requires other components: absl_core_headers * Component absl_int128:   * CMake target name: <code>absl::int128</code>   * pkg-config .pc file: absl_int128.pc   * Requires other components: absl_config, absl_core_headers, absl_bits   * Links to libraries: absl_int128 * Component absl_numeric:   * CMake target name: <code>absl::numeric</code>   * pkg-config .pc file: absl_numeric.pc   * Requires other components: absl_int128 * Component absl_numeric_representation:   * CMake target name: <code>absl::numeric_representation</code>   * pkg-config .pc file: absl_numeric_representation.pc   * Requires other components: absl_config * Component absl_sample_recorder:   * CMake target name: <code>absl::sample_recorder</code>   * pkg-config .pc file: absl_sample_recorder.pc   * Requires other components: absl_base, absl_synchronization * Component absl_exponential_biased:   * CMake target name: <code>absl::exponential_biased</code>   * pkg-config .pc file: absl_exponential_biased.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_exponential_biased * Component absl_periodic_sampler:   * CMake target name: <code>absl::periodic_sampler</code>   * pkg-config .pc file: absl_periodic_sampler.pc   * Requires other components: absl_core_headers, absl_exponential_biased   * Links to libraries: absl_periodic_sampler * Component absl_random_random:   * CMake target name: <code>absl::random_random</code>   * pkg-config .pc file: absl_random_random.pc   * Requires other components: absl_random_distributions, absl_random_internal_nonsecure_base, absl_random_internal_pcg_engine, absl_random_internal_pool_urbg, absl_random_internal_randen_engine, absl_random_seed_sequences * Component absl_random_bit_gen_ref:   * CMake target name: <code>absl::random_bit_gen_ref</code>   * pkg-config .pc file: absl_random_bit_gen_ref.pc   * Requires other components: absl_core_headers, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_type_traits * Component absl_random_internal_mock_helpers:   * CMake target name: <code>absl::random_internal_mock_helpers</code>   * pkg-config .pc file: absl_random_internal_mock_helpers.pc   * Requires other components: absl_fast_type_id, absl_optional * Component absl_random_distributions:   * CMake target name: <code>absl::random_distributions</code>   * pkg-config .pc file: absl_random_distributions.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_random_internal_generate_real, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_random_internal_traits, absl_random_internal_uniform_helper, absl_random_internal_wide_multiply, absl_strings, absl_type_traits   * Links to libraries: absl_random_distributions * Component absl_random_seed_gen_exception:   * CMake target name: <code>absl::random_seed_gen_exception</code>   * pkg-config .pc file: absl_random_seed_gen_exception.pc   * Requires other components: absl_config   * Links to libraries: absl_random_seed_gen_exception * Component absl_random_seed_sequences:   * CMake target name: <code>absl::random_seed_sequences</code>   * pkg-config .pc file: absl_random_seed_sequences.pc   * Requires other components: absl_config, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_random_seed_gen_exception, absl_span   * Links to libraries: absl_random_seed_sequences * Component absl_random_internal_traits:   * CMake target name: <code>absl::random_internal_traits</code>   * pkg-config .pc file: absl_random_internal_traits.pc   * Requires other components: absl_config * Component absl_random_internal_distribution_caller:   * CMake target name: <code>absl::random_internal_distribution_caller</code>   * pkg-config .pc file: absl_random_internal_distribution_caller.pc   * Requires other components: absl_config, absl_utility, absl_fast_type_id * Component absl_random_internal_fast_uniform_bits:   * CMake target name: <code>absl::random_internal_fast_uniform_bits</code>   * pkg-config .pc file: absl_random_internal_fast_uniform_bits.pc   * Requires other components: absl_config * Component absl_random_internal_seed_material:   * CMake target name: <code>absl::random_internal_seed_material</code>   * pkg-config .pc file: absl_random_internal_seed_material.pc   * Requires other components: absl_core_headers, absl_optional, absl_random_internal_fast_uniform_bits, absl_raw_logging_internal, absl_span, absl_strings   * Links to libraries: absl_random_internal_seed_material * Component absl_random_internal_pool_urbg:   * CMake target name: <code>absl::random_internal_pool_urbg</code>   * pkg-config .pc file: absl_random_internal_pool_urbg.pc   * Requires other components: absl_base, absl_config, absl_core_headers, absl_endian, absl_random_internal_randen, absl_random_internal_seed_material, absl_random_internal_traits, absl_random_seed_gen_exception, absl_raw_logging_internal, absl_span   * Links to libraries: absl_random_internal_pool_urbg * Component absl_random_internal_salted_seed_seq:   * CMake target name: <code>absl::random_internal_salted_seed_seq</code>   * pkg-config .pc file: absl_random_internal_salted_seed_seq.pc   * Requires other components: absl_inlined_vector, absl_optional, absl_span, absl_random_internal_seed_material, absl_type_traits * Component absl_random_internal_iostream_state_saver:   * CMake target name: <code>absl::random_internal_iostream_state_saver</code>   * pkg-config .pc file: absl_random_internal_iostream_state_saver.pc   * Requires other components: absl_int128, absl_type_traits * Component absl_random_internal_generate_real:   * CMake target name: <code>absl::random_internal_generate_real</code>   * pkg-config .pc file: absl_random_internal_generate_real.pc   * Requires other components: absl_bits, absl_random_internal_fastmath, absl_random_internal_traits, absl_type_traits * Component absl_random_internal_wide_multiply:   * CMake target name: <code>absl::random_internal_wide_multiply</code>   * pkg-config .pc file: absl_random_internal_wide_multiply.pc   * Requires other components: absl_bits, absl_config, absl_int128 * Component absl_random_internal_fastmath:   * CMake target name: <code>absl::random_internal_fastmath</code>   * pkg-config .pc file: absl_random_internal_fastmath.pc   * Requires other components: absl_bits * Component absl_random_internal_nonsecure_base:   * CMake target name: <code>absl::random_internal_nonsecure_base</code>   * pkg-config .pc file: absl_random_internal_nonsecure_base.pc   * Requires other components: absl_core_headers, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_span, absl_type_traits * Component absl_random_internal_pcg_engine:   * CMake target name: <code>absl::random_internal_pcg_engine</code>   * pkg-config .pc file: absl_random_internal_pcg_engine.pc   * Requires other components: absl_config, absl_int128, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_type_traits * Component absl_random_internal_randen_engine:   * CMake target name: <code>absl::random_internal_randen_engine</code>   * pkg-config .pc file: absl_random_internal_randen_engine.pc   * Requires other components: absl_endian, absl_random_internal_iostream_state_saver, absl_random_internal_randen, absl_raw_logging_internal, absl_type_traits * Component absl_random_internal_platform:   * CMake target name: <code>absl::random_internal_platform</code>   * pkg-config .pc file: absl_random_internal_platform.pc   * Requires other components: absl_config   * Links to libraries: absl_random_internal_platform * Component absl_random_internal_randen:   * CMake target name: <code>absl::random_internal_randen</code>   * pkg-config .pc file: absl_random_internal_randen.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes, absl_random_internal_randen_slow   * Links to libraries: absl_random_internal_randen * Component absl_random_internal_randen_slow:   * CMake target name: <code>absl::random_internal_randen_slow</code>   * pkg-config .pc file: absl_random_internal_randen_slow.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_slow * Component absl_random_internal_randen_hwaes:   * CMake target name: <code>absl::random_internal_randen_hwaes</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes_impl, absl_config   * Links to libraries: absl_random_internal_randen_hwaes * Component absl_random_internal_randen_hwaes_impl:   * CMake target name: <code>absl::random_internal_randen_hwaes_impl</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes_impl.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_hwaes_impl * Component absl_random_internal_distribution_test_util:   * CMake target name: <code>absl::random_internal_distribution_test_util</code>   * pkg-config .pc file: absl_random_internal_distribution_test_util.pc   * Requires other components: absl_config, absl_core_headers, absl_raw_logging_internal, absl_strings, absl_str_format, absl_span   * Links to libraries: absl_random_internal_distribution_test_util * Component absl_random_internal_uniform_helper:   * CMake target name: <code>absl::random_internal_uniform_helper</code>   * pkg-config .pc file: absl_random_internal_uniform_helper.pc   * Requires other components: absl_config, absl_random_internal_traits, absl_type_traits * Component absl_status:   * CMake target name: <code>absl::status</code>   * pkg-config .pc file: absl_status.pc   * Requires other components: absl_atomic_hook, absl_config, absl_cord, absl_core_headers, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_stacktrace, absl_str_format, absl_strerror, absl_strings, absl_symbolize   * Links to libraries: absl_status * Component absl_statusor:   * CMake target name: <code>absl::statusor</code>   * pkg-config .pc file: absl_statusor.pc   * Requires other components: absl_base, absl_status, absl_core_headers, absl_raw_logging_internal, absl_type_traits, absl_strings, absl_utility, absl_variant   * Links to libraries: absl_statusor * Component absl_strings:   * CMake target name: <code>absl::strings</code>   * pkg-config .pc file: absl_strings.pc   * Requires other components: absl_strings_internal, absl_base, absl_bits, absl_config, absl_core_headers, absl_endian, absl_int128, absl_memory, absl_raw_logging_internal, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_strings   * Systems libs: m * Component absl_strings_internal:   * CMake target name: <code>absl::strings_internal</code>   * pkg-config .pc file: absl_strings_internal.pc   * Requires other components: absl_config, absl_core_headers, absl_endian, absl_raw_logging_internal, absl_type_traits   * Links to libraries: absl_strings_internal * Component absl_str_format:   * CMake target name: <code>absl::str_format</code>   * pkg-config .pc file: absl_str_format.pc   * Requires other components: absl_str_format_internal * Component absl_str_format_internal:   * CMake target name: <code>absl::str_format_internal</code>   * pkg-config .pc file: absl_str_format_internal.pc   * Requires other components: absl_bits, absl_strings, absl_config, absl_core_headers, absl_numeric_representation, absl_type_traits, absl_utility, absl_int128, absl_span   * Links to libraries: absl_str_format_internal * Component absl_cord_internal:   * CMake target name: <code>absl::cord_internal</code>   * pkg-config .pc file: absl_cord_internal.pc   * Requires other components: absl_base_internal, absl_compressed_tuple, absl_config, absl_core_headers, absl_endian, absl_inlined_vector, absl_layout, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_cord_internal * Component absl_cordz_update_tracker:   * CMake target name: <code>absl::cordz_update_tracker</code>   * pkg-config .pc file: absl_cordz_update_tracker.pc   * Requires other components: absl_config * Component absl_cordz_functions:   * CMake target name: <code>absl::cordz_functions</code>   * pkg-config .pc file: absl_cordz_functions.pc   * Requires other components: absl_config, absl_core_headers, absl_exponential_biased, absl_raw_logging_internal   * Links to libraries: absl_cordz_functions * Component absl_cordz_statistics:   * CMake target name: <code>absl::cordz_statistics</code>   * pkg-config .pc file: absl_cordz_statistics.pc   * Requires other components: absl_config, absl_core_headers, absl_cordz_update_tracker, absl_synchronization * Component absl_cordz_handle:   * CMake target name: <code>absl::cordz_handle</code>   * pkg-config .pc file: absl_cordz_handle.pc   * Requires other components: absl_base, absl_config, absl_raw_logging_internal, absl_synchronization   * Links to libraries: absl_cordz_handle * Component absl_cordz_info:   * CMake target name: <code>absl::cordz_info</code>   * pkg-config .pc file: absl_cordz_info.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_handle, absl_cordz_statistics, absl_cordz_update_tracker, absl_core_headers, absl_inlined_vector, absl_span, absl_raw_logging_internal, absl_stacktrace, absl_synchronization   * Links to libraries: absl_cordz_info * Component absl_cordz_sample_token:   * CMake target name: <code>absl::cordz_sample_token</code>   * pkg-config .pc file: absl_cordz_sample_token.pc   * Requires other components: absl_config, absl_cordz_handle, absl_cordz_info   * Links to libraries: absl_cordz_sample_token * Component absl_cordz_update_scope:   * CMake target name: <code>absl::cordz_update_scope</code>   * pkg-config .pc file: absl_cordz_update_scope.pc   * Requires other components: absl_config, absl_cord_internal, absl_cordz_info, absl_cordz_update_tracker, absl_core_headers * Component absl_cord:   * CMake target name: <code>absl::cord</code>   * pkg-config .pc file: absl_cord.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_info, absl_cordz_update_scope, absl_cordz_update_tracker, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_span, absl_strings, absl_type_traits   * Links to libraries: absl_cord * Component absl_graphcycles_internal:   * CMake target name: <code>absl::graphcycles_internal</code>   * pkg-config .pc file: absl_graphcycles_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_malloc_internal, absl_raw_logging_internal   * Links to libraries: absl_graphcycles_internal * Component absl_kernel_timeout_internal:   * CMake target name: <code>absl::kernel_timeout_internal</code>   * pkg-config .pc file: absl_kernel_timeout_internal.pc   * Requires other components: absl_core_headers, absl_raw_logging_internal, absl_time * Component absl_synchronization:   * CMake target name: <code>absl::synchronization</code>   * pkg-config .pc file: absl_synchronization.pc   * Requires other components: absl_graphcycles_internal, absl_kernel_timeout_internal, absl_atomic_hook, absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_stacktrace, absl_symbolize, absl_time   * Links to libraries: absl_synchronization   * Systems libs: pthread * Component absl_time:   * CMake target name: <code>absl::time</code>   * pkg-config .pc file: absl_time.pc   * Requires other components: absl_base, absl_civil_time, absl_core_headers, absl_int128, absl_raw_logging_internal, absl_strings, absl_time_zone   * Links to libraries: absl_time * Component absl_civil_time:   * CMake target name: <code>absl::civil_time</code>   * pkg-config .pc file: absl_civil_time.pc   * Links to libraries: absl_civil_time * Component absl_time_zone:   * CMake target name: <code>absl::time_zone</code>   * pkg-config .pc file: absl_time_zone.pc   * Links to libraries: absl_time_zone * Component absl_any:   * CMake target name: <code>absl::any</code>   * pkg-config .pc file: absl_any.pc   * Requires other components: absl_bad_any_cast, absl_config, absl_core_headers, absl_fast_type_id, absl_type_traits, absl_utility * Component absl_bad_any_cast:   * CMake target name: <code>absl::bad_any_cast</code>   * pkg-config .pc file: absl_bad_any_cast.pc   * Requires other components: absl_bad_any_cast_impl, absl_config * Component absl_bad_any_cast_impl:   * CMake target name: <code>absl::bad_any_cast_impl</code>   * pkg-config .pc file: absl_bad_any_cast_impl.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_any_cast_impl * Component absl_span:   * CMake target name: <code>absl::span</code>   * pkg-config .pc file: absl_span.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_throw_delegate, absl_type_traits * Component absl_optional:   * CMake target name: <code>absl::optional</code>   * pkg-config .pc file: absl_optional.pc   * Requires other components: absl_bad_optional_access, absl_base_internal, absl_config, absl_core_headers, absl_memory, absl_type_traits, absl_utility * Component absl_bad_optional_access:   * CMake target name: <code>absl::bad_optional_access</code>   * pkg-config .pc file: absl_bad_optional_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_optional_access * Component absl_bad_variant_access:   * CMake target name: <code>absl::bad_variant_access</code>   * pkg-config .pc file: absl_bad_variant_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_variant_access * Component absl_variant:   * CMake target name: <code>absl::variant</code>   * pkg-config .pc file: absl_variant.pc   * Requires other components: absl_bad_variant_access, absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_compare:   * CMake target name: <code>absl::compare</code>   * pkg-config .pc file: absl_compare.pc   * Requires other components: absl_core_headers, absl_type_traits * Component absl_utility:   * CMake target name: <code>absl::utility</code>   * pkg-config .pc file: absl_utility.pc   * Requires other components: absl_base_internal, absl_config, absl_type_traits</p> <p></p>"},{"location":"packages/v1_47_1/abseil/#exposed-header-files-for-abseil","title":"Exposed header files for abseil","text":"<pre><code>#include &lt;absl/cleanup/cleanup.h&gt;\n#include &lt;absl/cleanup/internal/cleanup.h&gt;\n#include &lt;absl/base/call_once.h&gt;\n#include &lt;absl/base/config.h&gt;\n#include &lt;absl/base/macros.h&gt;\n#include &lt;absl/base/const_init.h&gt;\n#include &lt;absl/base/port.h&gt;\n#include &lt;absl/base/options.h&gt;\n#include &lt;absl/base/optimization.h&gt;\n#include &lt;absl/base/dynamic_annotations.h&gt;\n#include &lt;absl/base/log_severity.h&gt;\n#include &lt;absl/base/casts.h&gt;\n#include &lt;absl/base/thread_annotations.h&gt;\n#include &lt;absl/base/policy_checks.h&gt;\n#include &lt;absl/base/attributes.h&gt;\n#include &lt;absl/base/internal/spinlock_linux.inc&gt;\n#include &lt;absl/base/internal/spinlock_akaros.inc&gt;\n#include &lt;absl/base/internal/sysinfo.h&gt;\n#include &lt;absl/base/internal/scoped_set_env.h&gt;\n#include &lt;absl/base/internal/unscaledcycleclock.h&gt;\n#include &lt;absl/base/internal/errno_saver.h&gt;\n#include &lt;absl/base/internal/hide_ptr.h&gt;\n#include &lt;absl/base/internal/strerror.h&gt;\n#include &lt;absl/base/internal/pretty_function.h&gt;\n#include &lt;absl/base/internal/identity.h&gt;\n#include &lt;absl/base/internal/tsan_mutex_interface.h&gt;\n#include &lt;absl/base/internal/endian.h&gt;\n#include &lt;absl/base/internal/cycleclock.h&gt;\n#include &lt;absl/base/internal/spinlock_win32.inc&gt;\n#include &lt;absl/base/internal/fast_type_id.h&gt;\n#include &lt;absl/base/internal/direct_mmap.h&gt;\n#include &lt;absl/base/internal/prefetch.h&gt;\n#include &lt;absl/base/internal/spinlock_posix.inc&gt;\n#include &lt;absl/base/internal/raw_logging.h&gt;\n#include &lt;absl/base/internal/atomic_hook.h&gt;\n#include &lt;absl/base/internal/exception_safety_testing.h&gt;\n#include &lt;absl/base/internal/per_thread_tls.h&gt;\n#include &lt;absl/base/internal/spinlock_wait.h&gt;\n#include &lt;absl/base/internal/atomic_hook_test_helper.h&gt;\n#include &lt;absl/base/internal/low_level_scheduling.h&gt;\n#include &lt;absl/base/internal/exception_testing.h&gt;\n#include &lt;absl/base/internal/invoke.h&gt;\n#include &lt;absl/base/internal/spinlock.h&gt;\n#include &lt;absl/base/internal/dynamic_annotations.h&gt;\n#include &lt;absl/base/internal/low_level_alloc.h&gt;\n#include &lt;absl/base/internal/inline_variable_testing.h&gt;\n#include &lt;absl/base/internal/thread_annotations.h&gt;\n#include &lt;absl/base/internal/thread_identity.h&gt;\n#include &lt;absl/base/internal/throw_delegate.h&gt;\n#include &lt;absl/base/internal/scheduling_mode.h&gt;\n#include &lt;absl/base/internal/unaligned_access.h&gt;\n#include &lt;absl/base/internal/inline_variable.h&gt;\n#include &lt;absl/container/flat_hash_map.h&gt;\n#include &lt;absl/container/inlined_vector.h&gt;\n#include &lt;absl/container/btree_map.h&gt;\n#include &lt;absl/container/flat_hash_set.h&gt;\n#include &lt;absl/container/btree_set.h&gt;\n#include &lt;absl/container/node_hash_set.h&gt;\n#include &lt;absl/container/fixed_array.h&gt;\n#include &lt;absl/container/btree_test.h&gt;\n#include &lt;absl/container/node_hash_map.h&gt;\n#include &lt;absl/container/internal/container_memory.h&gt;\n#include &lt;absl/container/internal/inlined_vector.h&gt;\n#include &lt;absl/container/internal/hash_generator_testing.h&gt;\n#include &lt;absl/container/internal/btree.h&gt;\n#include &lt;absl/container/internal/unordered_map_lookup_test.h&gt;\n#include &lt;absl/container/internal/hashtable_debug.h&gt;\n#include &lt;absl/container/internal/unordered_set_constructor_test.h&gt;\n#include &lt;absl/container/internal/tracked.h&gt;\n#include &lt;absl/container/internal/unordered_set_modifiers_test.h&gt;\n#include &lt;absl/container/internal/compressed_tuple.h&gt;\n#include &lt;absl/container/internal/hash_function_defaults.h&gt;\n#include &lt;absl/container/internal/hash_policy_testing.h&gt;\n#include &lt;absl/container/internal/common.h&gt;\n#include &lt;absl/container/internal/unordered_set_lookup_test.h&gt;\n#include &lt;absl/container/internal/test_instance_tracker.h&gt;\n#include &lt;absl/container/internal/raw_hash_set.h&gt;\n#include &lt;absl/container/internal/hashtablez_sampler.h&gt;\n#include &lt;absl/container/internal/hash_policy_traits.h&gt;\n#include &lt;absl/container/internal/unordered_map_members_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_constructor_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_modifiers_test.h&gt;\n#include &lt;absl/container/internal/layout.h&gt;\n#include &lt;absl/container/internal/counting_allocator.h&gt;\n#include &lt;absl/container/internal/hashtable_debug_hooks.h&gt;\n#include &lt;absl/container/internal/raw_hash_map.h&gt;\n#include &lt;absl/container/internal/btree_container.h&gt;\n#include &lt;absl/container/internal/unordered_set_members_test.h&gt;\n#include &lt;absl/container/internal/node_slot_policy.h&gt;\n#include &lt;absl/strings/substitute.h&gt;\n#include &lt;absl/strings/escaping.h&gt;\n#include &lt;absl/strings/str_cat.h&gt;\n#include &lt;absl/strings/str_join.h&gt;\n#include &lt;absl/strings/str_format.h&gt;\n#include &lt;absl/strings/numbers.h&gt;\n#include &lt;absl/strings/cord.h&gt;\n#include &lt;absl/strings/cord_test_helpers.h&gt;\n#include &lt;absl/strings/str_split.h&gt;\n#include &lt;absl/strings/string_view.h&gt;\n#include &lt;absl/strings/ascii.h&gt;\n#include &lt;absl/strings/cordz_test_helpers.h&gt;\n#include &lt;absl/strings/str_replace.h&gt;\n#include &lt;absl/strings/cord_analysis.h&gt;\n#include &lt;absl/strings/match.h&gt;\n#include &lt;absl/strings/charconv.h&gt;\n#include &lt;absl/strings/strip.h&gt;\n#include &lt;absl/strings/cord_buffer.h&gt;\n#include &lt;absl/strings/internal/escaping.h&gt;\n#include &lt;absl/strings/internal/cord_rep_crc.h&gt;\n#include &lt;absl/strings/internal/pow10_helper.h&gt;\n#include &lt;absl/strings/internal/cordz_update_scope.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree.h&gt;\n#include &lt;absl/strings/internal/numbers_test_common.h&gt;\n#include &lt;absl/strings/internal/memutil.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring_reader.h&gt;\n#include &lt;absl/strings/internal/cord_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_flat.h&gt;\n#include &lt;absl/strings/internal/cordz_handle.h&gt;\n#include &lt;absl/strings/internal/cord_rep_consume.h&gt;\n#include &lt;absl/strings/internal/resize_uninitialized.h&gt;\n#include &lt;absl/strings/internal/cordz_update_tracker.h&gt;\n#include &lt;absl/strings/internal/char_map.h&gt;\n#include &lt;absl/strings/internal/cord_data_edge.h&gt;\n#include &lt;absl/strings/internal/charconv_parse.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_reader.h&gt;\n#include &lt;absl/strings/internal/ostringstream.h&gt;\n#include &lt;absl/strings/internal/str_split_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_test_util.h&gt;\n#include &lt;absl/strings/internal/str_join_internal.h&gt;\n#include &lt;absl/strings/internal/cordz_functions.h&gt;\n#include &lt;absl/strings/internal/cordz_sample_token.h&gt;\n#include &lt;absl/strings/internal/charconv_bigint.h&gt;\n#include &lt;absl/strings/internal/escaping_test_common.h&gt;\n#include &lt;absl/strings/internal/string_constant.h&gt;\n#include &lt;absl/strings/internal/cordz_statistics.h&gt;\n#include &lt;absl/strings/internal/cordz_info.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring.h&gt;\n#include &lt;absl/strings/internal/utf8.h&gt;\n#include &lt;absl/strings/internal/stl_type_traits.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_navigator.h&gt;\n#include &lt;absl/strings/internal/str_format/arg.h&gt;\n#include &lt;absl/strings/internal/str_format/extension.h&gt;\n#include &lt;absl/strings/internal/str_format/checker.h&gt;\n#include &lt;absl/strings/internal/str_format/output.h&gt;\n#include &lt;absl/strings/internal/str_format/bind.h&gt;\n#include &lt;absl/strings/internal/str_format/parser.h&gt;\n#include &lt;absl/strings/internal/str_format/float_conversion.h&gt;\n#include &lt;absl/flags/config.h&gt;\n#include &lt;absl/flags/flag.h&gt;\n#include &lt;absl/flags/declare.h&gt;\n#include &lt;absl/flags/parse.h&gt;\n#include &lt;absl/flags/usage_config.h&gt;\n#include &lt;absl/flags/usage.h&gt;\n#include &lt;absl/flags/commandlineflag.h&gt;\n#include &lt;absl/flags/reflection.h&gt;\n#include &lt;absl/flags/marshalling.h&gt;\n#include &lt;absl/flags/internal/sequence_lock.h&gt;\n#include &lt;absl/flags/internal/flag.h&gt;\n#include &lt;absl/flags/internal/program_name.h&gt;\n#include &lt;absl/flags/internal/private_handle_accessor.h&gt;\n#include &lt;absl/flags/internal/parse.h&gt;\n#include &lt;absl/flags/internal/usage.h&gt;\n#include &lt;absl/flags/internal/commandlineflag.h&gt;\n#include &lt;absl/flags/internal/registry.h&gt;\n#include &lt;absl/flags/internal/flag_msvc.inc&gt;\n#include &lt;absl/flags/internal/path_util.h&gt;\n#include &lt;absl/debugging/stacktrace.h&gt;\n#include &lt;absl/debugging/symbolize.h&gt;\n#include &lt;absl/debugging/leak_check.h&gt;\n#include &lt;absl/debugging/failure_signal_handler.h&gt;\n#include &lt;absl/debugging/symbolize_win32.inc&gt;\n#include &lt;absl/debugging/symbolize_emscripten.inc&gt;\n#include &lt;absl/debugging/symbolize_darwin.inc&gt;\n#include &lt;absl/debugging/symbolize_elf.inc&gt;\n#include &lt;absl/debugging/symbolize_unimplemented.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_powerpc-inl.inc&gt;\n#include &lt;absl/debugging/internal/symbolize.h&gt;\n#include &lt;absl/debugging/internal/address_is_readable.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_x86-inl.inc&gt;\n#include &lt;absl/debugging/internal/vdso_support.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_win32-inl.inc&gt;\n#include &lt;absl/debugging/internal/stack_consumption.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_riscv-inl.inc&gt;\n#include &lt;absl/debugging/internal/examine_stack.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_aarch64-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_config.h&gt;\n#include &lt;absl/debugging/internal/demangle.h&gt;\n#include &lt;absl/debugging/internal/elf_mem_image.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_emscripten-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_arm-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_unimplemented-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_generic-inl.inc&gt;\n#include &lt;absl/time/civil_time.h&gt;\n#include &lt;absl/time/time.h&gt;\n#include &lt;absl/time/clock.h&gt;\n#include &lt;absl/time/internal/get_current_time_chrono.inc&gt;\n#include &lt;absl/time/internal/get_current_time_posix.inc&gt;\n#include &lt;absl/time/internal/test_util.h&gt;\n#include &lt;absl/time/internal/zoneinfo.inc&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_if.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_info.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_impl.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_fixed.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_libc.h&gt;\n#include &lt;absl/time/internal/cctz/src/tzfile.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_posix.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/zone_info_source.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time_detail.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/time_zone.h&gt;\n#include &lt;absl/meta/type_traits.h&gt;\n#include &lt;absl/functional/any_invocable.h&gt;\n#include &lt;absl/functional/function_ref.h&gt;\n#include &lt;absl/functional/bind_front.h&gt;\n#include &lt;absl/functional/internal/front_binder.h&gt;\n#include &lt;absl/functional/internal/any_invocable.h&gt;\n#include &lt;absl/functional/internal/function_ref.h&gt;\n#include &lt;absl/status/status_payload_printer.h&gt;\n#include &lt;absl/status/statusor.h&gt;\n#include &lt;absl/status/status.h&gt;\n#include &lt;absl/status/internal/statusor_internal.h&gt;\n#include &lt;absl/status/internal/status_internal.h&gt;\n#include &lt;absl/random/bit_gen_ref.h&gt;\n#include &lt;absl/random/exponential_distribution.h&gt;\n#include &lt;absl/random/distributions.h&gt;\n#include &lt;absl/random/bernoulli_distribution.h&gt;\n#include &lt;absl/random/log_uniform_int_distribution.h&gt;\n#include &lt;absl/random/random.h&gt;\n#include &lt;absl/random/gaussian_distribution.h&gt;\n#include &lt;absl/random/seed_gen_exception.h&gt;\n#include &lt;absl/random/beta_distribution.h&gt;\n#include &lt;absl/random/poisson_distribution.h&gt;\n#include &lt;absl/random/zipf_distribution.h&gt;\n#include &lt;absl/random/uniform_int_distribution.h&gt;\n#include &lt;absl/random/mocking_bit_gen.h&gt;\n#include &lt;absl/random/seed_sequences.h&gt;\n#include &lt;absl/random/uniform_real_distribution.h&gt;\n#include &lt;absl/random/discrete_distribution.h&gt;\n#include &lt;absl/random/mock_distributions.h&gt;\n#include &lt;absl/random/internal/fastmath.h&gt;\n#include &lt;absl/random/internal/fast_uniform_bits.h&gt;\n#include &lt;absl/random/internal/salted_seed_seq.h&gt;\n#include &lt;absl/random/internal/chi_square.h&gt;\n#include &lt;absl/random/internal/randen_traits.h&gt;\n#include &lt;absl/random/internal/pool_urbg.h&gt;\n#include &lt;absl/random/internal/distribution_caller.h&gt;\n#include &lt;absl/random/internal/mock_helpers.h&gt;\n#include &lt;absl/random/internal/traits.h&gt;\n#include &lt;absl/random/internal/seed_material.h&gt;\n#include &lt;absl/random/internal/uniform_helper.h&gt;\n#include &lt;absl/random/internal/sequence_urbg.h&gt;\n#include &lt;absl/random/internal/generate_real.h&gt;\n#include &lt;absl/random/internal/nonsecure_base.h&gt;\n#include &lt;absl/random/internal/platform.h&gt;\n#include &lt;absl/random/internal/pcg_engine.h&gt;\n#include &lt;absl/random/internal/mock_overload_set.h&gt;\n#include &lt;absl/random/internal/explicit_seed_seq.h&gt;\n#include &lt;absl/random/internal/iostream_state_saver.h&gt;\n#include &lt;absl/random/internal/randen_hwaes.h&gt;\n#include &lt;absl/random/internal/wide_multiply.h&gt;\n#include &lt;absl/random/internal/randen_detect.h&gt;\n#include &lt;absl/random/internal/randen_slow.h&gt;\n#include &lt;absl/random/internal/randen_engine.h&gt;\n#include &lt;absl/random/internal/randen.h&gt;\n#include &lt;absl/random/internal/distribution_test_util.h&gt;\n#include &lt;absl/random/internal/nanobenchmark.h&gt;\n#include &lt;absl/types/variant.h&gt;\n#include &lt;absl/types/bad_variant_access.h&gt;\n#include &lt;absl/types/bad_optional_access.h&gt;\n#include &lt;absl/types/span.h&gt;\n#include &lt;absl/types/bad_any_cast.h&gt;\n#include &lt;absl/types/optional.h&gt;\n#include &lt;absl/types/compare.h&gt;\n#include &lt;absl/types/any.h&gt;\n#include &lt;absl/types/internal/variant.h&gt;\n#include &lt;absl/types/internal/conformance_archetype.h&gt;\n#include &lt;absl/types/internal/parentheses.h&gt;\n#include &lt;absl/types/internal/conformance_testing_helpers.h&gt;\n#include &lt;absl/types/internal/conformance_aliases.h&gt;\n#include &lt;absl/types/internal/span.h&gt;\n#include &lt;absl/types/internal/transform_args.h&gt;\n#include &lt;absl/types/internal/optional.h&gt;\n#include &lt;absl/types/internal/conformance_testing.h&gt;\n#include &lt;absl/types/internal/conformance_profile.h&gt;\n#include &lt;absl/synchronization/blocking_counter.h&gt;\n#include &lt;absl/synchronization/mutex.h&gt;\n#include &lt;absl/synchronization/barrier.h&gt;\n#include &lt;absl/synchronization/notification.h&gt;\n#include &lt;absl/synchronization/internal/graphcycles.h&gt;\n#include &lt;absl/synchronization/internal/futex.h&gt;\n#include &lt;absl/synchronization/internal/waiter.h&gt;\n#include &lt;absl/synchronization/internal/create_thread_identity.h&gt;\n#include &lt;absl/synchronization/internal/kernel_timeout.h&gt;\n#include &lt;absl/synchronization/internal/per_thread_sem.h&gt;\n#include &lt;absl/synchronization/internal/thread_pool.h&gt;\n#include &lt;absl/utility/utility.h&gt;\n#include &lt;absl/memory/memory.h&gt;\n#include &lt;absl/numeric/int128_have_intrinsic.inc&gt;\n#include &lt;absl/numeric/bits.h&gt;\n#include &lt;absl/numeric/int128_no_intrinsic.inc&gt;\n#include &lt;absl/numeric/int128.h&gt;\n#include &lt;absl/numeric/internal/representation.h&gt;\n#include &lt;absl/numeric/internal/bits.h&gt;\n#include &lt;absl/profiling/internal/periodic_sampler.h&gt;\n#include &lt;absl/profiling/internal/exponential_biased.h&gt;\n#include &lt;absl/profiling/internal/sample_recorder.h&gt;\n#include &lt;absl/algorithm/algorithm.h&gt;\n#include &lt;absl/algorithm/container.h&gt;\n#include &lt;absl/hash/hash.h&gt;\n#include &lt;absl/hash/hash_testing.h&gt;\n#include &lt;absl/hash/internal/hash.h&gt;\n#include &lt;absl/hash/internal/low_level_hash.h&gt;\n#include &lt;absl/hash/internal/city.h&gt;\n#include &lt;absl/hash/internal/spy_hash_state.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/abseil/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/c-ares/","title":"c-ares/1.18.1","text":""},{"location":"packages/v1_47_1/c-ares/#using-the-c-ares-conan-package","title":"Using the c-ares Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate c-ares in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#using-c-ares-with-cmake","title":"Using c-ares with CMake","text":""},{"location":"packages/v1_47_1/c-ares/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use c-ares in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global c-ares::cares CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(c-ares_project C)\n\nfind_package(c-ares)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To install c-ares/1.18.1, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the c-ares Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the c-ares cares component, through the c-ares::cares target.</p> <pre><code>...\n# Link just to c-ares cares component\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To check all the available components for c-ares Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#using-c-ares-with-visual-studio","title":"Using c-ares with Visual Studio","text":""},{"location":"packages/v1_47_1/c-ares/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#using-c-ares-with-autotools-and-pkg-config","title":"Using c-ares with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/c-ares/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/c-ares/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the libcares.pc file (and the ones corresponding to c-ares dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags c-ares)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l c-ares)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other c-ares)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the c-ares Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for c-ares Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#declared-components-for-c-ares","title":"Declared components for c-ares","text":"<p>These are all the declared components for the c-ares Conan package: * Component cares:   * CMake target name: <code>c-ares::cares</code>   * pkg-config .pc file: libcares.pc   * Links to libraries: cares   * Systems libs: rt   * Preprocessor definitions: <code>CARES_STATICLIB</code></p> <p></p>"},{"location":"packages/v1_47_1/c-ares/#exposed-header-files-for-c-ares","title":"Exposed header files for c-ares","text":"<pre><code>#include &lt;ares_nameser.h&gt;\n#include &lt;ares_build.h&gt;\n#include &lt;ares_dns.h&gt;\n#include &lt;ares.h&gt;\n#include &lt;ares_version.h&gt;\n#include &lt;ares_rules.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/c-ares/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/googleapis/","title":"googleapis/cci.20220711","text":""},{"location":"packages/v1_47_1/googleapis/#googleapiscci20220711-dependencies","title":"googleapis/cci.20220711 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_47_1/googleapis/#using-the-googleapis-conan-package","title":"Using the googleapis Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate googleapis in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/googleapis/#using-googleapis-with-cmake","title":"Using googleapis with CMake","text":""},{"location":"packages/v1_47_1/googleapis/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use googleapis in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global googleapis::googleapis CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(googleapis_project CXX)\n\nfind_package(googleapis)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} googleapis::googleapis)\n</code></pre> <p></p> <p>To install googleapis/cci.20220711, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/googleapis/#using-googleapis-with-visual-studio","title":"Using googleapis with Visual Studio","text":""},{"location":"packages/v1_47_1/googleapis/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/googleapis/#using-googleapis-with-autotools-and-pkg-config","title":"Using googleapis with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/googleapis/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/googleapis/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the googleapis.pc file (and the ones corresponding to googleapis dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags googleapis)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l googleapis)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other googleapis)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/googleapis/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/googleapis/#exposed-header-files-for-googleapis","title":"Exposed header files for googleapis","text":"<pre><code>#include &lt;google/container/v1beta1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1alpha1/cluster_service.pb.h&gt;\n#include &lt;google/apps/script/type/addon_widget_set.pb.h&gt;\n#include &lt;google/apps/script/type/extension_point.pb.h&gt;\n#include &lt;google/apps/script/type/script_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/slides/slides_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/calendar/calendar_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/docs/docs_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/drive/drive_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/sheets/sheets_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/gmail/gmail_addon_manifest.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/resources.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/analytics_admin.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/data.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/analytics_data_api.pb.h&gt;\n#include &lt;google/cloud/extended_operations.pb.h&gt;\n#include &lt;google/cloud/speech/v1/resource.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech_adaptation.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/order.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/procurement_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/logging/v1/runtime_log.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/environment.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/execution.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/event.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance_config.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/managed_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/runtime.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/schedule.pb.h&gt;\n#include &lt;google/cloud/redis/v1beta1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/redis/v1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/filestore/v1/cloud_filestore_service.pb.h&gt;\n#include &lt;google/cloud/dataproc/logging/autoscaler_log.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/autoscaling_policies.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/operations.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/shared.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/jobs.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/clusters.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/workflow_templates.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/batches.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/task.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/queue.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/target.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/cloudtasks.pb.h&gt;\n#include &lt;google/cloud/stream/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_io.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_processor_service.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/functions/v2alpha/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v1/operations.pb.h&gt;\n#include &lt;google/cloud/functions/v1/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2beta/functions.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_databases.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_backup_runs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_ssl_certs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instances.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_operations.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_flags.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instance_names.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v1/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/constraint.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/checker.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/explanations.pb.h&gt;\n#include &lt;google/cloud/kms/v1/service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/ekm_service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/resources.pb.h&gt;\n#include &lt;google/cloud/iap/v1/service.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v2/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_bindings.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/organizations.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_keys.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/projects.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_values.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/service.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/resources.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/service.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/resources.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/batch.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company.pb.h&gt;\n#include &lt;google/cloud/talent/v4/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/cursor.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/common.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/admin.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/subscriber.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/topic_stats.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/logging/v1/g_suite_add_ons_log_entry.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/v1/gsuiteaddons.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/service.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/enums.pb.h&gt;\n#include &lt;google/cloud/dataform/v1alpha2/dataform.pb.h&gt;\n#include &lt;google/cloud/recaptchaenterprise/v1/recaptchaenterprise.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/tether.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/connection.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/saas_instance_payload.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/notification_service_payload.pb.h&gt;\n#include &lt;google/cloud/vmmigration/v1/vmmigration.pb.h&gt;\n#include &lt;google/cloud/resourcesettings/v1/resource_settings.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/service_binding.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tcp_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/grpc_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tls_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/http_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/mesh.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/video_stitcher_service.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/stitch_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/sessions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/ad_tag_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/companions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/slates.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/cdn_keys.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/events.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/services.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/resources.pb.h&gt;\n#include &lt;google/cloud/video/livestream/logging/v1/logs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/service.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/outputs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search_service.pb.h&gt;\n#include &lt;google/cloud/vision/v1/web_detection.pb.h&gt;\n#include &lt;google/cloud/vision/v1/image_annotator.pb.h&gt;\n#include &lt;google/cloud/vision/v1/text_annotation.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search.pb.h&gt;\n#include &lt;google/cloud/vision/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/provisioning_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_models.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/job.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/cloudscheduler.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/target.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/trace.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/connectivity_test.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/reachability.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/volume.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/gkebackup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup_plan.pb.h&gt;\n#include &lt;google/cloud/common/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/audit/audit_log.pb.h&gt;\n#include &lt;google/cloud/translate/v3/translation_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/instance_os_policies_compliance.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/config_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/config_common.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/nfs_share.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/instance.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/volume.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/baremetalsolution.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/lun.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/network.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/job.pb.h&gt;\n#include &lt;google/cloud/batch/v1/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1/job.pb.h&gt;\n#include &lt;google/cloud/ids/v1/ids.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_service.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/common_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_service.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/operations.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/image_versions.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/environments.pb.h&gt;\n#include &lt;google/cloud/clouddms/logging/v1/clouddms_platform_logs.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms_resources.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms.pb.h&gt;\n#include &lt;google/cloud/location/locations.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_render_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/rollout_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/target_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/log_enums.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/deliverypipeline_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/cloud_deploy.pb.h&gt;\n#include &lt;google/cloud/certificatemanager/v1/certificate_manager.pb.h&gt;\n#include &lt;google/cloud/accessapproval/v1/accessapproval.pb.h&gt;\n#include &lt;google/cloud/aiplatform/logging/prediction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_schema.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/hyperparameter_tuning_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/entity_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_monitoring_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/value.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_selector.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/machine_resources.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/execution.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/training_pipeline.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/vizier_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_labeling_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_item.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/batch_prediction_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/artifact.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/completion_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/env_var.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_run.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/io.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_data.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_index_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_time_series.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_online_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation_slice.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_store.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/manual_batch_tuning_parameters.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_failure_policy.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/user_action_reference.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/event.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/unmanaged_container_model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/custom_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_deployment_monitoring_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/encryption_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/types.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/operation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/study.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/accelerator_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/lineage_subgraph.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migration_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_experiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/context.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation_metadata.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migratable_resource.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/saved_query.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_model_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_regression.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/export_evaluated_data_items_config.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_tables.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_classification.pb.h&gt;\n#include &lt;google/cloud/datafusion/v1/datafusion.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/resource.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/resource.pb.h&gt;\n#include &lt;google/cloud/metastore/v1alpha/metastore.pb.h&gt;\n#include &lt;google/cloud/metastore/logging/v1/log_streams.pb.h&gt;\n#include &lt;google/cloud/metastore/v1/metastore.pb.h&gt;\n#include &lt;google/cloud/texttospeech/v1/cloud_tts.pb.h&gt;\n#include &lt;google/cloud/workflows/type/engine_call.pb.h&gt;\n#include &lt;google/cloud/workflows/type/executions_system.pb.h&gt;\n#include &lt;google/cloud/workflows/v1/workflows.pb.h&gt;\n#include &lt;google/cloud/workflows/executions/v1/executions.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/regulatoryintercept/logging/v1/regulatory_intercept_ack_log_entry.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1beta1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/common.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms.pb.h&gt;\n#include &lt;google/cloud/domains/v1/domains.pb.h&gt;\n#include &lt;google/cloud/tpu/v1/cloud_tpu.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text.pb.h&gt;\n#include &lt;google/cloud/automl/v1/service.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_segment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/operations.pb.h&gt;\n#include &lt;google/cloud/automl/v1/data_items.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_payload.pb.h&gt;\n#include &lt;google/cloud/automl/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/automl/v1/detection.pb.h&gt;\n#include &lt;google/cloud/automl/v1/io.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/translation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/image.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/automl/v1/classification.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_extraction.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model.pb.h&gt;\n#include &lt;google/cloud/automl/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/automl/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config_error.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_addon.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/crawled_url.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_error_trace.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_type_stats.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/web_security_scanner.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_warning_trace.pb.h&gt;\n#include &lt;google/cloud/bigquery/connection/v1/connection.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/transfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/datatransfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/logging/v1/audit_data.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/standard_sql.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/encryption_config.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model.pb.h&gt;\n#include &lt;google/cloud/bigquery/reservation/v1/reservation.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/common/common.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/v1beta1/dataexchange.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/read_options.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_error_details.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_metrics.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_entities.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_service.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/translation_config.pb.h&gt;\n#include &lt;google/cloud/shell/v1/cloudshell.pb.h&gt;\n#include &lt;google/cloud/networkanalyzer/logging/v1/analyzer_log.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/iam_binding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_message.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/access.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mute_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/securitycenter_service.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/contact_details.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/resource.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/indicator.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/file.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/source.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/finding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mitre_attack.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/process.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/organization_settings.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/connection.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/bigquery_export.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/compliance.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/asset.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/run_asset_discovery_response.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/external_system.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/security_marks.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/exfiltration.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/folder.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1alpha2/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1beta1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/service.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/feature.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/multiclusteringress/multiclusteringress.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/configmanagement/configmanagement.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway_service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/logging/v1/secret_event.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/resources.pb.h&gt;\n#include &lt;google/cloud/channel/v1/service.pb.h&gt;\n#include &lt;google/cloud/channel/v1/operations.pb.h&gt;\n#include &lt;google/cloud/channel/v1/products.pb.h&gt;\n#include &lt;google/cloud/channel/v1/offers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/subscriber_event.pb.h&gt;\n#include &lt;google/cloud/channel/v1/common.pb.h&gt;\n#include &lt;google/cloud/channel/v1/entitlements.pb.h&gt;\n#include &lt;google/cloud/channel/v1/channel_partner_links.pb.h&gt;\n#include &lt;google/cloud/channel/v1/customers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/repricing.pb.h&gt;\n#include &lt;google/cloud/asset/v1/assets.pb.h&gt;\n#include &lt;google/cloud/asset/v1/asset_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/prediction_service.pb.h&gt;\n#include &lt;google/cloud/run/v2/service.pb.h&gt;\n#include &lt;google/cloud/run/v2/condition.pb.h&gt;\n#include &lt;google/cloud/run/v2/vendor_settings.pb.h&gt;\n#include &lt;google/cloud/run/v2/k8s.min.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision.pb.h&gt;\n#include &lt;google/cloud/run/v2/traffic_target.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision_template.pb.h&gt;\n#include &lt;google/cloud/videointelligence/v1/video_intelligence.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/common_fields.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/rules.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/transactions.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/resolutions.pb.h&gt;\n#include &lt;google/cloud/gkeconnect/gateway/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/eventarc/publishing/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/eventarc.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/trigger.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/discovery.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel_connection.pb.h&gt;\n#include &lt;google/cloud/memcache/v1/cloud_memcache.pb.h&gt;\n#include &lt;google/cloud/oslogin/common/common.pb.h&gt;\n#include &lt;google/cloud/oslogin/v1/oslogin.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/gcs_fileset_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/bigquery.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/datacatalog.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/timestamps.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/common.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/usage.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/dataplex_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/schema.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/table_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanager.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/search.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/data_source.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/tags.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanagerserialization.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/physical_schema.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream_resources.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/service.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vpcaccess/v1/vpc_access.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientgateways/v1/client_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnections/v1/app_connections_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/resource_info.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connectors_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connector_instance_config.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appgateways/v1/app_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientconnectorservices/v1/client_connector_services_service.pb.h&gt;\n#include &lt;google/cloud/webrisk/v1/webrisk.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/async_model.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/fleet_routing.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_model.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_dataset.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/recommender/logging/v1/action_log.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_billing.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_catalog.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_service.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_model.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/lookup_service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/namespace.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/registration_service.pb.h&gt;\n#include &lt;google/cloud/language/v1/language_service.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/resources.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/contact_center_insights.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/service.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/logs.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/metadata.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/resources.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/content.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/analyze.pb.h&gt;\n#include &lt;google/cloud/iot/v1/device_manager.pb.h&gt;\n#include &lt;google/cloud/iot/v1/resources.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/authentication_service.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/mfa_info.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/account_management_service.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/hub.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_events.pb.h&gt;\n#include &lt;google/devtools/build/v1/publish_build_event.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_status.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/action.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_processing_error.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configured_target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/common.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/upload_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_set.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage_summary.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configuration.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_file_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_upload.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/download_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/test_suite.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/invocation.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/controller.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/data.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/debugger.pb.h&gt;\n#include &lt;google/devtools/cloudbuild/v1/cloudbuild.pb.h&gt;\n#include &lt;google/devtools/cloudprofiler/v2/profiler.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v1/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/tracing.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/service.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/package.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/version.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/tag.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/file.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/apt_artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/repository.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/settings.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/yum_artifact.pb.h&gt;\n#include &lt;google/devtools/source/v1/source_context.pb.h&gt;\n#include &lt;google/devtools/testing/v1/application_details.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_environment_discovery.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_execution.pb.h&gt;\n#include &lt;google/devtools/containeranalysis/v1/containeranalysis.pb.h&gt;\n#include &lt;google/example/library/v1/library.pb.h&gt;\n#include &lt;google/streetview/publish/v1/streetview_publish.pb.h&gt;\n#include &lt;google/streetview/publish/v1/rpcmessages.pb.h&gt;\n#include &lt;google/streetview/publish/v1/resources.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/dlp.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/storage.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/xychart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/text.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/layouts.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table_display_options.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/common.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/alertchart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboards_service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/metrics.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/logs_panel.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard_filter.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/collapsible_group.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/widget.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/drilldowns.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/scorecard.pb.h&gt;\n#include &lt;google/monitoring/v3/span_context.pb.h&gt;\n#include &lt;google/monitoring/v3/alert_service.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service.pb.h&gt;\n#include &lt;google/monitoring/v3/group_service.pb.h&gt;\n#include &lt;google/monitoring/v3/query_service.pb.h&gt;\n#include &lt;google/monitoring/v3/notification.pb.h&gt;\n#include &lt;google/monitoring/v3/metric.pb.h&gt;\n#include &lt;google/monitoring/v3/dropped_labels.pb.h&gt;\n#include &lt;google/monitoring/v3/alert.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime.pb.h&gt;\n#include &lt;google/monitoring/v3/common.pb.h&gt;\n#include &lt;google/monitoring/v3/notification_service.pb.h&gt;\n#include &lt;google/monitoring/v3/metric_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service_service.pb.h&gt;\n#include &lt;google/monitoring/v3/group.pb.h&gt;\n#include &lt;google/monitoring/v3/mutation_record.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scope.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scopes.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/environment.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/jobs.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/snapshots.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/metrics.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/templates.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/messages.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/streaming.pb.h&gt;\n#include &lt;google/geo/type/viewport.pb.h&gt;\n#include &lt;google/api/field_behavior.pb.h&gt;\n#include &lt;google/api/service.pb.h&gt;\n#include &lt;google/api/routing.pb.h&gt;\n#include &lt;google/api/annotations.pb.h&gt;\n#include &lt;google/api/metric.pb.h&gt;\n#include &lt;google/api/httpbody.pb.h&gt;\n#include &lt;google/api/system_parameter.pb.h&gt;\n#include &lt;google/api/consumer.pb.h&gt;\n#include &lt;google/api/visibility.pb.h&gt;\n#include &lt;google/api/endpoint.pb.h&gt;\n#include &lt;google/api/distribution.pb.h&gt;\n#include &lt;google/api/backend.pb.h&gt;\n#include &lt;google/api/usage.pb.h&gt;\n#include &lt;google/api/control.pb.h&gt;\n#include &lt;google/api/source_info.pb.h&gt;\n#include &lt;google/api/billing.pb.h&gt;\n#include &lt;google/api/documentation.pb.h&gt;\n#include &lt;google/api/monitored_resource.pb.h&gt;\n#include &lt;google/api/resource.pb.h&gt;\n#include &lt;google/api/launch_stage.pb.h&gt;\n#include &lt;google/api/config_change.pb.h&gt;\n#include &lt;google/api/quota.pb.h&gt;\n#include &lt;google/api/client.pb.h&gt;\n#include &lt;google/api/label.pb.h&gt;\n#include &lt;google/api/context.pb.h&gt;\n#include &lt;google/api/logging.pb.h&gt;\n#include &lt;google/api/monitoring.pb.h&gt;\n#include &lt;google/api/http.pb.h&gt;\n#include &lt;google/api/auth.pb.h&gt;\n#include &lt;google/api/log.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/resources.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/servicemanager.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/service_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/check_error.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/quota_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/distribution.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/log_entry.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/metric_value.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/operation.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/http_request.pb.h&gt;\n#include &lt;google/api/servicecontrol/v2/service_controller.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/value.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/decl.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/source.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/expr.pb.h&gt;\n#include &lt;google/api/expr/conformance/v1alpha1/conformance_service.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/value.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/explain.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/syntax.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/checked.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/resources.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/serviceusage.pb.h&gt;\n#include &lt;google/chromeos/uidetection/v1/ui_detection.pb.h&gt;\n#include &lt;google/type/color.pb.h&gt;\n#include &lt;google/type/latlng.pb.h&gt;\n#include &lt;google/type/quaternion.pb.h&gt;\n#include &lt;google/type/decimal.pb.h&gt;\n#include &lt;google/type/timeofday.pb.h&gt;\n#include &lt;google/type/phone_number.pb.h&gt;\n#include &lt;google/type/calendar_period.pb.h&gt;\n#include &lt;google/type/dayofweek.pb.h&gt;\n#include &lt;google/type/date.pb.h&gt;\n#include &lt;google/type/postal_address.pb.h&gt;\n#include &lt;google/type/expr.pb.h&gt;\n#include &lt;google/type/month.pb.h&gt;\n#include &lt;google/type/fraction.pb.h&gt;\n#include &lt;google/type/money.pb.h&gt;\n#include &lt;google/type/datetime.pb.h&gt;\n#include &lt;google/type/interval.pb.h&gt;\n#include &lt;google/chat/logging/v1/chat_app_log_entry.pb.h&gt;\n#include &lt;google/pubsub/v1/schema.pb.h&gt;\n#include &lt;google/pubsub/v1/pubsub.pb.h&gt;\n#include &lt;google/partner/aistreams/v1alpha1/aistreams.pb.h&gt;\n#include &lt;google/maps/routing/v2/maneuver.pb.h&gt;\n#include &lt;google/maps/routing/v2/speed_reading_interval.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_travel_mode.pb.h&gt;\n#include &lt;google/maps/routing/v2/polyline.pb.h&gt;\n#include &lt;google/maps/routing/v2/waypoint.pb.h&gt;\n#include &lt;google/maps/routing/v2/location.pb.h&gt;\n#include &lt;google/maps/routing/v2/fallback_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_passes.pb.h&gt;\n#include &lt;google/maps/routing/v2/routes_service.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routing/v2/units.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/route.pb.h&gt;\n#include &lt;google/maps/routing/v2/routing_preference.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_modifiers.pb.h&gt;\n#include &lt;google/maps/routing/v2/navigation_instruction.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/polyline.pb.h&gt;\n#include &lt;google/maps/routes/v1/waypoint.pb.h&gt;\n#include &lt;google/maps/routes/v1/fallback_info.pb.h&gt;\n#include &lt;google/maps/routes/v1/toll_passes.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_matrix_element.pb.h&gt;\n#include &lt;google/maps/routes/v1/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routes/v1/route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/custom_route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_route_matrix_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_search_values.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_lookup_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_match.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_identifier.pb.h&gt;\n#include &lt;google/maps/roads/v1op/roads.pb.h&gt;\n#include &lt;google/iam/admin/v1/iam.pb.h&gt;\n#include &lt;google/iam/admin/v1/audit_data.pb.h&gt;\n#include &lt;google/iam/v1/iam_policy.pb.h&gt;\n#include &lt;google/iam/v1/policy.pb.h&gt;\n#include &lt;google/iam/v1/options.pb.h&gt;\n#include &lt;google/iam/v1/logging/audit_data.pb.h&gt;\n#include &lt;google/iam/v2beta/deny.pb.h&gt;\n#include &lt;google/iam/v2beta/policy.pb.h&gt;\n#include &lt;google/iam/credentials/v1/common.pb.h&gt;\n#include &lt;google/iam/credentials/v1/iamcredentials.pb.h&gt;\n#include &lt;google/networking/trafficdirector/type/traffic_director_log_entry.pb.h&gt;\n#include &lt;google/logging/type/log_severity.pb.h&gt;\n#include &lt;google/logging/type/http_request.pb.h&gt;\n#include &lt;google/logging/v2/log_entry.pb.h&gt;\n#include &lt;google/logging/v2/logging_metrics.pb.h&gt;\n#include &lt;google/logging/v2/logging.pb.h&gt;\n#include &lt;google/logging/v2/logging_config.pb.h&gt;\n#include &lt;google/datastore/admin/v1/datastore_admin.pb.h&gt;\n#include &lt;google/datastore/admin/v1/migration.pb.h&gt;\n#include &lt;google/datastore/admin/v1/index.pb.h&gt;\n#include &lt;google/datastore/v1/entity.pb.h&gt;\n#include &lt;google/datastore/v1/datastore.pb.h&gt;\n#include &lt;google/datastore/v1/query.pb.h&gt;\n#include &lt;google/appengine/logging/v1/request_log.pb.h&gt;\n#include &lt;google/appengine/v1/app_yaml.pb.h&gt;\n#include &lt;google/appengine/v1/firewall.pb.h&gt;\n#include &lt;google/appengine/v1/instance.pb.h&gt;\n#include &lt;google/appengine/v1/service.pb.h&gt;\n#include &lt;google/appengine/v1/certificate.pb.h&gt;\n#include &lt;google/appengine/v1/domain_mapping.pb.h&gt;\n#include &lt;google/appengine/v1/appengine.pb.h&gt;\n#include &lt;google/appengine/v1/deployed_files.pb.h&gt;\n#include &lt;google/appengine/v1/location.pb.h&gt;\n#include &lt;google/appengine/v1/version.pb.h&gt;\n#include &lt;google/appengine/v1/network_settings.pb.h&gt;\n#include &lt;google/appengine/v1/audit_data.pb.h&gt;\n#include &lt;google/appengine/v1/deploy.pb.h&gt;\n#include &lt;google/appengine/v1/operation.pb.h&gt;\n#include &lt;google/appengine/v1/application.pb.h&gt;\n#include &lt;google/appengine/v1/domain.pb.h&gt;\n#include &lt;google/appengine/legacy/audit_data.pb.h&gt;\n#include &lt;google/actions/type/datetime_range.pb.h&gt;\n#include &lt;google/actions/type/date_range.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/type/device_resources.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_policy.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_context_manager.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/gcp_user_access_binding.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_level.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/service_perimeter.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/instance.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/table.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_table_admin.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/common.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_instance_admin.pb.h&gt;\n#include &lt;google/bigtable/v2/data.pb.h&gt;\n#include &lt;google/bigtable/v2/bigtable.pb.h&gt;\n#include &lt;google/bigtable/v2/response_params.pb.h&gt;\n#include &lt;google/firestore/admin/v1/index.pb.h&gt;\n#include &lt;google/firestore/admin/v1/location.pb.h&gt;\n#include &lt;google/firestore/admin/v1/operation.pb.h&gt;\n#include &lt;google/firestore/admin/v1/database.pb.h&gt;\n#include &lt;google/firestore/admin/v1/field.pb.h&gt;\n#include &lt;google/firestore/admin/v1/firestore_admin.pb.h&gt;\n#include &lt;google/firestore/v1/firestore.pb.h&gt;\n#include &lt;google/firestore/v1/common.pb.h&gt;\n#include &lt;google/firestore/v1/write.pb.h&gt;\n#include &lt;google/firestore/v1/query.pb.h&gt;\n#include &lt;google/firestore/v1/document.pb.h&gt;\n#include &lt;google/firestore/bundle/bundle.pb.h&gt;\n#include &lt;google/storage/v1/storage_resources.pb.h&gt;\n#include &lt;google/storage/v1/storage.pb.h&gt;\n#include &lt;google/storage/v2/storage.pb.h&gt;\n#include &lt;google/longrunning/operations.pb.h&gt;\n#include &lt;google/rpc/status.pb.h&gt;\n#include &lt;google/rpc/code.pb.h&gt;\n#include &lt;google/rpc/error_details.pb.h&gt;\n#include &lt;google/rpc/context/attribute_context.pb.h&gt;\n#include &lt;google/spanner/admin/instance/v1/spanner_instance_admin.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/backup.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/common.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/spanner_database_admin.pb.h&gt;\n#include &lt;google/spanner/v1/type.pb.h&gt;\n#include &lt;google/spanner/v1/keys.pb.h&gt;\n#include &lt;google/spanner/v1/transaction.pb.h&gt;\n#include &lt;google/spanner/v1/commit_response.pb.h&gt;\n#include &lt;google/spanner/v1/mutation.pb.h&gt;\n#include &lt;google/spanner/v1/query_plan.pb.h&gt;\n#include &lt;google/spanner/v1/result_set.pb.h&gt;\n#include &lt;google/spanner/v1/spanner.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer_types.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance.pb.h&gt;\n#include &lt;grafeas/v1/intoto_statement.pb.h&gt;\n#include &lt;grafeas/v1/provenance.pb.h&gt;\n#include &lt;grafeas/v1/deployment.pb.h&gt;\n#include &lt;grafeas/v1/upgrade.pb.h&gt;\n#include &lt;grafeas/v1/attestation.pb.h&gt;\n#include &lt;grafeas/v1/common.pb.h&gt;\n#include &lt;grafeas/v1/package.pb.h&gt;\n#include &lt;grafeas/v1/cvss.pb.h&gt;\n#include &lt;grafeas/v1/grafeas.pb.h&gt;\n#include &lt;grafeas/v1/build.pb.h&gt;\n#include &lt;grafeas/v1/intoto_provenance.pb.h&gt;\n#include &lt;grafeas/v1/discovery.pb.h&gt;\n#include &lt;grafeas/v1/image.pb.h&gt;\n#include &lt;grafeas/v1/compliance.pb.h&gt;\n#include &lt;grafeas/v1/vulnerability.pb.h&gt;\n#include &lt;grafeas/v1/severity.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance_zero_two.pb.h&gt;\n#include &lt;grafeas/v1/dsse_attestation.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/googleapis/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/grpc-proto/","title":"grpc-proto/cci.20220627","text":""},{"location":"packages/v1_47_1/grpc-proto/#grpc-protocci20220627-dependencies","title":"grpc-proto/cci.20220627 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_47_1/grpc-proto/#using-the-grpc-proto-conan-package","title":"Using the grpc-proto Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc-proto in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#using-grpc-proto-with-cmake","title":"Using grpc-proto with CMake","text":""},{"location":"packages/v1_47_1/grpc-proto/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc-proto in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc-proto::grpc-proto CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc-proto_project CXX)\n\nfind_package(grpc-proto)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc-proto::grpc-proto)\n</code></pre> <p></p> <p>To install grpc-proto/cci.20220627, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#using-grpc-proto-with-visual-studio","title":"Using grpc-proto with Visual Studio","text":""},{"location":"packages/v1_47_1/grpc-proto/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#using-grpc-proto-with-autotools-and-pkg-config","title":"Using grpc-proto with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/grpc-proto/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc-proto.pc file (and the ones corresponding to grpc-proto dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc-proto)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc-proto)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc-proto)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/grpc-proto/#exposed-header-files-for-grpc-proto","title":"Exposed header files for grpc-proto","text":"<pre><code>#include &lt;grpc/channelz/v1/channelz.pb.h&gt;\n#include &lt;grpc/gcp/handshaker.pb.h&gt;\n#include &lt;grpc/gcp/transport_security_common.pb.h&gt;\n#include &lt;grpc/gcp/altscontext.pb.h&gt;\n#include &lt;grpc/core/stats.pb.h&gt;\n#include &lt;grpc/health/v1/health.pb.h&gt;\n#include &lt;grpc/reflection/v1alpha/reflection.pb.h&gt;\n#include &lt;grpc/reflection/v1/reflection.pb.h&gt;\n#include &lt;grpc/service_config/service_config.pb.h&gt;\n#include &lt;grpc/testing/stats.pb.h&gt;\n#include &lt;grpc/testing/benchmark_service.pb.h&gt;\n#include &lt;grpc/testing/control.pb.h&gt;\n#include &lt;grpc/testing/worker_service.pb.h&gt;\n#include &lt;grpc/testing/payloads.pb.h&gt;\n#include &lt;grpc/testing/messages.pb.h&gt;\n#include &lt;grpc/testing/report_qps_scenario_service.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls_config.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls.pb.h&gt;\n#include &lt;grpc/binlog/v1/binarylog.pb.h&gt;\n#include &lt;grpc/lb/v1/load_balancer.pb.h&gt;\n#include &lt;grpc/lb/v1/load_reporter.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/grpc-proto/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/grpc/","title":"grpc/1.47.1","text":""},{"location":"packages/v1_47_1/grpc/#grpc1471-setup-with-artifactory","title":"grpc/1.47.1 setup with artifactory","text":"<p>For Conan 1.13 and up, use the following command to activate the revision feature:</p> <p><pre><code>export CONAN_REVISIONS_ENABLED=1\n</code></pre> For your Conan command line client to work with this Conan repository, you first need to add the repository to your client configuration using the following command:</p> <pre><code>conan remote add armv7-armv8-x86_64-linux-thommyho http://artifactory.dns.army:8081/artifactory/api/conan/armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p>No user login required: anonymous read access is always granted!</p> <p>To install the dependencies defined in your project's conanfile.txt from an Artifactory Conan repository, use the following command:</p> <pre><code>conan install . grpc/1.47.1@ -r armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/grpc/#grpc1471-dependencies","title":"grpc/1.47.1 dependencies","text":"<ul> <li>abseil/20220623.0</li> <li>c-ares/1.18.1</li> <li>openssl/1.1.1s</li> <li>re2/20220601</li> <li>zlib/1.2.13</li> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>grpc-proto/cci.20220627</li> </ul>"},{"location":"packages/v1_47_1/grpc/#using-the-grpc-conan-package","title":"Using the grpc Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#using-grpc-with-cmake","title":"Using grpc with CMake","text":""},{"location":"packages/v1_47_1/grpc/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.47.1\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc::grpc CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc_project CXX)\n\nfind_package(gRPC)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc::grpc)\n</code></pre> <p></p> <p>To install grpc/1.47.1, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the grpc Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the grpc address_sorting component, through the gRPC::address_sorting target.</p> <pre><code>...\n# Link just to grpc address_sorting component\ntarget_link_libraries(${PROJECT_NAME} gRPC::address_sorting)\n</code></pre> <p></p> <p>To check all the available components for grpc Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_47_1/grpc/#libcmakeconan_trickgrpc_cpp_plugincmake","title":"lib/cmake/conan_trick/grpc_cpp_plugin.cmake","text":"<pre><code>if(NOT TARGET gRPC::grpc_cpp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CPP_PLUGIN_PROGRAM NAMES grpc_cpp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CPP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CPP_PLUGIN_PROGRAM\n#         NAMES grpc_cpp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CPP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CPP_PLUGIN_PROGRAM \"${GRPC_CPP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_cpp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_cpp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CPP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_csharp_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_csharp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CSHARP_PLUGIN_PROGRAM NAMES grpc_csharp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CSHARP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CSHARP_PLUGIN_PROGRAM\n#         NAMES grpc_csharp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CSHARP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CSHARP_PLUGIN_PROGRAM \"${GRPC_CSHARP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_csharp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_csharp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CSHARP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_node_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_node_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_NODE_PLUGIN_PROGRAM NAMES grpc_node_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_NODE_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_NODE_PLUGIN_PROGRAM\n#         NAMES grpc_node_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_NODE_PLUGIN_PROGRAM)\nget_filename_component(GRPC_NODE_PLUGIN_PROGRAM \"${GRPC_NODE_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_node_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_node_plugin PROPERTY IMPORTED_LOCATION ${GRPC_NODE_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_objective_c_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_objective_c_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM NAMES grpc_objective_c_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_OBJECTIVE_C_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\n#         NAMES grpc_objective_c_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM)\nget_filename_component(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM \"${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_objective_c_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_objective_c_plugin PROPERTY IMPORTED_LOCATION ${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_php_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_php_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PHP_PLUGIN_PROGRAM NAMES grpc_php_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PHP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PHP_PLUGIN_PROGRAM\n#         NAMES grpc_php_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PHP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PHP_PLUGIN_PROGRAM \"${GRPC_PHP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_php_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_php_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PHP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_python_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_python_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PYTHON_PLUGIN_PROGRAM NAMES grpc_python_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PYTHON_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PYTHON_PLUGIN_PROGRAM\n#         NAMES grpc_python_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PYTHON_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PYTHON_PLUGIN_PROGRAM \"${GRPC_PYTHON_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_python_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_python_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PYTHON_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_ruby_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_ruby_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_RUBY_PLUGIN_PROGRAM NAMES grpc_ruby_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_RUBY_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_RUBY_PLUGIN_PROGRAM\n#         NAMES grpc_ruby_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_RUBY_PLUGIN_PROGRAM)\nget_filename_component(GRPC_RUBY_PLUGIN_PROGRAM \"${GRPC_RUBY_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_ruby_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_ruby_plugin PROPERTY IMPORTED_LOCATION ${GRPC_RUBY_PLUGIN_PROGRAM})\nendif()\nendif()\n</code></pre>"},{"location":"packages/v1_47_1/grpc/#using-grpc-with-visual-studio","title":"Using grpc with Visual Studio","text":""},{"location":"packages/v1_47_1/grpc/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.47.1\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#using-grpc-with-autotools-and-pkg-config","title":"Using grpc with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/grpc/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.47.1\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/grpc/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc.pc file (and the ones corresponding to grpc dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc/1.47.1\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the grpc Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for grpc Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#declared-components-for-grpc","title":"Declared components for grpc","text":"<p>These are all the declared components for the grpc Conan package: * Component address_sorting:   * CMake target name: <code>gRPC::address_sorting</code>   * pkg-config .pc file: address_sorting.pc   * Links to libraries: address_sorting   * Systems libs: m, pthread * Component gpr:   * CMake target name: <code>gRPC::gpr</code>   * pkg-config .pc file: gpr.pc   * Requires other components: upb, abseil::absl_base, abseil::absl_memory, abseil::absl_status, abseil::absl_str_format, abseil::absl_strings, abseil::absl_synchronization, abseil::absl_time, abseil::absl_optional   * Links to libraries: gpr   * Systems libs: m, pthread * Component _grpc:   * CMake target name: <code>gRPC::grpc</code>   * pkg-config .pc file: grpc.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_bind_front, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, abseil::absl_random_random, c-ares::cares, openssl::crypto, openssl::ssl, re2::re2, zlib::zlib   * Links to libraries: grpc   * Systems libs: m, pthread * Component grpc++:   * CMake target name: <code>gRPC::grpc++</code>   * pkg-config .pc file: grpc++.pc   * Requires other components: _grpc, protobuf::libprotobuf   * Links to libraries: grpc++   * Systems libs: m, pthread * Component grpc++_alts:   * CMake target name: <code>gRPC::grpc++_alts</code>   * pkg-config .pc file: grpc++_alts.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_alts   * Systems libs: m, pthread * Component grpc++_error_details:   * CMake target name: <code>gRPC::grpc++_error_details</code>   * pkg-config .pc file: grpc++_error_details.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_error_details   * Systems libs: m, pthread * Component upb:   * CMake target name: <code>gRPC::upb</code>   * pkg-config .pc file: upb.pc   * Links to libraries: upb   * Systems libs: m, pthread * Component grpc_plugin_support:   * CMake target name: <code>gRPC::grpc_plugin_support</code>   * pkg-config .pc file: grpc_plugin_support.pc   * Requires other components: protobuf::libprotoc, protobuf::libprotobuf   * Links to libraries: grpc_plugin_support   * Systems libs: m, pthread * Component grpc_unsecure:   * CMake target name: <code>gRPC::grpc_unsecure</code>   * pkg-config .pc file: grpc_unsecure.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, c-ares::cares, re2::re2, zlib::zlib, abseil::absl_random_random   * Links to libraries: grpc_unsecure   * Systems libs: m, pthread * Component grpc++_unsecure:   * CMake target name: <code>gRPC::grpc++_unsecure</code>   * pkg-config .pc file: grpc++_unsecure.pc   * Requires other components: grpc_unsecure, protobuf::libprotobuf   * Links to libraries: grpc++_unsecure   * Systems libs: m, pthread * Component grpc++_reflection:   * CMake target name: <code>gRPC::grpc++_reflection</code>   * pkg-config .pc file: grpc++_reflection.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpc++_reflection   * Systems libs: m, pthread * Component grpcpp_channelz:   * CMake target name: <code>gRPC::grpcpp_channelz</code>   * pkg-config .pc file: grpcpp_channelz.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpcpp_channelz   * Systems libs: m, pthread * Component grpc_execs:   * CMake target name: <code>grpc::grpc_execs</code>   * pkg-config .pc file: grpc-grpc_execs.pc</p> <p></p>"},{"location":"packages/v1_47_1/grpc/#exposed-header-files-for-grpc","title":"Exposed header files for grpc","text":"<pre><code>#include &lt;grpc/slice.h&gt;\n#include &lt;grpc/byte_buffer_reader.h&gt;\n#include &lt;grpc/grpc.h&gt;\n#include &lt;grpc/load_reporting.h&gt;\n#include &lt;grpc/grpc_security.h&gt;\n#include &lt;grpc/grpc_security_constants.h&gt;\n#include &lt;grpc/compression.h&gt;\n#include &lt;grpc/fork.h&gt;\n#include &lt;grpc/byte_buffer.h&gt;\n#include &lt;grpc/census.h&gt;\n#include &lt;grpc/status.h&gt;\n#include &lt;grpc/slice_buffer.h&gt;\n#include &lt;grpc/grpc_posix.h&gt;\n#include &lt;grpc/support/atm_windows.h&gt;\n#include &lt;grpc/support/sync_posix.h&gt;\n#include &lt;grpc/support/string_util.h&gt;\n#include &lt;grpc/support/log.h&gt;\n#include &lt;grpc/support/sync_abseil.h&gt;\n#include &lt;grpc/support/cpu.h&gt;\n#include &lt;grpc/support/log_windows.h&gt;\n#include &lt;grpc/support/time.h&gt;\n#include &lt;grpc/support/port_platform.h&gt;\n#include &lt;grpc/support/atm.h&gt;\n#include &lt;grpc/support/sync.h&gt;\n#include &lt;grpc/support/thd_id.h&gt;\n#include &lt;grpc/support/atm_gcc_sync.h&gt;\n#include &lt;grpc/support/sync_windows.h&gt;\n#include &lt;grpc/support/workaround_list.h&gt;\n#include &lt;grpc/support/sync_generic.h&gt;\n#include &lt;grpc/support/atm_gcc_atomic.h&gt;\n#include &lt;grpc/support/sync_custom.h&gt;\n#include &lt;grpc/support/alloc.h&gt;\n#include &lt;grpc/impl/codegen/atm_windows.h&gt;\n#include &lt;grpc/impl/codegen/slice.h&gt;\n#include &lt;grpc/impl/codegen/sync_posix.h&gt;\n#include &lt;grpc/impl/codegen/log.h&gt;\n#include &lt;grpc/impl/codegen/sync_abseil.h&gt;\n#include &lt;grpc/impl/codegen/gpr_slice.h&gt;\n#include &lt;grpc/impl/codegen/port_platform.h&gt;\n#include &lt;grpc/impl/codegen/atm.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer_reader.h&gt;\n#include &lt;grpc/impl/codegen/sync.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_sync.h&gt;\n#include &lt;grpc/impl/codegen/sync_windows.h&gt;\n#include &lt;grpc/impl/codegen/sync_generic.h&gt;\n#include &lt;grpc/impl/codegen/connectivity_state.h&gt;\n#include &lt;grpc/impl/codegen/fork.h&gt;\n#include &lt;grpc/impl/codegen/grpc_types.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_atomic.h&gt;\n#include &lt;grpc/impl/codegen/sync_custom.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc/impl/codegen/compression_types.h&gt;\n#include &lt;grpc/impl/codegen/gpr_types.h&gt;\n#include &lt;grpc/impl/codegen/status.h&gt;\n#include &lt;grpc/impl/codegen/propagation_bits.h&gt;\n#include &lt;grpc/event_engine/slice.h&gt;\n#include &lt;grpc/event_engine/endpoint_config.h&gt;\n#include &lt;grpc/event_engine/event_engine.h&gt;\n#include &lt;grpc/event_engine/port.h&gt;\n#include &lt;grpc/event_engine/memory_request.h&gt;\n#include &lt;grpc/event_engine/memory_allocator.h&gt;\n#include &lt;grpc/event_engine/slice_buffer.h&gt;\n#include &lt;grpc/event_engine/internal/memory_allocator_impl.h&gt;\n#include &lt;grpc++/grpc++.h&gt;\n#include &lt;grpc++/create_channel.h&gt;\n#include &lt;grpc++/resource_quota.h&gt;\n#include &lt;grpc++/create_channel_posix.h&gt;\n#include &lt;grpc++/alarm.h&gt;\n#include &lt;grpc++/channel.h&gt;\n#include &lt;grpc++/client_context.h&gt;\n#include &lt;grpc++/health_check_service_interface.h&gt;\n#include &lt;grpc++/server_context.h&gt;\n#include &lt;grpc++/completion_queue.h&gt;\n#include &lt;grpc++/server_builder.h&gt;\n#include &lt;grpc++/server.h&gt;\n#include &lt;grpc++/server_posix.h&gt;\n#include &lt;grpc++/security/credentials.h&gt;\n#include &lt;grpc++/security/auth_metadata_processor.h&gt;\n#include &lt;grpc++/security/server_credentials.h&gt;\n#include &lt;grpc++/security/auth_context.h&gt;\n#include &lt;grpc++/support/async_unary_call.h&gt;\n#include &lt;grpc++/support/slice.h&gt;\n#include &lt;grpc++/support/config.h&gt;\n#include &lt;grpc++/support/status_code_enum.h&gt;\n#include &lt;grpc++/support/channel_arguments.h&gt;\n#include &lt;grpc++/support/time.h&gt;\n#include &lt;grpc++/support/stub_options.h&gt;\n#include &lt;grpc++/support/async_stream.h&gt;\n#include &lt;grpc++/support/string_ref.h&gt;\n#include &lt;grpc++/support/sync_stream.h&gt;\n#include &lt;grpc++/support/byte_buffer.h&gt;\n#include &lt;grpc++/support/error_details.h&gt;\n#include &lt;grpc++/support/status.h&gt;\n#include &lt;grpc++/generic/async_generic_service.h&gt;\n#include &lt;grpc++/generic/generic_stub.h&gt;\n#include &lt;grpc++/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpc++/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_plugin.h&gt;\n#include &lt;grpc++/impl/call.h&gt;\n#include &lt;grpc++/impl/server_initializer.h&gt;\n#include &lt;grpc++/impl/channel_argument_option.h&gt;\n#include &lt;grpc++/impl/service_type.h&gt;\n#include &lt;grpc++/impl/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/rpc_method.h&gt;\n#include &lt;grpc++/impl/grpc_library.h&gt;\n#include &lt;grpc++/impl/serialization_traits.h&gt;\n#include &lt;grpc++/impl/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/slice.h&gt;\n#include &lt;grpc++/impl/codegen/config.h&gt;\n#include &lt;grpc++/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpc++/impl/codegen/time.h&gt;\n#include &lt;grpc++/impl/codegen/proto_utils.h&gt;\n#include &lt;grpc++/impl/codegen/call.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen.h&gt;\n#include &lt;grpc++/impl/codegen/metadata_map.h&gt;\n#include &lt;grpc++/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpc++/impl/codegen/client_context.h&gt;\n#include &lt;grpc++/impl/codegen/channel_interface.h&gt;\n#include &lt;grpc++/impl/codegen/stub_options.h&gt;\n#include &lt;grpc++/impl/codegen/call_hook.h&gt;\n#include &lt;grpc++/impl/codegen/service_type.h&gt;\n#include &lt;grpc++/impl/codegen/server_interface.h&gt;\n#include &lt;grpc++/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_method.h&gt;\n#include &lt;grpc++/impl/codegen/async_stream.h&gt;\n#include &lt;grpc++/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpc++/impl/codegen/server_context.h&gt;\n#include &lt;grpc++/impl/codegen/string_ref.h&gt;\n#include &lt;grpc++/impl/codegen/sync_stream.h&gt;\n#include &lt;grpc++/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc++/impl/codegen/grpc_library.h&gt;\n#include &lt;grpc++/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue.h&gt;\n#include &lt;grpc++/impl/codegen/status.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/security/auth_context.h&gt;\n#include &lt;grpcpp/xds_server_builder.h&gt;\n#include &lt;grpcpp/create_channel.h&gt;\n#include &lt;grpcpp/resource_quota.h&gt;\n#include &lt;grpcpp/grpcpp.h&gt;\n#include &lt;grpcpp/create_channel_posix.h&gt;\n#include &lt;grpcpp/alarm.h&gt;\n#include &lt;grpcpp/channel.h&gt;\n#include &lt;grpcpp/client_context.h&gt;\n#include &lt;grpcpp/health_check_service_interface.h&gt;\n#include &lt;grpcpp/create_channel_binder.h&gt;\n#include &lt;grpcpp/server_context.h&gt;\n#include &lt;grpcpp/completion_queue.h&gt;\n#include &lt;grpcpp/server_builder.h&gt;\n#include &lt;grpcpp/server.h&gt;\n#include &lt;grpcpp/server_posix.h&gt;\n#include &lt;grpcpp/security/credentials.h&gt;\n#include &lt;grpcpp/security/tls_certificate_verifier.h&gt;\n#include &lt;grpcpp/security/tls_credentials_options.h&gt;\n#include &lt;grpcpp/security/auth_metadata_processor.h&gt;\n#include &lt;grpcpp/security/server_credentials.h&gt;\n#include &lt;grpcpp/security/binder_security_policy.h&gt;\n#include &lt;grpcpp/security/tls_certificate_provider.h&gt;\n#include &lt;grpcpp/security/binder_credentials.h&gt;\n#include &lt;grpcpp/security/auth_context.h&gt;\n#include &lt;grpcpp/security/authorization_policy_provider.h&gt;\n#include &lt;grpcpp/security/alts_util.h&gt;\n#include &lt;grpcpp/security/alts_context.h&gt;\n#include &lt;grpcpp/support/async_unary_call.h&gt;\n#include &lt;grpcpp/support/slice.h&gt;\n#include &lt;grpcpp/support/config.h&gt;\n#include &lt;grpcpp/support/message_allocator.h&gt;\n#include &lt;grpcpp/support/validate_service_config.h&gt;\n#include &lt;grpcpp/support/client_interceptor.h&gt;\n#include &lt;grpcpp/support/server_interceptor.h&gt;\n#include &lt;grpcpp/support/status_code_enum.h&gt;\n#include &lt;grpcpp/support/channel_arguments.h&gt;\n#include &lt;grpcpp/support/time.h&gt;\n#include &lt;grpcpp/support/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/support/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/support/stub_options.h&gt;\n#include &lt;grpcpp/support/interceptor.h&gt;\n#include &lt;grpcpp/support/async_stream.h&gt;\n#include &lt;grpcpp/support/string_ref.h&gt;\n#include &lt;grpcpp/support/sync_stream.h&gt;\n#include &lt;grpcpp/support/byte_buffer.h&gt;\n#include &lt;grpcpp/support/client_callback.h&gt;\n#include &lt;grpcpp/support/error_details.h&gt;\n#include &lt;grpcpp/support/status.h&gt;\n#include &lt;grpcpp/support/server_callback.h&gt;\n#include &lt;grpcpp/support/method_handler.h&gt;\n#include &lt;grpcpp/generic/async_generic_service.h&gt;\n#include &lt;grpcpp/generic/generic_stub.h&gt;\n#include &lt;grpcpp/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpcpp/ext/channelz_service_plugin.h&gt;\n#include &lt;grpcpp/ext/call_metric_recorder.h&gt;\n#include &lt;grpcpp/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpcpp/impl/server_builder_option.h&gt;\n#include &lt;grpcpp/impl/server_builder_plugin.h&gt;\n#include &lt;grpcpp/impl/call.h&gt;\n#include &lt;grpcpp/impl/server_initializer.h&gt;\n#include &lt;grpcpp/impl/channel_argument_option.h&gt;\n#include &lt;grpcpp/impl/service_type.h&gt;\n#include &lt;grpcpp/impl/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/rpc_method.h&gt;\n#include &lt;grpcpp/impl/grpc_library.h&gt;\n#include &lt;grpcpp/impl/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback_handlers.h&gt;\n#include &lt;grpcpp/impl/codegen/slice.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/config.h&gt;\n#include &lt;grpcpp/impl/codegen/async_generic_service.h&gt;\n#include &lt;grpcpp/impl/codegen/message_allocator.h&gt;\n#include &lt;grpcpp/impl/codegen/delegating_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/client_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpcpp/impl/codegen/time.h&gt;\n#include &lt;grpcpp/impl/codegen/sync.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_utils.h&gt;\n#include &lt;grpcpp/impl/codegen/call.h&gt;\n#include &lt;grpcpp/impl/codegen/intercepted_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen.h&gt;\n#include &lt;grpcpp/impl/codegen/metadata_map.h&gt;\n#include &lt;grpcpp/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpcpp/impl/codegen/client_context.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/impl/codegen/channel_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/stub_options.h&gt;\n#include &lt;grpcpp/impl/codegen/call_hook.h&gt;\n#include &lt;grpcpp/impl/codegen/service_type.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_method.h&gt;\n#include &lt;grpcpp/impl/codegen/async_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpcpp/impl/codegen/server_context.h&gt;\n#include &lt;grpcpp/impl/codegen/string_ref.h&gt;\n#include &lt;grpcpp/impl/codegen/sync_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpcpp/impl/codegen/grpc_library.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor_common.h&gt;\n#include &lt;grpcpp/impl/codegen/client_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue.h&gt;\n#include &lt;grpcpp/impl/codegen/status.h&gt;\n#include &lt;grpcpp/impl/codegen/callback_common.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler.h&gt;\n#include &lt;grpcpp/impl/codegen/security/auth_context.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/grpc/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/openssl/","title":"openssl/1.1.1s","text":""},{"location":"packages/v1_47_1/openssl/#using-the-openssl-conan-package","title":"Using the openssl Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate openssl in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#using-openssl-with-cmake","title":"Using openssl with CMake","text":""},{"location":"packages/v1_47_1/openssl/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use openssl in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global openssl::openssl CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(openssl_project C)\n\nfind_package(OpenSSL)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} openssl::openssl)\n</code></pre> <p></p> <p>To install openssl/1.1.1s, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the openssl Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the openssl crypto component, through the OpenSSL::Crypto target.</p> <pre><code>...\n# Link just to openssl crypto component\ntarget_link_libraries(${PROJECT_NAME} OpenSSL::Crypto)\n</code></pre> <p></p> <p>To check all the available components for openssl Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_47_1/openssl/#libcmakeconan-official-openssl-variablescmake","title":"lib/cmake/conan-official-openssl-variables.cmake","text":"<pre><code>set(OPENSSL_FOUND TRUE)\nif(DEFINED OpenSSL_INCLUDE_DIR)\nset(OPENSSL_INCLUDE_DIR ${OpenSSL_INCLUDE_DIR})\nendif()\nif(DEFINED OpenSSL_Crypto_LIBS)\nset(OPENSSL_CRYPTO_LIBRARY ${OpenSSL_Crypto_LIBS})\nset(OPENSSL_CRYPTO_LIBRARIES ${OpenSSL_Crypto_LIBS}\n${OpenSSL_Crypto_DEPENDENCIES}\n${OpenSSL_Crypto_FRAMEWORKS}\n${OpenSSL_Crypto_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_Crypto_LIBS_RELEASE)\nset(OPENSSL_CRYPTO_LIBRARY ${openssl_OpenSSL_Crypto_LIBS_RELEASE})\nset(OPENSSL_CRYPTO_LIBRARIES ${openssl_OpenSSL_Crypto_LIBS_RELEASE}\n${openssl_OpenSSL_Crypto_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_Crypto_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_Crypto_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_SSL_LIBS)\nset(OPENSSL_SSL_LIBRARY ${OpenSSL_SSL_LIBS})\nset(OPENSSL_SSL_LIBRARIES ${OpenSSL_SSL_LIBS}\n${OpenSSL_SSL_DEPENDENCIES}\n${OpenSSL_SSL_FRAMEWORKS}\n${OpenSSL_SSL_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_SSL_LIBS_RELEASE)\nset(OPENSSL_SSL_LIBRARY ${openssl_OpenSSL_SSL_LIBS_RELEASE})\nset(OPENSSL_SSL_LIBRARIES ${openssl_OpenSSL_SSL_LIBS_RELEASE}\n${openssl_OpenSSL_SSL_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_SSL_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_SSL_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_LIBRARIES)\nset(OPENSSL_LIBRARIES ${OpenSSL_LIBRARIES})\nendif()\nif(DEFINED OpenSSL_VERSION)\nset(OPENSSL_VERSION ${OpenSSL_VERSION})\nendif()\n</code></pre>"},{"location":"packages/v1_47_1/openssl/#using-openssl-with-visual-studio","title":"Using openssl with Visual Studio","text":""},{"location":"packages/v1_47_1/openssl/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#using-openssl-with-autotools-and-pkg-config","title":"Using openssl with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/openssl/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/openssl/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the openssl.pc file (and the ones corresponding to openssl dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags openssl)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l openssl)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other openssl)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the openssl Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for openssl Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#declared-components-for-openssl","title":"Declared components for openssl","text":"<p>These are all the declared components for the openssl Conan package: * Component crypto:   * CMake target name: <code>OpenSSL::Crypto</code>   * pkg-config .pc file: libcrypto.pc   * Links to libraries: crypto   * Systems libs: dl, rt, pthread * Component ssl:   * CMake target name: <code>OpenSSL::SSL</code>   * pkg-config .pc file: libssl.pc   * Requires other components: crypto   * Links to libraries: ssl   * Systems libs: dl, pthread</p> <p></p>"},{"location":"packages/v1_47_1/openssl/#exposed-header-files-for-openssl","title":"Exposed header files for openssl","text":"<pre><code>#include &lt;openssl/e_os2.h&gt;\n#include &lt;openssl/dsaerr.h&gt;\n#include &lt;openssl/opensslconf.h&gt;\n#include &lt;openssl/conf.h&gt;\n#include &lt;openssl/crypto.h&gt;\n#include &lt;openssl/x509err.h&gt;\n#include &lt;openssl/asn1.h&gt;\n#include &lt;openssl/lhash.h&gt;\n#include &lt;openssl/des.h&gt;\n#include &lt;openssl/ocsperr.h&gt;\n#include &lt;openssl/rand_drbg.h&gt;\n#include &lt;openssl/randerr.h&gt;\n#include &lt;openssl/cmserr.h&gt;\n#include &lt;openssl/rc4.h&gt;\n#include &lt;openssl/idea.h&gt;\n#include &lt;openssl/pem.h&gt;\n#include &lt;openssl/conf_api.h&gt;\n#include &lt;openssl/err.h&gt;\n#include &lt;openssl/pkcs12err.h&gt;\n#include &lt;openssl/pemerr.h&gt;\n#include &lt;openssl/buffer.h&gt;\n#include &lt;openssl/obj_mac.h&gt;\n#include &lt;openssl/x509_vfy.h&gt;\n#include &lt;openssl/rc5.h&gt;\n#include &lt;openssl/md5.h&gt;\n#include &lt;openssl/stack.h&gt;\n#include &lt;openssl/ssl3.h&gt;\n#include &lt;openssl/bio.h&gt;\n#include &lt;openssl/ossl_typ.h&gt;\n#include &lt;openssl/aes.h&gt;\n#include &lt;openssl/modes.h&gt;\n#include &lt;openssl/dh.h&gt;\n#include &lt;openssl/rsa.h&gt;\n#include &lt;openssl/comp.h&gt;\n#include &lt;openssl/asn1_mac.h&gt;\n#include &lt;openssl/cast.h&gt;\n#include &lt;openssl/ssl2.h&gt;\n#include &lt;openssl/sslerr.h&gt;\n#include &lt;openssl/safestack.h&gt;\n#include &lt;openssl/hmac.h&gt;\n#include &lt;openssl/symhacks.h&gt;\n#include &lt;openssl/ssl.h&gt;\n#include &lt;openssl/kdferr.h&gt;\n#include &lt;openssl/bn.h&gt;\n#include &lt;openssl/srp.h&gt;\n#include &lt;openssl/buffererr.h&gt;\n#include &lt;openssl/dsa.h&gt;\n#include &lt;openssl/ecerr.h&gt;\n#include &lt;openssl/ui.h&gt;\n#include &lt;openssl/comperr.h&gt;\n#include &lt;openssl/engineerr.h&gt;\n#include &lt;openssl/store.h&gt;\n#include &lt;openssl/rand.h&gt;\n#include &lt;openssl/pkcs12.h&gt;\n#include &lt;openssl/ocsp.h&gt;\n#include &lt;openssl/pem2.h&gt;\n#include &lt;openssl/pkcs7.h&gt;\n#include &lt;openssl/async.h&gt;\n#include &lt;openssl/cterr.h&gt;\n#include &lt;openssl/asyncerr.h&gt;\n#include &lt;openssl/bnerr.h&gt;\n#include &lt;openssl/objects.h&gt;\n#include &lt;openssl/cryptoerr.h&gt;\n#include &lt;openssl/opensslv.h&gt;\n#include &lt;openssl/x509v3.h&gt;\n#include &lt;openssl/tls1.h&gt;\n#include &lt;openssl/asn1err.h&gt;\n#include &lt;openssl/dtls1.h&gt;\n#include &lt;openssl/pkcs7err.h&gt;\n#include &lt;openssl/rc2.h&gt;\n#include &lt;openssl/md4.h&gt;\n#include &lt;openssl/ts.h&gt;\n#include &lt;openssl/kdf.h&gt;\n#include &lt;openssl/txt_db.h&gt;\n#include &lt;openssl/ebcdic.h&gt;\n#include &lt;openssl/evp.h&gt;\n#include &lt;openssl/md2.h&gt;\n#include &lt;openssl/ec.h&gt;\n#include &lt;openssl/ecdh.h&gt;\n#include &lt;openssl/objectserr.h&gt;\n#include &lt;openssl/uierr.h&gt;\n#include &lt;openssl/dherr.h&gt;\n#include &lt;openssl/bioerr.h&gt;\n#include &lt;openssl/evperr.h&gt;\n#include &lt;openssl/x509.h&gt;\n#include &lt;openssl/camellia.h&gt;\n#include &lt;openssl/rsaerr.h&gt;\n#include &lt;openssl/mdc2.h&gt;\n#include &lt;openssl/cmac.h&gt;\n#include &lt;openssl/seed.h&gt;\n#include &lt;openssl/tserr.h&gt;\n#include &lt;openssl/engine.h&gt;\n#include &lt;openssl/blowfish.h&gt;\n#include &lt;openssl/conferr.h&gt;\n#include &lt;openssl/storeerr.h&gt;\n#include &lt;openssl/cms.h&gt;\n#include &lt;openssl/asn1t.h&gt;\n#include &lt;openssl/sha.h&gt;\n#include &lt;openssl/whrlpool.h&gt;\n#include &lt;openssl/srtp.h&gt;\n#include &lt;openssl/ecdsa.h&gt;\n#include &lt;openssl/ct.h&gt;\n#include &lt;openssl/x509v3err.h&gt;\n#include &lt;openssl/ripemd.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/openssl/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/protobuf/","title":"protobuf/3.21.4","text":""},{"location":"packages/v1_47_1/protobuf/#protobuf3214-dependencies","title":"protobuf/3.21.4 dependencies","text":"<ul> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_47_1/protobuf/#using-the-protobuf-conan-package","title":"Using the protobuf Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate protobuf in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#using-protobuf-with-cmake","title":"Using protobuf with CMake","text":""},{"location":"packages/v1_47_1/protobuf/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use protobuf in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global protobuf::protobuf CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(protobuf_project CXX)\n\nfind_package(protobuf)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} protobuf::protobuf)\n</code></pre> <p></p> <p>To install protobuf/3.21.4, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the protobuf Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the protobuf libprotobuf component, through the protobuf::libprotobuf target.</p> <pre><code>...\n# Link just to protobuf libprotobuf component\ntarget_link_libraries(${PROJECT_NAME} protobuf::libprotobuf)\n</code></pre> <p></p> <p>To check all the available components for protobuf Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_47_1/protobuf/#libcmakeprotobufprotobuf-generatecmake","title":"lib/cmake/protobuf/protobuf-generate.cmake","text":"<pre><code># User options\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-options.cmake\")\n\n# Depend packages\n# BEGIN CONAN PATCH\n#_protobuf_FIND_ZLIB@\n# END CONAN PATCH\n\n# Imported targets\nif(NOT TARGET protobuf::protoc)\nif(CMAKE_CROSSCOMPILING)\nfind_program(PROTOC_PROGRAM protoc PATHS ENV PATH NO_DEFAULT_PATH)\nendif()\nif(NOT PROTOC_PROGRAM)\nset(PROTOC_PROGRAM \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/protoc\")\nendif()\nget_filename_component(PROTOC_PROGRAM \"${PROTOC_PROGRAM}\" ABSOLUTE)\nset(Protobuf_PROTOC_EXECUTABLE ${PROTOC_PROGRAM} CACHE FILEPATH \"The protoc compiler\")\nadd_executable(protobuf::protoc IMPORTED)\nset_property(TARGET protobuf::protoc PROPERTY IMPORTED_LOCATION ${Protobuf_PROTOC_EXECUTABLE})\nendif()\n\n\nfunction(protobuf_generate)\ninclude(CMakeParseArguments)\n\nset(_options APPEND_PATH)\nset(_singleargs LANGUAGE OUT_VAR EXPORT_MACRO PROTOC_OUT_DIR PLUGIN PLUGIN_OPTIONS)\nif(COMMAND target_sources)\nlist(APPEND _singleargs TARGET)\nendif()\nset(_multiargs PROTOS IMPORT_DIRS GENERATE_EXTENSIONS PROTOC_OPTIONS)\n\ncmake_parse_arguments(protobuf_generate \"${_options}\" \"${_singleargs}\" \"${_multiargs}\" \"${ARGN}\")\n\nif(NOT protobuf_generate_PROTOS AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without any targets or source files\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_OUT_VAR AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without a target or output variable\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_LANGUAGE)\nset(protobuf_generate_LANGUAGE cpp)\nendif()\nstring(TOLOWER ${protobuf_generate_LANGUAGE} protobuf_generate_LANGUAGE)\n\nif(NOT protobuf_generate_PROTOC_OUT_DIR)\nset(protobuf_generate_PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR})\nendif()\n\nif(protobuf_generate_EXPORT_MACRO AND protobuf_generate_LANGUAGE STREQUAL cpp)\nset(_dll_export_decl \"dllexport_decl=${protobuf_generate_EXPORT_MACRO}\")\nendif()\n\nforeach(_option ${_dll_export_decl} ${protobuf_generate_PLUGIN_OPTIONS})\n# append comma - not using CMake lists and string replacement as users\n# might have semicolons in options\nif(_plugin_options)\nset( _plugin_options \"${_plugin_options},\")\nendif()\nset(_plugin_options \"${_plugin_options}${_option}\")\nendforeach()\n\nif(protobuf_generate_PLUGIN)\nset(_plugin \"--plugin=${protobuf_generate_PLUGIN}\")\nendif()\n\nif(NOT protobuf_generate_GENERATE_EXTENSIONS)\nif(protobuf_generate_LANGUAGE STREQUAL cpp)\nset(protobuf_generate_GENERATE_EXTENSIONS .pb.h .pb.cc)\nelseif(protobuf_generate_LANGUAGE STREQUAL python)\nset(protobuf_generate_GENERATE_EXTENSIONS _pb2.py)\nelse()\nmessage(SEND_ERROR \"Error: protobuf_generate given unknown Language ${LANGUAGE}, please provide a value for GENERATE_EXTENSIONS\")\nreturn()\nendif()\nendif()\n\nif(protobuf_generate_TARGET)\nget_target_property(_source_list ${protobuf_generate_TARGET} SOURCES)\nforeach(_file ${_source_list})\nif(_file MATCHES \"proto$\")\nlist(APPEND protobuf_generate_PROTOS ${_file})\nendif()\nendforeach()\nendif()\n\nif(NOT protobuf_generate_PROTOS)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any .proto files\")\nreturn()\nendif()\n\nif(protobuf_generate_APPEND_PATH)\n# Create an include path for each file specified\nforeach(_file ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_file} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\nlist(FIND _protobuf_include_path ${_abs_dir} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${_abs_dir})\nendif()\nendforeach()\nendif()\n\nforeach(DIR ${protobuf_generate_IMPORT_DIRS})\nget_filename_component(ABS_PATH ${DIR} ABSOLUTE)\nlist(FIND _protobuf_include_path ${ABS_PATH} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${ABS_PATH})\nendif()\nendforeach()\n\nif(NOT _protobuf_include_path)\nset(_protobuf_include_path -I ${CMAKE_CURRENT_SOURCE_DIR})\nendif()\n\nset(_generated_srcs_all)\nforeach(_proto ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_proto} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\n\nget_filename_component(_file_full_name ${_proto} NAME)\nstring(FIND \"${_file_full_name}\" \".\" _file_last_ext_pos REVERSE)\nstring(SUBSTRING \"${_file_full_name}\" 0 ${_file_last_ext_pos} _basename)\n\nset(_suitable_include_found FALSE)\nforeach(DIR ${_protobuf_include_path})\nif(NOT DIR STREQUAL \"-I\")\nfile(RELATIVE_PATH _rel_dir ${DIR} ${_abs_dir})\nstring(FIND \"${_rel_dir}\" \"../\" _is_in_parent_folder)\nif (NOT ${_is_in_parent_folder} EQUAL 0)\nset(_suitable_include_found TRUE)\nbreak()\nendif()\nendif()\nendforeach()\n\nif(NOT _suitable_include_found)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any correct proto include directory.\")\nreturn()\nendif()\n\nset(_generated_srcs)\nforeach(_ext ${protobuf_generate_GENERATE_EXTENSIONS})\nlist(APPEND _generated_srcs \"${protobuf_generate_PROTOC_OUT_DIR}/${_rel_dir}/${_basename}${_ext}\")\nendforeach()\nlist(APPEND _generated_srcs_all ${_generated_srcs})\n\nset(_comment \"Running ${protobuf_generate_LANGUAGE} protocol buffer compiler on ${_proto}\")\nif(protobuf_generate_PROTOC_OPTIONS)\nset(_comment \"${_comment}, protoc-options: ${protobuf_generate_PROTOC_OPTIONS}\")\nendif()\nif(_plugin_options)\nset(_comment \"${_comment}, plugin-options: ${_plugin_options}\")\nendif()\n\nadd_custom_command(\nOUTPUT ${_generated_srcs}\nCOMMAND protobuf::protoc\nARGS ${protobuf_generate_PROTOC_OPTIONS} --${protobuf_generate_LANGUAGE}_out ${_plugin_options}:${protobuf_generate_PROTOC_OUT_DIR} ${_plugin} ${_protobuf_include_path} ${_abs_file}\nDEPENDS ${_abs_file} protobuf::protoc\nCOMMENT ${_comment}\nVERBATIM )\nendforeach()\n\nset_source_files_properties(${_generated_srcs_all} PROPERTIES GENERATED TRUE)\nif(protobuf_generate_OUT_VAR)\nset(${protobuf_generate_OUT_VAR} ${_generated_srcs_all} PARENT_SCOPE)\nendif()\nif(protobuf_generate_TARGET)\ntarget_sources(${protobuf_generate_TARGET} PRIVATE ${_generated_srcs_all})\nendif()\n\nendfunction()\n\n# CMake FindProtobuf module compatible file\nif(protobuf_MODULE_COMPATIBLE)\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-module.cmake\")\nendif()\n\n```#### lib/cmake/protobuf/protobuf-module.cmake\n```cmake\n# This file contains backwards compatibility patches for various legacy functions and variables\n# Functions\n\nfunction(PROTOBUF_GENERATE_CPP SRCS HDRS)\ncmake_parse_arguments(protobuf_generate_cpp \"\" \"EXPORT_MACRO\" \"\" ${ARGN})\n\nset(_proto_files \"${protobuf_generate_cpp_UNPARSED_ARGUMENTS}\")\nif(NOT _proto_files)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_CPP() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE cpp EXPORT_MACRO ${protobuf_generate_cpp_EXPORT_MACRO} OUT_VAR _outvar ${_import_arg} PROTOS ${_proto_files})\n\nset(${SRCS})\nset(${HDRS})\nforeach(_file ${_outvar})\nif(_file MATCHES \"cc$\")\nlist(APPEND ${SRCS} ${_file})\nelse()\nlist(APPEND ${HDRS} ${_file})\nendif()\nendforeach()\nset(${SRCS} ${${SRCS}} PARENT_SCOPE)\nset(${HDRS} ${${HDRS}} PARENT_SCOPE)\nendfunction()\n\nfunction(PROTOBUF_GENERATE_PYTHON SRCS)\nif(NOT ARGN)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_PYTHON() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE python OUT_VAR _outvar ${_import_arg} PROTOS ${ARGN})\nset(${SRCS} ${_outvar} PARENT_SCOPE)\nendfunction()\n\n# Environment\n\n# Backwards compatibility\n# Define camel case versions of input variables\nforeach(UPPER\nPROTOBUF_SRC_ROOT_FOLDER\nPROTOBUF_IMPORT_DIRS\nPROTOBUF_DEBUG\nPROTOBUF_LIBRARY\nPROTOBUF_PROTOC_LIBRARY\nPROTOBUF_INCLUDE_DIR\nPROTOBUF_PROTOC_EXECUTABLE\nPROTOBUF_LIBRARY_DEBUG\nPROTOBUF_PROTOC_LIBRARY_DEBUG\nPROTOBUF_LITE_LIBRARY\nPROTOBUF_LITE_LIBRARY_DEBUG\n)\nif (DEFINED ${UPPER})\nstring(REPLACE \"PROTOBUF_\" \"Protobuf_\" Camel ${UPPER})\nif (NOT DEFINED ${Camel})\nset(${Camel} ${${UPPER}})\nendif()\nendif()\nendforeach()\n\nif(0)\nif(DEFINED Protobuf_SRC_ROOT_FOLDER)\nmessage(AUTHOR_WARNING \"Variable Protobuf_SRC_ROOT_FOLDER defined, but not\"\n\" used in CONFIG mode\")\nendif()\n\ninclude(SelectLibraryConfigurations)\n\n# Internal function: search for normal library as well as a debug one\n#    if the debug one is specified also include debug/optimized keywords\n#    in *_LIBRARIES variable\nfunction(_protobuf_find_libraries name filename)\nif(${name}_LIBRARIES)\n# Use result recorded by a previous call.\nelseif(${name}_LIBRARY)\n# Honor cache entry used by CMake 3.5 and lower.\nset(${name}_LIBRARIES \"${${name}_LIBRARY}\" PARENT_SCOPE)\nelseif(TARGET protobuf::lib${filename})\nget_target_property(${name}_LIBRARY_RELEASE protobuf::lib${filename}\nLOCATION_RELEASE)\nget_target_property(${name}_LIBRARY_RELWITHDEBINFO protobuf::lib${filename}\nLOCATION_RELWITHDEBINFO)\nget_target_property(${name}_LIBRARY_MINSIZEREL protobuf::lib${filename}\nLOCATION_MINSIZEREL)\nget_target_property(${name}_LIBRARY_DEBUG protobuf::lib${filename}\nLOCATION_DEBUG)\n\nselect_library_configurations(${name})\nset(${name}_LIBRARY ${${name}_LIBRARY} PARENT_SCOPE)\nset(${name}_LIBRARIES ${${name}_LIBRARIES} PARENT_SCOPE)\nendif()\nendfunction()\n\n#\n# Main.\n#\n\n# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n# for each directory where a proto file is referenced.\nif(NOT DEFINED PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(PROTOBUF_GENERATE_CPP_APPEND_PATH TRUE)\nendif()\n\n# The Protobuf library\n_protobuf_find_libraries(Protobuf protobuf)\n\n# The Protobuf Lite library\n_protobuf_find_libraries(Protobuf_LITE protobuf-lite)\n\n# The Protobuf Protoc Library\n_protobuf_find_libraries(Protobuf_PROTOC protoc)\n\n# Set the include directory\nget_target_property(Protobuf_INCLUDE_DIRS protobuf::libprotobuf\nINTERFACE_INCLUDE_DIRECTORIES)\n\n# Set the protoc Executable\nif(NOT Protobuf_PROTOC_EXECUTABLE AND TARGET protobuf::protoc)\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELEASE)\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELWITHDEBINFO)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_MINSIZEREL)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_DEBUG)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_NOCONFIG)\nendif()\nendif()\n\n# Version info variable\nset(Protobuf_VERSION \"3.21.4.0\")\n\ninclude(FindPackageHandleStandardArgs)\nFIND_PACKAGE_HANDLE_STANDARD_ARGS(Protobuf\nREQUIRED_VARS Protobuf_PROTOC_EXECUTABLE Protobuf_LIBRARIES Protobuf_INCLUDE_DIRS\nVERSION_VAR Protobuf_VERSION\n)\n\n# Backwards compatibility\nendif()\nforeach(Camel\nProtobuf_VERSION\nProtobuf_SRC_ROOT_FOLDER\nProtobuf_IMPORT_DIRS\nProtobuf_DEBUG\nProtobuf_INCLUDE_DIRS\nProtobuf_LIBRARIES\nProtobuf_PROTOC_LIBRARIES\nProtobuf_LITE_LIBRARIES\nProtobuf_LIBRARY\nProtobuf_PROTOC_LIBRARY\nProtobuf_INCLUDE_DIR\nProtobuf_PROTOC_EXECUTABLE\nProtobuf_LIBRARY_DEBUG\nProtobuf_PROTOC_LIBRARY_DEBUG\nProtobuf_LITE_LIBRARY\nProtobuf_LITE_LIBRARY_DEBUG\n)\nstring(TOUPPER ${Camel} UPPER)\nset(${UPPER} ${${Camel}})\nendforeach()\n\n```#### lib/cmake/protobuf/protobuf-options.cmake\n```cmake\n# Verbose output\noption(protobuf_VERBOSE \"Enable for verbose output\" OFF)\nmark_as_advanced(protobuf_VERBOSE)\n\n# FindProtobuf module compatible\noption(protobuf_MODULE_COMPATIBLE \"CMake built-in FindProtobuf.cmake module compatible\" OFF)\nmark_as_advanced(protobuf_MODULE_COMPATIBLE)\n</code></pre>"},{"location":"packages/v1_47_1/protobuf/#using-protobuf-with-visual-studio","title":"Using protobuf with Visual Studio","text":""},{"location":"packages/v1_47_1/protobuf/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#using-protobuf-with-autotools-and-pkg-config","title":"Using protobuf with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/protobuf/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/protobuf/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the protobuf_full_package.pc file (and the ones corresponding to protobuf dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags protobuf)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l protobuf)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other protobuf)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the protobuf Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for protobuf Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#declared-components-for-protobuf","title":"Declared components for protobuf","text":"<p>These are all the declared components for the protobuf Conan package: * Component libprotobuf:   * CMake target name: <code>protobuf::libprotobuf</code>   * pkg-config .pc file: protobuf.pc   * Requires other components: zlib::zlib   * Links to libraries: protobuf   * Systems libs: pthread, atomic * Component libprotoc:   * CMake target name: <code>protobuf::libprotoc</code>   * pkg-config .pc file: protobuf_full_package-libprotoc.pc   * Requires other components: libprotobuf   * Links to libraries: protoc</p> <p></p>"},{"location":"packages/v1_47_1/protobuf/#exposed-header-files-for-protobuf","title":"Exposed header files for protobuf","text":"<pre><code>#include &lt;google/protobuf/api.pb.h&gt;\n#include &lt;google/protobuf/field_mask.pb.h&gt;\n#include &lt;google/protobuf/generated_message_util.h&gt;\n#include &lt;google/protobuf/implicit_weak_message.h&gt;\n#include &lt;google/protobuf/any.pb.h&gt;\n#include &lt;google/protobuf/type.proto&gt;\n#include &lt;google/protobuf/text_format.h&gt;\n#include &lt;google/protobuf/descriptor.h&gt;\n#include &lt;google/protobuf/map_field.h&gt;\n#include &lt;google/protobuf/map_field_inl.h&gt;\n#include &lt;google/protobuf/arenaz_sampler.h&gt;\n#include &lt;google/protobuf/type.pb.h&gt;\n#include &lt;google/protobuf/extension_set_inl.h&gt;\n#include &lt;google/protobuf/timestamp.proto&gt;\n#include &lt;google/protobuf/struct.proto&gt;\n#include &lt;google/protobuf/duration.proto&gt;\n#include &lt;google/protobuf/arenastring.h&gt;\n#include &lt;google/protobuf/message.h&gt;\n#include &lt;google/protobuf/arena_impl.h&gt;\n#include &lt;google/protobuf/has_bits.h&gt;\n#include &lt;google/protobuf/metadata.h&gt;\n#include &lt;google/protobuf/empty.pb.h&gt;\n#include &lt;google/protobuf/map_entry.h&gt;\n#include &lt;google/protobuf/field_mask.proto&gt;\n#include &lt;google/protobuf/descriptor_database.h&gt;\n#include &lt;google/protobuf/wire_format_lite.h&gt;\n#include &lt;google/protobuf/wrappers.proto&gt;\n#include &lt;google/protobuf/struct.pb.h&gt;\n#include &lt;google/protobuf/any.proto&gt;\n#include &lt;google/protobuf/port.h&gt;\n#include &lt;google/protobuf/repeated_ptr_field.h&gt;\n#include &lt;google/protobuf/endian.h&gt;\n#include &lt;google/protobuf/generated_message_tctable_decl.h&gt;\n#include &lt;google/protobuf/generated_message_reflection.h&gt;\n#include &lt;google/protobuf/map_entry_lite.h&gt;\n#include &lt;google/protobuf/reflection_ops.h&gt;\n#include &lt;google/protobuf/metadata_lite.h&gt;\n#include &lt;google/protobuf/repeated_field.h&gt;\n#include &lt;google/protobuf/wire_format.h&gt;\n#include &lt;google/protobuf/field_access_listener.h&gt;\n#include &lt;google/protobuf/service.h&gt;\n#include &lt;google/protobuf/duration.pb.h&gt;\n#include &lt;google/protobuf/port_def.inc&gt;\n#include &lt;google/protobuf/dynamic_message.h&gt;\n#include &lt;google/protobuf/generated_enum_util.h&gt;\n#include &lt;google/protobuf/explicitly_constructed.h&gt;\n#include &lt;google/protobuf/api.proto&gt;\n#include &lt;google/protobuf/message_lite.h&gt;\n#include &lt;google/protobuf/generated_enum_reflection.h&gt;\n#include &lt;google/protobuf/map_type_handler.h&gt;\n#include &lt;google/protobuf/unknown_field_set.h&gt;\n#include &lt;google/protobuf/map_field_lite.h&gt;\n#include &lt;google/protobuf/timestamp.pb.h&gt;\n#include &lt;google/protobuf/descriptor.pb.h&gt;\n#include &lt;google/protobuf/empty.proto&gt;\n#include &lt;google/protobuf/generated_message_tctable_impl.h&gt;\n#include &lt;google/protobuf/reflection.h&gt;\n#include &lt;google/protobuf/descriptor.proto&gt;\n#include &lt;google/protobuf/wrappers.pb.h&gt;\n#include &lt;google/protobuf/parse_context.h&gt;\n#include &lt;google/protobuf/map.h&gt;\n#include &lt;google/protobuf/generated_message_bases.h&gt;\n#include &lt;google/protobuf/arena.h&gt;\n#include &lt;google/protobuf/port_undef.inc&gt;\n#include &lt;google/protobuf/source_context.proto&gt;\n#include &lt;google/protobuf/extension_set.h&gt;\n#include &lt;google/protobuf/inlined_string_field.h&gt;\n#include &lt;google/protobuf/source_context.pb.h&gt;\n#include &lt;google/protobuf/any.h&gt;\n#include &lt;google/protobuf/util/type_resolver.h&gt;\n#include &lt;google/protobuf/util/time_util.h&gt;\n#include &lt;google/protobuf/util/message_differencer.h&gt;\n#include &lt;google/protobuf/util/json_util.h&gt;\n#include &lt;google/protobuf/util/field_comparator.h&gt;\n#include &lt;google/protobuf/util/delimited_message_util.h&gt;\n#include &lt;google/protobuf/util/field_mask_util.h&gt;\n#include &lt;google/protobuf/util/type_resolver_util.h&gt;\n#include &lt;google/protobuf/stubs/macros.h&gt;\n#include &lt;google/protobuf/stubs/hash.h&gt;\n#include &lt;google/protobuf/stubs/bytestream.h&gt;\n#include &lt;google/protobuf/stubs/once.h&gt;\n#include &lt;google/protobuf/stubs/template_util.h&gt;\n#include &lt;google/protobuf/stubs/common.h&gt;\n#include &lt;google/protobuf/stubs/logging.h&gt;\n#include &lt;google/protobuf/stubs/port.h&gt;\n#include &lt;google/protobuf/stubs/callback.h&gt;\n#include &lt;google/protobuf/stubs/mutex.h&gt;\n#include &lt;google/protobuf/stubs/platform_macros.h&gt;\n#include &lt;google/protobuf/stubs/map_util.h&gt;\n#include &lt;google/protobuf/stubs/casts.h&gt;\n#include &lt;google/protobuf/stubs/stringpiece.h&gt;\n#include &lt;google/protobuf/stubs/status.h&gt;\n#include &lt;google/protobuf/stubs/stl_util.h&gt;\n#include &lt;google/protobuf/stubs/strutil.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl_lite.h&gt;\n#include &lt;google/protobuf/io/printer.h&gt;\n#include &lt;google/protobuf/io/gzip_stream.h&gt;\n#include &lt;google/protobuf/io/strtod.h&gt;\n#include &lt;google/protobuf/io/coded_stream.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream.h&gt;\n#include &lt;google/protobuf/io/tokenizer.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl.h&gt;\n#include &lt;google/protobuf/io/io_win32.h&gt;\n#include &lt;google/protobuf/compiler/plugin.h&gt;\n#include &lt;google/protobuf/compiler/command_line_interface.h&gt;\n#include &lt;google/protobuf/compiler/importer.h&gt;\n#include &lt;google/protobuf/compiler/code_generator.h&gt;\n#include &lt;google/protobuf/compiler/parser.h&gt;\n#include &lt;google/protobuf/compiler/plugin.proto&gt;\n#include &lt;google/protobuf/compiler/plugin.pb.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_names.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_generator.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_doc_comment.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_options.h&gt;\n#include &lt;google/protobuf/compiler/php/php_generator.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_helpers.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/cpp_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/names.h&gt;\n#include &lt;google/protobuf/compiler/cpp/helpers.h&gt;\n#include &lt;google/protobuf/compiler/cpp/file.h&gt;\n#include &lt;google/protobuf/compiler/java/generator.h&gt;\n#include &lt;google/protobuf/compiler/java/kotlin_generator.h&gt;\n#include &lt;google/protobuf/compiler/java/names.h&gt;\n#include &lt;google/protobuf/compiler/java/java_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/generator.h&gt;\n#include &lt;google/protobuf/compiler/python/python_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/pyi_generator.h&gt;\n#include &lt;google/protobuf/compiler/ruby/ruby_generator.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/protobuf/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/re2/","title":"re2/20220601","text":""},{"location":"packages/v1_47_1/re2/#using-the-re2-conan-package","title":"Using the re2 Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate re2 in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/re2/#using-re2-with-cmake","title":"Using re2 with CMake","text":""},{"location":"packages/v1_47_1/re2/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use re2 in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global re2::re2 CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(re2_project CXX)\n\nfind_package(re2)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} re2::re2)\n</code></pre> <p></p> <p>To install re2/20220601, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/re2/#using-re2-with-visual-studio","title":"Using re2 with Visual Studio","text":""},{"location":"packages/v1_47_1/re2/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/re2/#using-re2-with-autotools-and-pkg-config","title":"Using re2 with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/re2/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/re2/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the re2.pc file (and the ones corresponding to re2 dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags re2)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l re2)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other re2)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/re2/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/re2/#exposed-header-files-for-re2","title":"Exposed header files for re2","text":"<pre><code>#include &lt;re2/filtered_re2.h&gt;\n#include &lt;re2/set.h&gt;\n#include &lt;re2/stringpiece.h&gt;\n#include &lt;re2/re2.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/re2/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_47_1/zlib/","title":"zlib/1.2.13","text":""},{"location":"packages/v1_47_1/zlib/#using-the-zlib-conan-package","title":"Using the zlib Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate zlib in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_47_1/zlib/#using-zlib-with-cmake","title":"Using zlib with CMake","text":""},{"location":"packages/v1_47_1/zlib/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use zlib in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global ZLIB::ZLIB CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(zlib_project C)\n\nfind_package(ZLIB)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} ZLIB::ZLIB)\n</code></pre> <p></p> <p>To install zlib/1.2.13, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/zlib/#using-zlib-with-visual-studio","title":"Using zlib with Visual Studio","text":""},{"location":"packages/v1_47_1/zlib/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_47_1/zlib/#using-zlib-with-autotools-and-pkg-config","title":"Using zlib with Autotools and pkg-config","text":""},{"location":"packages/v1_47_1/zlib/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the zlib library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your zlib dependency like:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/zlib/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the zlib.pc file (and the ones corresponding to zlib dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nzlib/1.2.13\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags zlib)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l zlib)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other zlib)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_47_1/zlib/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_47_1/zlib/#exposed-header-files-for-zlib","title":"Exposed header files for zlib","text":"<pre><code>#include &lt;zconf.h&gt;\n#include &lt;zlib.h&gt;\n</code></pre>"},{"location":"packages/v1_47_1/zlib/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 20:14:38.</p>"},{"location":"packages/v1_50_1/abseil/","title":"abseil/20220623.0","text":""},{"location":"packages/v1_50_1/abseil/#using-the-abseil-conan-package","title":"Using the abseil Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate abseil in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#using-abseil-with-cmake","title":"Using abseil with CMake","text":""},{"location":"packages/v1_50_1/abseil/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use abseil in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global abseil::abseil CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(abseil_project CXX)\n\nfind_package(absl)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} abseil::abseil)\n</code></pre> <p></p> <p>To install abseil/20220623.0, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the abseil Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the abseil absl_atomic_hook component, through the absl::atomic_hook target.</p> <pre><code>...\n# Link just to abseil absl_atomic_hook component\ntarget_link_libraries(${PROJECT_NAME} absl::atomic_hook)\n</code></pre> <p></p> <p>To check all the available components for abseil Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_50_1/abseil/#libcmakeconan_trickcxx_stdcmake","title":"lib/cmake/conan_trick/cxx_std.cmake","text":"<pre><code>target_compile_features(absl::atomic_hook INTERFACE cxx_std_11)\ntarget_compile_features(absl::errno_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::log_severity INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_logging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::spinlock_wait INTERFACE cxx_std_11)\ntarget_compile_features(absl::config INTERFACE cxx_std_11)\ntarget_compile_features(absl::dynamic_annotations INTERFACE cxx_std_11)\ntarget_compile_features(absl::core_headers INTERFACE cxx_std_11)\ntarget_compile_features(absl::malloc_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::base INTERFACE cxx_std_11)\ntarget_compile_features(absl::throw_delegate INTERFACE cxx_std_11)\ntarget_compile_features(absl::pretty_function INTERFACE cxx_std_11)\ntarget_compile_features(absl::endian INTERFACE cxx_std_11)\ntarget_compile_features(absl::scoped_set_env INTERFACE cxx_std_11)\ntarget_compile_features(absl::strerror INTERFACE cxx_std_11)\ntarget_compile_features(absl::fast_type_id INTERFACE cxx_std_11)\ntarget_compile_features(absl::prefetch INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm INTERFACE cxx_std_11)\ntarget_compile_features(absl::algorithm_container INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cleanup INTERFACE cxx_std_11)\ntarget_compile_features(absl::btree INTERFACE cxx_std_11)\ntarget_compile_features(absl::compressed_tuple INTERFACE cxx_std_11)\ntarget_compile_features(absl::fixed_array INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::inlined_vector INTERFACE cxx_std_11)\ntarget_compile_features(absl::counting_allocator INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::flat_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_function_defaults INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash_policy_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtablez_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug INTERFACE cxx_std_11)\ntarget_compile_features(absl::hashtable_debug_hooks INTERFACE cxx_std_11)\ntarget_compile_features(absl::node_slot_policy INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_map INTERFACE cxx_std_11)\ntarget_compile_features(absl::container_common INTERFACE cxx_std_11)\ntarget_compile_features(absl::raw_hash_set INTERFACE cxx_std_11)\ntarget_compile_features(absl::layout INTERFACE cxx_std_11)\ntarget_compile_features(absl::stacktrace INTERFACE cxx_std_11)\ntarget_compile_features(absl::symbolize INTERFACE cxx_std_11)\ntarget_compile_features(absl::examine_stack INTERFACE cxx_std_11)\ntarget_compile_features(absl::failure_signal_handler INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::demangle_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::leak_check INTERFACE cxx_std_11)\ntarget_compile_features(absl::debugging INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_path_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_program_name INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_config INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_marshalling INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_commandlineflag INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_private_handle_accessor INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_reflection INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_usage INTERFACE cxx_std_11)\ntarget_compile_features(absl::flags_parse INTERFACE cxx_std_11)\ntarget_compile_features(absl::any_invocable INTERFACE cxx_std_11)\ntarget_compile_features(absl::bind_front INTERFACE cxx_std_11)\ntarget_compile_features(absl::function_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::city INTERFACE cxx_std_11)\ntarget_compile_features(absl::low_level_hash INTERFACE cxx_std_11)\ntarget_compile_features(absl::memory INTERFACE cxx_std_11)\ntarget_compile_features(absl::type_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::meta INTERFACE cxx_std_11)\ntarget_compile_features(absl::bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::int128 INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric INTERFACE cxx_std_11)\ntarget_compile_features(absl::numeric_representation INTERFACE cxx_std_11)\ntarget_compile_features(absl::sample_recorder INTERFACE cxx_std_11)\ntarget_compile_features(absl::exponential_biased INTERFACE cxx_std_11)\ntarget_compile_features(absl::periodic_sampler INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_random INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_bit_gen_ref INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_mock_helpers INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_distributions INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_gen_exception INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_seed_sequences INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_traits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_caller INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fast_uniform_bits INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_seed_material INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pool_urbg INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_salted_seed_seq INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_iostream_state_saver INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_generate_real INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_wide_multiply INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_fastmath INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_nonsecure_base INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_pcg_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_engine INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_platform INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_slow INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_randen_hwaes_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_distribution_test_util INTERFACE cxx_std_11)\ntarget_compile_features(absl::random_internal_uniform_helper INTERFACE cxx_std_11)\ntarget_compile_features(absl::status INTERFACE cxx_std_11)\ntarget_compile_features(absl::statusor INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings INTERFACE cxx_std_11)\ntarget_compile_features(absl::strings_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format INTERFACE cxx_std_11)\ntarget_compile_features(absl::str_format_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_tracker INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_functions INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_statistics INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_handle INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_info INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_sample_token INTERFACE cxx_std_11)\ntarget_compile_features(absl::cordz_update_scope INTERFACE cxx_std_11)\ntarget_compile_features(absl::cord INTERFACE cxx_std_11)\ntarget_compile_features(absl::graphcycles_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::kernel_timeout_internal INTERFACE cxx_std_11)\ntarget_compile_features(absl::synchronization INTERFACE cxx_std_11)\ntarget_compile_features(absl::time INTERFACE cxx_std_11)\ntarget_compile_features(absl::civil_time INTERFACE cxx_std_11)\ntarget_compile_features(absl::time_zone INTERFACE cxx_std_11)\ntarget_compile_features(absl::any INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_any_cast_impl INTERFACE cxx_std_11)\ntarget_compile_features(absl::span INTERFACE cxx_std_11)\ntarget_compile_features(absl::optional INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_optional_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::bad_variant_access INTERFACE cxx_std_11)\ntarget_compile_features(absl::variant INTERFACE cxx_std_11)\ntarget_compile_features(absl::compare INTERFACE cxx_std_11)\ntarget_compile_features(absl::utility INTERFACE cxx_std_11)\n</code></pre>"},{"location":"packages/v1_50_1/abseil/#using-abseil-with-visual-studio","title":"Using abseil with Visual Studio","text":""},{"location":"packages/v1_50_1/abseil/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#using-abseil-with-autotools-and-pkg-config","title":"Using abseil with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/abseil/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the abseil library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your abseil dependency like:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/abseil/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the abseil.pc file (and the ones corresponding to abseil dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nabseil/20220623.0\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags abseil)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l abseil)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other abseil)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the abseil Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for abseil Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#declared-components-for-abseil","title":"Declared components for abseil","text":"<p>These are all the declared components for the abseil Conan package: * Component absl_atomic_hook:   * CMake target name: <code>absl::atomic_hook</code>   * pkg-config .pc file: absl_atomic_hook.pc   * Requires other components: absl_config, absl_core_headers * Component absl_errno_saver:   * CMake target name: <code>absl::errno_saver</code>   * pkg-config .pc file: absl_errno_saver.pc   * Requires other components: absl_config * Component absl_log_severity:   * CMake target name: <code>absl::log_severity</code>   * pkg-config .pc file: absl_log_severity.pc   * Requires other components: absl_core_headers   * Links to libraries: absl_log_severity * Component absl_raw_logging_internal:   * CMake target name: <code>absl::raw_logging_internal</code>   * pkg-config .pc file: absl_raw_logging_internal.pc   * Requires other components: absl_atomic_hook, absl_config, absl_core_headers, absl_errno_saver, absl_log_severity   * Links to libraries: absl_raw_logging_internal * Component absl_spinlock_wait:   * CMake target name: <code>absl::spinlock_wait</code>   * pkg-config .pc file: absl_spinlock_wait.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_errno_saver   * Links to libraries: absl_spinlock_wait * Component absl_config:   * CMake target name: <code>absl::config</code>   * pkg-config .pc file: absl_config.pc * Component absl_dynamic_annotations:   * CMake target name: <code>absl::dynamic_annotations</code>   * pkg-config .pc file: absl_dynamic_annotations.pc   * Requires other components: absl_config * Component absl_core_headers:   * CMake target name: <code>absl::core_headers</code>   * pkg-config .pc file: absl_core_headers.pc   * Requires other components: absl_config * Component absl_malloc_internal:   * CMake target name: <code>absl::malloc_internal</code>   * pkg-config .pc file: absl_malloc_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_raw_logging_internal   * Links to libraries: absl_malloc_internal   * Systems libs: pthread * Component absl_base_internal:   * CMake target name: <code>absl::base_internal</code>   * pkg-config .pc file: absl_base_internal.pc   * Requires other components: absl_config, absl_type_traits * Component absl_base:   * CMake target name: <code>absl::base</code>   * pkg-config .pc file: absl_base.pc   * Requires other components: absl_atomic_hook, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_log_severity, absl_raw_logging_internal, absl_spinlock_wait, absl_type_traits   * Links to libraries: absl_base   * Systems libs: pthread, rt * Component absl_throw_delegate:   * CMake target name: <code>absl::throw_delegate</code>   * pkg-config .pc file: absl_throw_delegate.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_throw_delegate * Component absl_pretty_function:   * CMake target name: <code>absl::pretty_function</code>   * pkg-config .pc file: absl_pretty_function.pc * Component absl_endian:   * CMake target name: <code>absl::endian</code>   * pkg-config .pc file: absl_endian.pc   * Requires other components: absl_base, absl_config, absl_core_headers * Component absl_scoped_set_env:   * CMake target name: <code>absl::scoped_set_env</code>   * pkg-config .pc file: absl_scoped_set_env.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_scoped_set_env * Component absl_strerror:   * CMake target name: <code>absl::strerror</code>   * pkg-config .pc file: absl_strerror.pc   * Requires other components: absl_config, absl_core_headers, absl_errno_saver   * Links to libraries: absl_strerror * Component absl_fast_type_id:   * CMake target name: <code>absl::fast_type_id</code>   * pkg-config .pc file: absl_fast_type_id.pc   * Requires other components: absl_config * Component absl_prefetch:   * CMake target name: <code>absl::prefetch</code>   * pkg-config .pc file: absl_prefetch.pc   * Requires other components: absl_config * Component absl_algorithm:   * CMake target name: <code>absl::algorithm</code>   * pkg-config .pc file: absl_algorithm.pc   * Requires other components: absl_config * Component absl_algorithm_container:   * CMake target name: <code>absl::algorithm_container</code>   * pkg-config .pc file: absl_algorithm_container.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_meta * Component absl_cleanup_internal:   * CMake target name: <code>absl::cleanup_internal</code>   * pkg-config .pc file: absl_cleanup_internal.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_utility * Component absl_cleanup:   * CMake target name: <code>absl::cleanup</code>   * pkg-config .pc file: absl_cleanup.pc   * Requires other components: absl_cleanup_internal, absl_config, absl_core_headers * Component absl_btree:   * CMake target name: <code>absl::btree</code>   * pkg-config .pc file: absl_btree.pc   * Requires other components: absl_container_common, absl_compare, absl_compressed_tuple, absl_container_memory, absl_cord, absl_core_headers, absl_layout, absl_memory, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits, absl_utility * Component absl_compressed_tuple:   * CMake target name: <code>absl::compressed_tuple</code>   * pkg-config .pc file: absl_compressed_tuple.pc   * Requires other components: absl_utility * Component absl_fixed_array:   * CMake target name: <code>absl::fixed_array</code>   * pkg-config .pc file: absl_fixed_array.pc   * Requires other components: absl_compressed_tuple, absl_algorithm, absl_config, absl_core_headers, absl_dynamic_annotations, absl_throw_delegate, absl_memory * Component absl_inlined_vector_internal:   * CMake target name: <code>absl::inlined_vector_internal</code>   * pkg-config .pc file: absl_inlined_vector_internal.pc   * Requires other components: absl_compressed_tuple, absl_core_headers, absl_memory, absl_span, absl_type_traits * Component absl_inlined_vector:   * CMake target name: <code>absl::inlined_vector</code>   * pkg-config .pc file: absl_inlined_vector.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_inlined_vector_internal, absl_throw_delegate, absl_memory * Component absl_counting_allocator:   * CMake target name: <code>absl::counting_allocator</code>   * pkg-config .pc file: absl_counting_allocator.pc   * Requires other components: absl_config * Component absl_flat_hash_map:   * CMake target name: <code>absl::flat_hash_map</code>   * pkg-config .pc file: absl_flat_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_flat_hash_set:   * CMake target name: <code>absl::flat_hash_set</code>   * pkg-config .pc file: absl_flat_hash_set.pc   * Requires other components: absl_container_memory, absl_hash_function_defaults, absl_raw_hash_set, absl_algorithm_container, absl_core_headers, absl_memory * Component absl_node_hash_map:   * CMake target name: <code>absl::node_hash_map</code>   * pkg-config .pc file: absl_node_hash_map.pc   * Requires other components: absl_container_memory, absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_map, absl_algorithm_container, absl_memory * Component absl_node_hash_set:   * CMake target name: <code>absl::node_hash_set</code>   * pkg-config .pc file: absl_node_hash_set.pc   * Requires other components: absl_core_headers, absl_hash_function_defaults, absl_node_slot_policy, absl_raw_hash_set, absl_algorithm_container, absl_memory * Component absl_container_memory:   * CMake target name: <code>absl::container_memory</code>   * pkg-config .pc file: absl_container_memory.pc   * Requires other components: absl_config, absl_memory, absl_type_traits, absl_utility * Component absl_hash_function_defaults:   * CMake target name: <code>absl::hash_function_defaults</code>   * pkg-config .pc file: absl_hash_function_defaults.pc   * Requires other components: absl_config, absl_cord, absl_hash, absl_strings * Component absl_hash_policy_traits:   * CMake target name: <code>absl::hash_policy_traits</code>   * pkg-config .pc file: absl_hash_policy_traits.pc   * Requires other components: absl_meta * Component absl_hashtablez_sampler:   * CMake target name: <code>absl::hashtablez_sampler</code>   * pkg-config .pc file: absl_hashtablez_sampler.pc   * Requires other components: absl_base, absl_config, absl_exponential_biased, absl_sample_recorder, absl_synchronization   * Links to libraries: absl_hashtablez_sampler * Component absl_hashtable_debug:   * CMake target name: <code>absl::hashtable_debug</code>   * pkg-config .pc file: absl_hashtable_debug.pc   * Requires other components: absl_hashtable_debug_hooks * Component absl_hashtable_debug_hooks:   * CMake target name: <code>absl::hashtable_debug_hooks</code>   * pkg-config .pc file: absl_hashtable_debug_hooks.pc   * Requires other components: absl_config * Component absl_node_slot_policy:   * CMake target name: <code>absl::node_slot_policy</code>   * pkg-config .pc file: absl_node_slot_policy.pc   * Requires other components: absl_config * Component absl_raw_hash_map:   * CMake target name: <code>absl::raw_hash_map</code>   * pkg-config .pc file: absl_raw_hash_map.pc   * Requires other components: absl_container_memory, absl_raw_hash_set, absl_throw_delegate * Component absl_container_common:   * CMake target name: <code>absl::container_common</code>   * pkg-config .pc file: absl_container_common.pc   * Requires other components: absl_type_traits * Component absl_raw_hash_set:   * CMake target name: <code>absl::raw_hash_set</code>   * pkg-config .pc file: absl_raw_hash_set.pc   * Requires other components: absl_bits, absl_compressed_tuple, absl_config, absl_container_common, absl_container_memory, absl_core_headers, absl_endian, absl_hash_policy_traits, absl_hashtable_debug_hooks, absl_memory, absl_meta, absl_optional, absl_prefetch, absl_utility, absl_hashtablez_sampler   * Links to libraries: absl_raw_hash_set * Component absl_layout:   * CMake target name: <code>absl::layout</code>   * pkg-config .pc file: absl_layout.pc   * Requires other components: absl_config, absl_core_headers, absl_meta, absl_strings, absl_span, absl_utility * Component absl_stacktrace:   * CMake target name: <code>absl::stacktrace</code>   * pkg-config .pc file: absl_stacktrace.pc   * Requires other components: absl_debugging_internal, absl_config, absl_core_headers   * Links to libraries: absl_stacktrace * Component absl_symbolize:   * CMake target name: <code>absl::symbolize</code>   * pkg-config .pc file: absl_symbolize.pc   * Requires other components: absl_debugging_internal, absl_demangle_internal, absl_base, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_strings   * Links to libraries: absl_symbolize * Component absl_examine_stack:   * CMake target name: <code>absl::examine_stack</code>   * pkg-config .pc file: absl_examine_stack.pc   * Requires other components: absl_stacktrace, absl_symbolize, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_examine_stack * Component absl_failure_signal_handler:   * CMake target name: <code>absl::failure_signal_handler</code>   * pkg-config .pc file: absl_failure_signal_handler.pc   * Requires other components: absl_examine_stack, absl_stacktrace, absl_base, absl_config, absl_core_headers, absl_raw_logging_internal   * Links to libraries: absl_failure_signal_handler * Component absl_debugging_internal:   * CMake target name: <code>absl::debugging_internal</code>   * pkg-config .pc file: absl_debugging_internal.pc   * Requires other components: absl_core_headers, absl_config, absl_dynamic_annotations, absl_errno_saver, absl_raw_logging_internal   * Links to libraries: absl_debugging_internal * Component absl_demangle_internal:   * CMake target name: <code>absl::demangle_internal</code>   * pkg-config .pc file: absl_demangle_internal.pc   * Requires other components: absl_base, absl_core_headers   * Links to libraries: absl_demangle_internal * Component absl_leak_check:   * CMake target name: <code>absl::leak_check</code>   * pkg-config .pc file: absl_leak_check.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_leak_check * Component absl_debugging:   * CMake target name: <code>absl::debugging</code>   * pkg-config .pc file: absl_debugging.pc   * Requires other components: absl_stacktrace, absl_leak_check * Component absl_flags_path_util:   * CMake target name: <code>absl::flags_path_util</code>   * pkg-config .pc file: absl_flags_path_util.pc   * Requires other components: absl_config, absl_strings * Component absl_flags_program_name:   * CMake target name: <code>absl::flags_program_name</code>   * pkg-config .pc file: absl_flags_program_name.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_path_util, absl_strings, absl_synchronization   * Links to libraries: absl_flags_program_name * Component absl_flags_config:   * CMake target name: <code>absl::flags_config</code>   * pkg-config .pc file: absl_flags_config.pc   * Requires other components: absl_config, absl_flags_path_util, absl_flags_program_name, absl_core_headers, absl_strings, absl_synchronization   * Links to libraries: absl_flags_config * Component absl_flags_marshalling:   * CMake target name: <code>absl::flags_marshalling</code>   * pkg-config .pc file: absl_flags_marshalling.pc   * Requires other components: absl_config, absl_core_headers, absl_log_severity, absl_optional, absl_strings, absl_str_format   * Links to libraries: absl_flags_marshalling * Component absl_flags_commandlineflag_internal:   * CMake target name: <code>absl::flags_commandlineflag_internal</code>   * pkg-config .pc file: absl_flags_commandlineflag_internal.pc   * Requires other components: absl_config, absl_dynamic_annotations, absl_fast_type_id   * Links to libraries: absl_flags_commandlineflag_internal * Component absl_flags_commandlineflag:   * CMake target name: <code>absl::flags_commandlineflag</code>   * pkg-config .pc file: absl_flags_commandlineflag.pc   * Requires other components: absl_config, absl_fast_type_id, absl_flags_commandlineflag_internal, absl_optional, absl_strings   * Links to libraries: absl_flags_commandlineflag * Component absl_flags_private_handle_accessor:   * CMake target name: <code>absl::flags_private_handle_accessor</code>   * pkg-config .pc file: absl_flags_private_handle_accessor.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_strings   * Links to libraries: absl_flags_private_handle_accessor * Component absl_flags_reflection:   * CMake target name: <code>absl::flags_reflection</code>   * pkg-config .pc file: absl_flags_reflection.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_private_handle_accessor, absl_flags_config, absl_strings, absl_synchronization, absl_flat_hash_map   * Links to libraries: absl_flags_reflection * Component absl_flags_internal:   * CMake target name: <code>absl::flags_internal</code>   * pkg-config .pc file: absl_flags_internal.pc   * Requires other components: absl_base, absl_config, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_config, absl_flags_marshalling, absl_synchronization, absl_meta, absl_utility   * Links to libraries: absl_flags_internal * Component absl_flags:   * CMake target name: <code>absl::flags</code>   * pkg-config .pc file: absl_flags.pc   * Requires other components: absl_config, absl_flags_commandlineflag, absl_flags_config, absl_flags_internal, absl_flags_reflection, absl_base, absl_core_headers, absl_strings   * Links to libraries: absl_flags * Component absl_flags_usage_internal:   * CMake target name: <code>absl::flags_usage_internal</code>   * pkg-config .pc file: absl_flags_usage_internal.pc   * Requires other components: absl_config, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_internal, absl_flags_path_util, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flat_hash_map, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage_internal * Component absl_flags_usage:   * CMake target name: <code>absl::flags_usage</code>   * pkg-config .pc file: absl_flags_usage.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_usage_internal, absl_strings, absl_synchronization   * Links to libraries: absl_flags_usage * Component absl_flags_parse:   * CMake target name: <code>absl::flags_parse</code>   * pkg-config .pc file: absl_flags_parse.pc   * Requires other components: absl_config, absl_core_headers, absl_flags_config, absl_flags, absl_flags_commandlineflag, absl_flags_commandlineflag_internal, absl_flags_internal, absl_flags_private_handle_accessor, absl_flags_program_name, absl_flags_reflection, absl_flags_usage, absl_strings, absl_synchronization   * Links to libraries: absl_flags_parse * Component absl_any_invocable:   * CMake target name: <code>absl::any_invocable</code>   * pkg-config .pc file: absl_any_invocable.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_bind_front:   * CMake target name: <code>absl::bind_front</code>   * pkg-config .pc file: absl_bind_front.pc   * Requires other components: absl_base_internal, absl_compressed_tuple * Component absl_function_ref:   * CMake target name: <code>absl::function_ref</code>   * pkg-config .pc file: absl_function_ref.pc   * Requires other components: absl_base_internal, absl_core_headers, absl_meta * Component absl_hash:   * CMake target name: <code>absl::hash</code>   * pkg-config .pc file: absl_hash.pc   * Requires other components: absl_city, absl_config, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_meta, absl_int128, absl_strings, absl_optional, absl_variant, absl_utility, absl_low_level_hash   * Links to libraries: absl_hash * Component absl_city:   * CMake target name: <code>absl::city</code>   * pkg-config .pc file: absl_city.pc   * Requires other components: absl_config, absl_core_headers, absl_endian   * Links to libraries: absl_city * Component absl_low_level_hash:   * CMake target name: <code>absl::low_level_hash</code>   * pkg-config .pc file: absl_low_level_hash.pc   * Requires other components: absl_bits, absl_config, absl_endian, absl_int128   * Links to libraries: absl_low_level_hash * Component absl_memory:   * CMake target name: <code>absl::memory</code>   * pkg-config .pc file: absl_memory.pc   * Requires other components: absl_core_headers, absl_meta * Component absl_type_traits:   * CMake target name: <code>absl::type_traits</code>   * pkg-config .pc file: absl_type_traits.pc   * Requires other components: absl_config * Component absl_meta:   * CMake target name: <code>absl::meta</code>   * pkg-config .pc file: absl_meta.pc   * Requires other components: absl_type_traits * Component absl_bits:   * CMake target name: <code>absl::bits</code>   * pkg-config .pc file: absl_bits.pc   * Requires other components: absl_core_headers * Component absl_int128:   * CMake target name: <code>absl::int128</code>   * pkg-config .pc file: absl_int128.pc   * Requires other components: absl_config, absl_core_headers, absl_bits   * Links to libraries: absl_int128 * Component absl_numeric:   * CMake target name: <code>absl::numeric</code>   * pkg-config .pc file: absl_numeric.pc   * Requires other components: absl_int128 * Component absl_numeric_representation:   * CMake target name: <code>absl::numeric_representation</code>   * pkg-config .pc file: absl_numeric_representation.pc   * Requires other components: absl_config * Component absl_sample_recorder:   * CMake target name: <code>absl::sample_recorder</code>   * pkg-config .pc file: absl_sample_recorder.pc   * Requires other components: absl_base, absl_synchronization * Component absl_exponential_biased:   * CMake target name: <code>absl::exponential_biased</code>   * pkg-config .pc file: absl_exponential_biased.pc   * Requires other components: absl_config, absl_core_headers   * Links to libraries: absl_exponential_biased * Component absl_periodic_sampler:   * CMake target name: <code>absl::periodic_sampler</code>   * pkg-config .pc file: absl_periodic_sampler.pc   * Requires other components: absl_core_headers, absl_exponential_biased   * Links to libraries: absl_periodic_sampler * Component absl_random_random:   * CMake target name: <code>absl::random_random</code>   * pkg-config .pc file: absl_random_random.pc   * Requires other components: absl_random_distributions, absl_random_internal_nonsecure_base, absl_random_internal_pcg_engine, absl_random_internal_pool_urbg, absl_random_internal_randen_engine, absl_random_seed_sequences * Component absl_random_bit_gen_ref:   * CMake target name: <code>absl::random_bit_gen_ref</code>   * pkg-config .pc file: absl_random_bit_gen_ref.pc   * Requires other components: absl_core_headers, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_type_traits * Component absl_random_internal_mock_helpers:   * CMake target name: <code>absl::random_internal_mock_helpers</code>   * pkg-config .pc file: absl_random_internal_mock_helpers.pc   * Requires other components: absl_fast_type_id, absl_optional * Component absl_random_distributions:   * CMake target name: <code>absl::random_distributions</code>   * pkg-config .pc file: absl_random_distributions.pc   * Requires other components: absl_base_internal, absl_config, absl_core_headers, absl_random_internal_generate_real, absl_random_internal_distribution_caller, absl_random_internal_fast_uniform_bits, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_random_internal_traits, absl_random_internal_uniform_helper, absl_random_internal_wide_multiply, absl_strings, absl_type_traits   * Links to libraries: absl_random_distributions * Component absl_random_seed_gen_exception:   * CMake target name: <code>absl::random_seed_gen_exception</code>   * pkg-config .pc file: absl_random_seed_gen_exception.pc   * Requires other components: absl_config   * Links to libraries: absl_random_seed_gen_exception * Component absl_random_seed_sequences:   * CMake target name: <code>absl::random_seed_sequences</code>   * pkg-config .pc file: absl_random_seed_sequences.pc   * Requires other components: absl_config, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_random_seed_gen_exception, absl_span   * Links to libraries: absl_random_seed_sequences * Component absl_random_internal_traits:   * CMake target name: <code>absl::random_internal_traits</code>   * pkg-config .pc file: absl_random_internal_traits.pc   * Requires other components: absl_config * Component absl_random_internal_distribution_caller:   * CMake target name: <code>absl::random_internal_distribution_caller</code>   * pkg-config .pc file: absl_random_internal_distribution_caller.pc   * Requires other components: absl_config, absl_utility, absl_fast_type_id * Component absl_random_internal_fast_uniform_bits:   * CMake target name: <code>absl::random_internal_fast_uniform_bits</code>   * pkg-config .pc file: absl_random_internal_fast_uniform_bits.pc   * Requires other components: absl_config * Component absl_random_internal_seed_material:   * CMake target name: <code>absl::random_internal_seed_material</code>   * pkg-config .pc file: absl_random_internal_seed_material.pc   * Requires other components: absl_core_headers, absl_optional, absl_random_internal_fast_uniform_bits, absl_raw_logging_internal, absl_span, absl_strings   * Links to libraries: absl_random_internal_seed_material * Component absl_random_internal_pool_urbg:   * CMake target name: <code>absl::random_internal_pool_urbg</code>   * pkg-config .pc file: absl_random_internal_pool_urbg.pc   * Requires other components: absl_base, absl_config, absl_core_headers, absl_endian, absl_random_internal_randen, absl_random_internal_seed_material, absl_random_internal_traits, absl_random_seed_gen_exception, absl_raw_logging_internal, absl_span   * Links to libraries: absl_random_internal_pool_urbg * Component absl_random_internal_salted_seed_seq:   * CMake target name: <code>absl::random_internal_salted_seed_seq</code>   * pkg-config .pc file: absl_random_internal_salted_seed_seq.pc   * Requires other components: absl_inlined_vector, absl_optional, absl_span, absl_random_internal_seed_material, absl_type_traits * Component absl_random_internal_iostream_state_saver:   * CMake target name: <code>absl::random_internal_iostream_state_saver</code>   * pkg-config .pc file: absl_random_internal_iostream_state_saver.pc   * Requires other components: absl_int128, absl_type_traits * Component absl_random_internal_generate_real:   * CMake target name: <code>absl::random_internal_generate_real</code>   * pkg-config .pc file: absl_random_internal_generate_real.pc   * Requires other components: absl_bits, absl_random_internal_fastmath, absl_random_internal_traits, absl_type_traits * Component absl_random_internal_wide_multiply:   * CMake target name: <code>absl::random_internal_wide_multiply</code>   * pkg-config .pc file: absl_random_internal_wide_multiply.pc   * Requires other components: absl_bits, absl_config, absl_int128 * Component absl_random_internal_fastmath:   * CMake target name: <code>absl::random_internal_fastmath</code>   * pkg-config .pc file: absl_random_internal_fastmath.pc   * Requires other components: absl_bits * Component absl_random_internal_nonsecure_base:   * CMake target name: <code>absl::random_internal_nonsecure_base</code>   * pkg-config .pc file: absl_random_internal_nonsecure_base.pc   * Requires other components: absl_core_headers, absl_inlined_vector, absl_random_internal_pool_urbg, absl_random_internal_salted_seed_seq, absl_random_internal_seed_material, absl_span, absl_type_traits * Component absl_random_internal_pcg_engine:   * CMake target name: <code>absl::random_internal_pcg_engine</code>   * pkg-config .pc file: absl_random_internal_pcg_engine.pc   * Requires other components: absl_config, absl_int128, absl_random_internal_fastmath, absl_random_internal_iostream_state_saver, absl_type_traits * Component absl_random_internal_randen_engine:   * CMake target name: <code>absl::random_internal_randen_engine</code>   * pkg-config .pc file: absl_random_internal_randen_engine.pc   * Requires other components: absl_endian, absl_random_internal_iostream_state_saver, absl_random_internal_randen, absl_raw_logging_internal, absl_type_traits * Component absl_random_internal_platform:   * CMake target name: <code>absl::random_internal_platform</code>   * pkg-config .pc file: absl_random_internal_platform.pc   * Requires other components: absl_config   * Links to libraries: absl_random_internal_platform * Component absl_random_internal_randen:   * CMake target name: <code>absl::random_internal_randen</code>   * pkg-config .pc file: absl_random_internal_randen.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes, absl_random_internal_randen_slow   * Links to libraries: absl_random_internal_randen * Component absl_random_internal_randen_slow:   * CMake target name: <code>absl::random_internal_randen_slow</code>   * pkg-config .pc file: absl_random_internal_randen_slow.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_slow * Component absl_random_internal_randen_hwaes:   * CMake target name: <code>absl::random_internal_randen_hwaes</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes.pc   * Requires other components: absl_random_internal_platform, absl_random_internal_randen_hwaes_impl, absl_config   * Links to libraries: absl_random_internal_randen_hwaes * Component absl_random_internal_randen_hwaes_impl:   * CMake target name: <code>absl::random_internal_randen_hwaes_impl</code>   * pkg-config .pc file: absl_random_internal_randen_hwaes_impl.pc   * Requires other components: absl_random_internal_platform, absl_config   * Links to libraries: absl_random_internal_randen_hwaes_impl * Component absl_random_internal_distribution_test_util:   * CMake target name: <code>absl::random_internal_distribution_test_util</code>   * pkg-config .pc file: absl_random_internal_distribution_test_util.pc   * Requires other components: absl_config, absl_core_headers, absl_raw_logging_internal, absl_strings, absl_str_format, absl_span   * Links to libraries: absl_random_internal_distribution_test_util * Component absl_random_internal_uniform_helper:   * CMake target name: <code>absl::random_internal_uniform_helper</code>   * pkg-config .pc file: absl_random_internal_uniform_helper.pc   * Requires other components: absl_config, absl_random_internal_traits, absl_type_traits * Component absl_status:   * CMake target name: <code>absl::status</code>   * pkg-config .pc file: absl_status.pc   * Requires other components: absl_atomic_hook, absl_config, absl_cord, absl_core_headers, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_stacktrace, absl_str_format, absl_strerror, absl_strings, absl_symbolize   * Links to libraries: absl_status * Component absl_statusor:   * CMake target name: <code>absl::statusor</code>   * pkg-config .pc file: absl_statusor.pc   * Requires other components: absl_base, absl_status, absl_core_headers, absl_raw_logging_internal, absl_type_traits, absl_strings, absl_utility, absl_variant   * Links to libraries: absl_statusor * Component absl_strings:   * CMake target name: <code>absl::strings</code>   * pkg-config .pc file: absl_strings.pc   * Requires other components: absl_strings_internal, absl_base, absl_bits, absl_config, absl_core_headers, absl_endian, absl_int128, absl_memory, absl_raw_logging_internal, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_strings   * Systems libs: m * Component absl_strings_internal:   * CMake target name: <code>absl::strings_internal</code>   * pkg-config .pc file: absl_strings_internal.pc   * Requires other components: absl_config, absl_core_headers, absl_endian, absl_raw_logging_internal, absl_type_traits   * Links to libraries: absl_strings_internal * Component absl_str_format:   * CMake target name: <code>absl::str_format</code>   * pkg-config .pc file: absl_str_format.pc   * Requires other components: absl_str_format_internal * Component absl_str_format_internal:   * CMake target name: <code>absl::str_format_internal</code>   * pkg-config .pc file: absl_str_format_internal.pc   * Requires other components: absl_bits, absl_strings, absl_config, absl_core_headers, absl_numeric_representation, absl_type_traits, absl_utility, absl_int128, absl_span   * Links to libraries: absl_str_format_internal * Component absl_cord_internal:   * CMake target name: <code>absl::cord_internal</code>   * pkg-config .pc file: absl_cord_internal.pc   * Requires other components: absl_base_internal, absl_compressed_tuple, absl_config, absl_core_headers, absl_endian, absl_inlined_vector, absl_layout, absl_raw_logging_internal, absl_strings, absl_throw_delegate, absl_type_traits   * Links to libraries: absl_cord_internal * Component absl_cordz_update_tracker:   * CMake target name: <code>absl::cordz_update_tracker</code>   * pkg-config .pc file: absl_cordz_update_tracker.pc   * Requires other components: absl_config * Component absl_cordz_functions:   * CMake target name: <code>absl::cordz_functions</code>   * pkg-config .pc file: absl_cordz_functions.pc   * Requires other components: absl_config, absl_core_headers, absl_exponential_biased, absl_raw_logging_internal   * Links to libraries: absl_cordz_functions * Component absl_cordz_statistics:   * CMake target name: <code>absl::cordz_statistics</code>   * pkg-config .pc file: absl_cordz_statistics.pc   * Requires other components: absl_config, absl_core_headers, absl_cordz_update_tracker, absl_synchronization * Component absl_cordz_handle:   * CMake target name: <code>absl::cordz_handle</code>   * pkg-config .pc file: absl_cordz_handle.pc   * Requires other components: absl_base, absl_config, absl_raw_logging_internal, absl_synchronization   * Links to libraries: absl_cordz_handle * Component absl_cordz_info:   * CMake target name: <code>absl::cordz_info</code>   * pkg-config .pc file: absl_cordz_info.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_handle, absl_cordz_statistics, absl_cordz_update_tracker, absl_core_headers, absl_inlined_vector, absl_span, absl_raw_logging_internal, absl_stacktrace, absl_synchronization   * Links to libraries: absl_cordz_info * Component absl_cordz_sample_token:   * CMake target name: <code>absl::cordz_sample_token</code>   * pkg-config .pc file: absl_cordz_sample_token.pc   * Requires other components: absl_config, absl_cordz_handle, absl_cordz_info   * Links to libraries: absl_cordz_sample_token * Component absl_cordz_update_scope:   * CMake target name: <code>absl::cordz_update_scope</code>   * pkg-config .pc file: absl_cordz_update_scope.pc   * Requires other components: absl_config, absl_cord_internal, absl_cordz_info, absl_cordz_update_tracker, absl_core_headers * Component absl_cord:   * CMake target name: <code>absl::cord</code>   * pkg-config .pc file: absl_cord.pc   * Requires other components: absl_base, absl_config, absl_cord_internal, absl_cordz_functions, absl_cordz_info, absl_cordz_update_scope, absl_cordz_update_tracker, absl_core_headers, absl_endian, absl_fixed_array, absl_function_ref, absl_inlined_vector, absl_optional, absl_raw_logging_internal, absl_span, absl_strings, absl_type_traits   * Links to libraries: absl_cord * Component absl_graphcycles_internal:   * CMake target name: <code>absl::graphcycles_internal</code>   * pkg-config .pc file: absl_graphcycles_internal.pc   * Requires other components: absl_base, absl_base_internal, absl_config, absl_core_headers, absl_malloc_internal, absl_raw_logging_internal   * Links to libraries: absl_graphcycles_internal * Component absl_kernel_timeout_internal:   * CMake target name: <code>absl::kernel_timeout_internal</code>   * pkg-config .pc file: absl_kernel_timeout_internal.pc   * Requires other components: absl_core_headers, absl_raw_logging_internal, absl_time * Component absl_synchronization:   * CMake target name: <code>absl::synchronization</code>   * pkg-config .pc file: absl_synchronization.pc   * Requires other components: absl_graphcycles_internal, absl_kernel_timeout_internal, absl_atomic_hook, absl_base, absl_base_internal, absl_config, absl_core_headers, absl_dynamic_annotations, absl_malloc_internal, absl_raw_logging_internal, absl_stacktrace, absl_symbolize, absl_time   * Links to libraries: absl_synchronization   * Systems libs: pthread * Component absl_time:   * CMake target name: <code>absl::time</code>   * pkg-config .pc file: absl_time.pc   * Requires other components: absl_base, absl_civil_time, absl_core_headers, absl_int128, absl_raw_logging_internal, absl_strings, absl_time_zone   * Links to libraries: absl_time * Component absl_civil_time:   * CMake target name: <code>absl::civil_time</code>   * pkg-config .pc file: absl_civil_time.pc   * Links to libraries: absl_civil_time * Component absl_time_zone:   * CMake target name: <code>absl::time_zone</code>   * pkg-config .pc file: absl_time_zone.pc   * Links to libraries: absl_time_zone * Component absl_any:   * CMake target name: <code>absl::any</code>   * pkg-config .pc file: absl_any.pc   * Requires other components: absl_bad_any_cast, absl_config, absl_core_headers, absl_fast_type_id, absl_type_traits, absl_utility * Component absl_bad_any_cast:   * CMake target name: <code>absl::bad_any_cast</code>   * pkg-config .pc file: absl_bad_any_cast.pc   * Requires other components: absl_bad_any_cast_impl, absl_config * Component absl_bad_any_cast_impl:   * CMake target name: <code>absl::bad_any_cast_impl</code>   * pkg-config .pc file: absl_bad_any_cast_impl.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_any_cast_impl * Component absl_span:   * CMake target name: <code>absl::span</code>   * pkg-config .pc file: absl_span.pc   * Requires other components: absl_algorithm, absl_core_headers, absl_throw_delegate, absl_type_traits * Component absl_optional:   * CMake target name: <code>absl::optional</code>   * pkg-config .pc file: absl_optional.pc   * Requires other components: absl_bad_optional_access, absl_base_internal, absl_config, absl_core_headers, absl_memory, absl_type_traits, absl_utility * Component absl_bad_optional_access:   * CMake target name: <code>absl::bad_optional_access</code>   * pkg-config .pc file: absl_bad_optional_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_optional_access * Component absl_bad_variant_access:   * CMake target name: <code>absl::bad_variant_access</code>   * pkg-config .pc file: absl_bad_variant_access.pc   * Requires other components: absl_config, absl_raw_logging_internal   * Links to libraries: absl_bad_variant_access * Component absl_variant:   * CMake target name: <code>absl::variant</code>   * pkg-config .pc file: absl_variant.pc   * Requires other components: absl_bad_variant_access, absl_base_internal, absl_config, absl_core_headers, absl_type_traits, absl_utility * Component absl_compare:   * CMake target name: <code>absl::compare</code>   * pkg-config .pc file: absl_compare.pc   * Requires other components: absl_core_headers, absl_type_traits * Component absl_utility:   * CMake target name: <code>absl::utility</code>   * pkg-config .pc file: absl_utility.pc   * Requires other components: absl_base_internal, absl_config, absl_type_traits</p> <p></p>"},{"location":"packages/v1_50_1/abseil/#exposed-header-files-for-abseil","title":"Exposed header files for abseil","text":"<pre><code>#include &lt;absl/cleanup/cleanup.h&gt;\n#include &lt;absl/cleanup/internal/cleanup.h&gt;\n#include &lt;absl/base/call_once.h&gt;\n#include &lt;absl/base/config.h&gt;\n#include &lt;absl/base/macros.h&gt;\n#include &lt;absl/base/const_init.h&gt;\n#include &lt;absl/base/port.h&gt;\n#include &lt;absl/base/options.h&gt;\n#include &lt;absl/base/optimization.h&gt;\n#include &lt;absl/base/dynamic_annotations.h&gt;\n#include &lt;absl/base/log_severity.h&gt;\n#include &lt;absl/base/casts.h&gt;\n#include &lt;absl/base/thread_annotations.h&gt;\n#include &lt;absl/base/policy_checks.h&gt;\n#include &lt;absl/base/attributes.h&gt;\n#include &lt;absl/base/internal/spinlock_linux.inc&gt;\n#include &lt;absl/base/internal/spinlock_akaros.inc&gt;\n#include &lt;absl/base/internal/sysinfo.h&gt;\n#include &lt;absl/base/internal/scoped_set_env.h&gt;\n#include &lt;absl/base/internal/unscaledcycleclock.h&gt;\n#include &lt;absl/base/internal/errno_saver.h&gt;\n#include &lt;absl/base/internal/hide_ptr.h&gt;\n#include &lt;absl/base/internal/strerror.h&gt;\n#include &lt;absl/base/internal/pretty_function.h&gt;\n#include &lt;absl/base/internal/identity.h&gt;\n#include &lt;absl/base/internal/tsan_mutex_interface.h&gt;\n#include &lt;absl/base/internal/endian.h&gt;\n#include &lt;absl/base/internal/cycleclock.h&gt;\n#include &lt;absl/base/internal/spinlock_win32.inc&gt;\n#include &lt;absl/base/internal/fast_type_id.h&gt;\n#include &lt;absl/base/internal/direct_mmap.h&gt;\n#include &lt;absl/base/internal/prefetch.h&gt;\n#include &lt;absl/base/internal/spinlock_posix.inc&gt;\n#include &lt;absl/base/internal/raw_logging.h&gt;\n#include &lt;absl/base/internal/atomic_hook.h&gt;\n#include &lt;absl/base/internal/exception_safety_testing.h&gt;\n#include &lt;absl/base/internal/per_thread_tls.h&gt;\n#include &lt;absl/base/internal/spinlock_wait.h&gt;\n#include &lt;absl/base/internal/atomic_hook_test_helper.h&gt;\n#include &lt;absl/base/internal/low_level_scheduling.h&gt;\n#include &lt;absl/base/internal/exception_testing.h&gt;\n#include &lt;absl/base/internal/invoke.h&gt;\n#include &lt;absl/base/internal/spinlock.h&gt;\n#include &lt;absl/base/internal/dynamic_annotations.h&gt;\n#include &lt;absl/base/internal/low_level_alloc.h&gt;\n#include &lt;absl/base/internal/inline_variable_testing.h&gt;\n#include &lt;absl/base/internal/thread_annotations.h&gt;\n#include &lt;absl/base/internal/thread_identity.h&gt;\n#include &lt;absl/base/internal/throw_delegate.h&gt;\n#include &lt;absl/base/internal/scheduling_mode.h&gt;\n#include &lt;absl/base/internal/unaligned_access.h&gt;\n#include &lt;absl/base/internal/inline_variable.h&gt;\n#include &lt;absl/container/flat_hash_map.h&gt;\n#include &lt;absl/container/inlined_vector.h&gt;\n#include &lt;absl/container/btree_map.h&gt;\n#include &lt;absl/container/flat_hash_set.h&gt;\n#include &lt;absl/container/btree_set.h&gt;\n#include &lt;absl/container/node_hash_set.h&gt;\n#include &lt;absl/container/fixed_array.h&gt;\n#include &lt;absl/container/btree_test.h&gt;\n#include &lt;absl/container/node_hash_map.h&gt;\n#include &lt;absl/container/internal/container_memory.h&gt;\n#include &lt;absl/container/internal/inlined_vector.h&gt;\n#include &lt;absl/container/internal/hash_generator_testing.h&gt;\n#include &lt;absl/container/internal/btree.h&gt;\n#include &lt;absl/container/internal/unordered_map_lookup_test.h&gt;\n#include &lt;absl/container/internal/hashtable_debug.h&gt;\n#include &lt;absl/container/internal/unordered_set_constructor_test.h&gt;\n#include &lt;absl/container/internal/tracked.h&gt;\n#include &lt;absl/container/internal/unordered_set_modifiers_test.h&gt;\n#include &lt;absl/container/internal/compressed_tuple.h&gt;\n#include &lt;absl/container/internal/hash_function_defaults.h&gt;\n#include &lt;absl/container/internal/hash_policy_testing.h&gt;\n#include &lt;absl/container/internal/common.h&gt;\n#include &lt;absl/container/internal/unordered_set_lookup_test.h&gt;\n#include &lt;absl/container/internal/test_instance_tracker.h&gt;\n#include &lt;absl/container/internal/raw_hash_set.h&gt;\n#include &lt;absl/container/internal/hashtablez_sampler.h&gt;\n#include &lt;absl/container/internal/hash_policy_traits.h&gt;\n#include &lt;absl/container/internal/unordered_map_members_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_constructor_test.h&gt;\n#include &lt;absl/container/internal/unordered_map_modifiers_test.h&gt;\n#include &lt;absl/container/internal/layout.h&gt;\n#include &lt;absl/container/internal/counting_allocator.h&gt;\n#include &lt;absl/container/internal/hashtable_debug_hooks.h&gt;\n#include &lt;absl/container/internal/raw_hash_map.h&gt;\n#include &lt;absl/container/internal/btree_container.h&gt;\n#include &lt;absl/container/internal/unordered_set_members_test.h&gt;\n#include &lt;absl/container/internal/node_slot_policy.h&gt;\n#include &lt;absl/strings/substitute.h&gt;\n#include &lt;absl/strings/escaping.h&gt;\n#include &lt;absl/strings/str_cat.h&gt;\n#include &lt;absl/strings/str_join.h&gt;\n#include &lt;absl/strings/str_format.h&gt;\n#include &lt;absl/strings/numbers.h&gt;\n#include &lt;absl/strings/cord.h&gt;\n#include &lt;absl/strings/cord_test_helpers.h&gt;\n#include &lt;absl/strings/str_split.h&gt;\n#include &lt;absl/strings/string_view.h&gt;\n#include &lt;absl/strings/ascii.h&gt;\n#include &lt;absl/strings/cordz_test_helpers.h&gt;\n#include &lt;absl/strings/str_replace.h&gt;\n#include &lt;absl/strings/cord_analysis.h&gt;\n#include &lt;absl/strings/match.h&gt;\n#include &lt;absl/strings/charconv.h&gt;\n#include &lt;absl/strings/strip.h&gt;\n#include &lt;absl/strings/cord_buffer.h&gt;\n#include &lt;absl/strings/internal/escaping.h&gt;\n#include &lt;absl/strings/internal/cord_rep_crc.h&gt;\n#include &lt;absl/strings/internal/pow10_helper.h&gt;\n#include &lt;absl/strings/internal/cordz_update_scope.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree.h&gt;\n#include &lt;absl/strings/internal/numbers_test_common.h&gt;\n#include &lt;absl/strings/internal/memutil.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring_reader.h&gt;\n#include &lt;absl/strings/internal/cord_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_flat.h&gt;\n#include &lt;absl/strings/internal/cordz_handle.h&gt;\n#include &lt;absl/strings/internal/cord_rep_consume.h&gt;\n#include &lt;absl/strings/internal/resize_uninitialized.h&gt;\n#include &lt;absl/strings/internal/cordz_update_tracker.h&gt;\n#include &lt;absl/strings/internal/char_map.h&gt;\n#include &lt;absl/strings/internal/cord_data_edge.h&gt;\n#include &lt;absl/strings/internal/charconv_parse.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_reader.h&gt;\n#include &lt;absl/strings/internal/ostringstream.h&gt;\n#include &lt;absl/strings/internal/str_split_internal.h&gt;\n#include &lt;absl/strings/internal/cord_rep_test_util.h&gt;\n#include &lt;absl/strings/internal/str_join_internal.h&gt;\n#include &lt;absl/strings/internal/cordz_functions.h&gt;\n#include &lt;absl/strings/internal/cordz_sample_token.h&gt;\n#include &lt;absl/strings/internal/charconv_bigint.h&gt;\n#include &lt;absl/strings/internal/escaping_test_common.h&gt;\n#include &lt;absl/strings/internal/string_constant.h&gt;\n#include &lt;absl/strings/internal/cordz_statistics.h&gt;\n#include &lt;absl/strings/internal/cordz_info.h&gt;\n#include &lt;absl/strings/internal/cord_rep_ring.h&gt;\n#include &lt;absl/strings/internal/utf8.h&gt;\n#include &lt;absl/strings/internal/stl_type_traits.h&gt;\n#include &lt;absl/strings/internal/cord_rep_btree_navigator.h&gt;\n#include &lt;absl/strings/internal/str_format/arg.h&gt;\n#include &lt;absl/strings/internal/str_format/extension.h&gt;\n#include &lt;absl/strings/internal/str_format/checker.h&gt;\n#include &lt;absl/strings/internal/str_format/output.h&gt;\n#include &lt;absl/strings/internal/str_format/bind.h&gt;\n#include &lt;absl/strings/internal/str_format/parser.h&gt;\n#include &lt;absl/strings/internal/str_format/float_conversion.h&gt;\n#include &lt;absl/flags/config.h&gt;\n#include &lt;absl/flags/flag.h&gt;\n#include &lt;absl/flags/declare.h&gt;\n#include &lt;absl/flags/parse.h&gt;\n#include &lt;absl/flags/usage_config.h&gt;\n#include &lt;absl/flags/usage.h&gt;\n#include &lt;absl/flags/commandlineflag.h&gt;\n#include &lt;absl/flags/reflection.h&gt;\n#include &lt;absl/flags/marshalling.h&gt;\n#include &lt;absl/flags/internal/sequence_lock.h&gt;\n#include &lt;absl/flags/internal/flag.h&gt;\n#include &lt;absl/flags/internal/program_name.h&gt;\n#include &lt;absl/flags/internal/private_handle_accessor.h&gt;\n#include &lt;absl/flags/internal/parse.h&gt;\n#include &lt;absl/flags/internal/usage.h&gt;\n#include &lt;absl/flags/internal/commandlineflag.h&gt;\n#include &lt;absl/flags/internal/registry.h&gt;\n#include &lt;absl/flags/internal/flag_msvc.inc&gt;\n#include &lt;absl/flags/internal/path_util.h&gt;\n#include &lt;absl/debugging/stacktrace.h&gt;\n#include &lt;absl/debugging/symbolize.h&gt;\n#include &lt;absl/debugging/leak_check.h&gt;\n#include &lt;absl/debugging/failure_signal_handler.h&gt;\n#include &lt;absl/debugging/symbolize_win32.inc&gt;\n#include &lt;absl/debugging/symbolize_emscripten.inc&gt;\n#include &lt;absl/debugging/symbolize_darwin.inc&gt;\n#include &lt;absl/debugging/symbolize_elf.inc&gt;\n#include &lt;absl/debugging/symbolize_unimplemented.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_powerpc-inl.inc&gt;\n#include &lt;absl/debugging/internal/symbolize.h&gt;\n#include &lt;absl/debugging/internal/address_is_readable.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_x86-inl.inc&gt;\n#include &lt;absl/debugging/internal/vdso_support.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_win32-inl.inc&gt;\n#include &lt;absl/debugging/internal/stack_consumption.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_riscv-inl.inc&gt;\n#include &lt;absl/debugging/internal/examine_stack.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_aarch64-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_config.h&gt;\n#include &lt;absl/debugging/internal/demangle.h&gt;\n#include &lt;absl/debugging/internal/elf_mem_image.h&gt;\n#include &lt;absl/debugging/internal/stacktrace_emscripten-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_arm-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_unimplemented-inl.inc&gt;\n#include &lt;absl/debugging/internal/stacktrace_generic-inl.inc&gt;\n#include &lt;absl/time/civil_time.h&gt;\n#include &lt;absl/time/time.h&gt;\n#include &lt;absl/time/clock.h&gt;\n#include &lt;absl/time/internal/get_current_time_chrono.inc&gt;\n#include &lt;absl/time/internal/get_current_time_posix.inc&gt;\n#include &lt;absl/time/internal/test_util.h&gt;\n#include &lt;absl/time/internal/zoneinfo.inc&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_if.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_info.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_impl.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_fixed.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_libc.h&gt;\n#include &lt;absl/time/internal/cctz/src/tzfile.h&gt;\n#include &lt;absl/time/internal/cctz/src/time_zone_posix.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/zone_info_source.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/civil_time_detail.h&gt;\n#include &lt;absl/time/internal/cctz/include/cctz/time_zone.h&gt;\n#include &lt;absl/meta/type_traits.h&gt;\n#include &lt;absl/functional/any_invocable.h&gt;\n#include &lt;absl/functional/function_ref.h&gt;\n#include &lt;absl/functional/bind_front.h&gt;\n#include &lt;absl/functional/internal/front_binder.h&gt;\n#include &lt;absl/functional/internal/any_invocable.h&gt;\n#include &lt;absl/functional/internal/function_ref.h&gt;\n#include &lt;absl/status/status_payload_printer.h&gt;\n#include &lt;absl/status/statusor.h&gt;\n#include &lt;absl/status/status.h&gt;\n#include &lt;absl/status/internal/statusor_internal.h&gt;\n#include &lt;absl/status/internal/status_internal.h&gt;\n#include &lt;absl/random/bit_gen_ref.h&gt;\n#include &lt;absl/random/exponential_distribution.h&gt;\n#include &lt;absl/random/distributions.h&gt;\n#include &lt;absl/random/bernoulli_distribution.h&gt;\n#include &lt;absl/random/log_uniform_int_distribution.h&gt;\n#include &lt;absl/random/random.h&gt;\n#include &lt;absl/random/gaussian_distribution.h&gt;\n#include &lt;absl/random/seed_gen_exception.h&gt;\n#include &lt;absl/random/beta_distribution.h&gt;\n#include &lt;absl/random/poisson_distribution.h&gt;\n#include &lt;absl/random/zipf_distribution.h&gt;\n#include &lt;absl/random/uniform_int_distribution.h&gt;\n#include &lt;absl/random/mocking_bit_gen.h&gt;\n#include &lt;absl/random/seed_sequences.h&gt;\n#include &lt;absl/random/uniform_real_distribution.h&gt;\n#include &lt;absl/random/discrete_distribution.h&gt;\n#include &lt;absl/random/mock_distributions.h&gt;\n#include &lt;absl/random/internal/fastmath.h&gt;\n#include &lt;absl/random/internal/fast_uniform_bits.h&gt;\n#include &lt;absl/random/internal/salted_seed_seq.h&gt;\n#include &lt;absl/random/internal/chi_square.h&gt;\n#include &lt;absl/random/internal/randen_traits.h&gt;\n#include &lt;absl/random/internal/pool_urbg.h&gt;\n#include &lt;absl/random/internal/distribution_caller.h&gt;\n#include &lt;absl/random/internal/mock_helpers.h&gt;\n#include &lt;absl/random/internal/traits.h&gt;\n#include &lt;absl/random/internal/seed_material.h&gt;\n#include &lt;absl/random/internal/uniform_helper.h&gt;\n#include &lt;absl/random/internal/sequence_urbg.h&gt;\n#include &lt;absl/random/internal/generate_real.h&gt;\n#include &lt;absl/random/internal/nonsecure_base.h&gt;\n#include &lt;absl/random/internal/platform.h&gt;\n#include &lt;absl/random/internal/pcg_engine.h&gt;\n#include &lt;absl/random/internal/mock_overload_set.h&gt;\n#include &lt;absl/random/internal/explicit_seed_seq.h&gt;\n#include &lt;absl/random/internal/iostream_state_saver.h&gt;\n#include &lt;absl/random/internal/randen_hwaes.h&gt;\n#include &lt;absl/random/internal/wide_multiply.h&gt;\n#include &lt;absl/random/internal/randen_detect.h&gt;\n#include &lt;absl/random/internal/randen_slow.h&gt;\n#include &lt;absl/random/internal/randen_engine.h&gt;\n#include &lt;absl/random/internal/randen.h&gt;\n#include &lt;absl/random/internal/distribution_test_util.h&gt;\n#include &lt;absl/random/internal/nanobenchmark.h&gt;\n#include &lt;absl/types/variant.h&gt;\n#include &lt;absl/types/bad_variant_access.h&gt;\n#include &lt;absl/types/bad_optional_access.h&gt;\n#include &lt;absl/types/span.h&gt;\n#include &lt;absl/types/bad_any_cast.h&gt;\n#include &lt;absl/types/optional.h&gt;\n#include &lt;absl/types/compare.h&gt;\n#include &lt;absl/types/any.h&gt;\n#include &lt;absl/types/internal/variant.h&gt;\n#include &lt;absl/types/internal/conformance_archetype.h&gt;\n#include &lt;absl/types/internal/parentheses.h&gt;\n#include &lt;absl/types/internal/conformance_testing_helpers.h&gt;\n#include &lt;absl/types/internal/conformance_aliases.h&gt;\n#include &lt;absl/types/internal/span.h&gt;\n#include &lt;absl/types/internal/transform_args.h&gt;\n#include &lt;absl/types/internal/optional.h&gt;\n#include &lt;absl/types/internal/conformance_testing.h&gt;\n#include &lt;absl/types/internal/conformance_profile.h&gt;\n#include &lt;absl/synchronization/blocking_counter.h&gt;\n#include &lt;absl/synchronization/mutex.h&gt;\n#include &lt;absl/synchronization/barrier.h&gt;\n#include &lt;absl/synchronization/notification.h&gt;\n#include &lt;absl/synchronization/internal/graphcycles.h&gt;\n#include &lt;absl/synchronization/internal/futex.h&gt;\n#include &lt;absl/synchronization/internal/waiter.h&gt;\n#include &lt;absl/synchronization/internal/create_thread_identity.h&gt;\n#include &lt;absl/synchronization/internal/kernel_timeout.h&gt;\n#include &lt;absl/synchronization/internal/per_thread_sem.h&gt;\n#include &lt;absl/synchronization/internal/thread_pool.h&gt;\n#include &lt;absl/utility/utility.h&gt;\n#include &lt;absl/memory/memory.h&gt;\n#include &lt;absl/numeric/int128_have_intrinsic.inc&gt;\n#include &lt;absl/numeric/bits.h&gt;\n#include &lt;absl/numeric/int128_no_intrinsic.inc&gt;\n#include &lt;absl/numeric/int128.h&gt;\n#include &lt;absl/numeric/internal/representation.h&gt;\n#include &lt;absl/numeric/internal/bits.h&gt;\n#include &lt;absl/profiling/internal/periodic_sampler.h&gt;\n#include &lt;absl/profiling/internal/exponential_biased.h&gt;\n#include &lt;absl/profiling/internal/sample_recorder.h&gt;\n#include &lt;absl/algorithm/algorithm.h&gt;\n#include &lt;absl/algorithm/container.h&gt;\n#include &lt;absl/hash/hash.h&gt;\n#include &lt;absl/hash/hash_testing.h&gt;\n#include &lt;absl/hash/internal/hash.h&gt;\n#include &lt;absl/hash/internal/low_level_hash.h&gt;\n#include &lt;absl/hash/internal/city.h&gt;\n#include &lt;absl/hash/internal/spy_hash_state.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/abseil/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/c-ares/","title":"c-ares/1.18.1","text":""},{"location":"packages/v1_50_1/c-ares/#using-the-c-ares-conan-package","title":"Using the c-ares Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate c-ares in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#using-c-ares-with-cmake","title":"Using c-ares with CMake","text":""},{"location":"packages/v1_50_1/c-ares/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use c-ares in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global c-ares::cares CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(c-ares_project C)\n\nfind_package(c-ares)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To install c-ares/1.18.1, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the c-ares Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the c-ares cares component, through the c-ares::cares target.</p> <pre><code>...\n# Link just to c-ares cares component\ntarget_link_libraries(${PROJECT_NAME} c-ares::cares)\n</code></pre> <p></p> <p>To check all the available components for c-ares Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#using-c-ares-with-visual-studio","title":"Using c-ares with Visual Studio","text":""},{"location":"packages/v1_50_1/c-ares/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#using-c-ares-with-autotools-and-pkg-config","title":"Using c-ares with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/c-ares/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the c-ares library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your c-ares dependency like:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/c-ares/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the libcares.pc file (and the ones corresponding to c-ares dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nc-ares/1.18.1\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags c-ares)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l c-ares)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other c-ares)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the c-ares Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for c-ares Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#declared-components-for-c-ares","title":"Declared components for c-ares","text":"<p>These are all the declared components for the c-ares Conan package: * Component cares:   * CMake target name: <code>c-ares::cares</code>   * pkg-config .pc file: libcares.pc   * Links to libraries: cares   * Systems libs: rt   * Preprocessor definitions: <code>CARES_STATICLIB</code></p> <p></p>"},{"location":"packages/v1_50_1/c-ares/#exposed-header-files-for-c-ares","title":"Exposed header files for c-ares","text":"<pre><code>#include &lt;ares_nameser.h&gt;\n#include &lt;ares_build.h&gt;\n#include &lt;ares_dns.h&gt;\n#include &lt;ares.h&gt;\n#include &lt;ares_version.h&gt;\n#include &lt;ares_rules.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/c-ares/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/googleapis/","title":"googleapis/cci.20220711","text":""},{"location":"packages/v1_50_1/googleapis/#googleapiscci20220711-dependencies","title":"googleapis/cci.20220711 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_50_1/googleapis/#using-the-googleapis-conan-package","title":"Using the googleapis Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate googleapis in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/googleapis/#using-googleapis-with-cmake","title":"Using googleapis with CMake","text":""},{"location":"packages/v1_50_1/googleapis/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use googleapis in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global googleapis::googleapis CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(googleapis_project CXX)\n\nfind_package(googleapis)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} googleapis::googleapis)\n</code></pre> <p></p> <p>To install googleapis/cci.20220711, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/googleapis/#using-googleapis-with-visual-studio","title":"Using googleapis with Visual Studio","text":""},{"location":"packages/v1_50_1/googleapis/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/googleapis/#using-googleapis-with-autotools-and-pkg-config","title":"Using googleapis with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/googleapis/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the googleapis library and its dependencies  ( protobuf,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your googleapis dependency like:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/googleapis/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the googleapis.pc file (and the ones corresponding to googleapis dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngoogleapis/cci.20220711\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags googleapis)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l googleapis)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other googleapis)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/googleapis/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/googleapis/#exposed-header-files-for-googleapis","title":"Exposed header files for googleapis","text":"<pre><code>#include &lt;google/container/v1beta1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1/cluster_service.pb.h&gt;\n#include &lt;google/container/v1alpha1/cluster_service.pb.h&gt;\n#include &lt;google/apps/script/type/addon_widget_set.pb.h&gt;\n#include &lt;google/apps/script/type/extension_point.pb.h&gt;\n#include &lt;google/apps/script/type/script_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/slides/slides_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/calendar/calendar_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/docs/docs_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/drive/drive_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/sheets/sheets_addon_manifest.pb.h&gt;\n#include &lt;google/apps/script/type/gmail/gmail_addon_manifest.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/resources.pb.h&gt;\n#include &lt;google/analytics/admin/v1beta/analytics_admin.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/data.pb.h&gt;\n#include &lt;google/analytics/data/v1alpha/analytics_data_api.pb.h&gt;\n#include &lt;google/cloud/extended_operations.pb.h&gt;\n#include &lt;google/cloud/speech/v1/resource.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech_adaptation.pb.h&gt;\n#include &lt;google/cloud/speech/v1/cloud_speech.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/order.pb.h&gt;\n#include &lt;google/cloud/commerce/consumer/procurement/v1alpha1/procurement_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/logging/v1/runtime_log.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/environment.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/execution.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/event.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/instance_config.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/managed_service.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/runtime.pb.h&gt;\n#include &lt;google/cloud/notebooks/v1/schedule.pb.h&gt;\n#include &lt;google/cloud/redis/v1beta1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/redis/v1/cloud_redis.pb.h&gt;\n#include &lt;google/cloud/filestore/v1/cloud_filestore_service.pb.h&gt;\n#include &lt;google/cloud/dataproc/logging/autoscaler_log.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/autoscaling_policies.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/operations.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/shared.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/jobs.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/clusters.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/workflow_templates.pb.h&gt;\n#include &lt;google/cloud/dataproc/v1/batches.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/task.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/queue.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/target.pb.h&gt;\n#include &lt;google/cloud/tasks/v2/cloudtasks.pb.h&gt;\n#include &lt;google/cloud/stream/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_io.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document_processor_service.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/document.pb.h&gt;\n#include &lt;google/cloud/documentai/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/functions/v2alpha/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v1/operations.pb.h&gt;\n#include &lt;google/cloud/functions/v1/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2/functions.pb.h&gt;\n#include &lt;google/cloud/functions/v2beta/functions.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_databases.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_backup_runs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_ssl_certs.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instances.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_operations.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_flags.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1/cloud_sql_instance_names.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_connect.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_resources.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_tiers.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql_users.pb.h&gt;\n#include &lt;google/cloud/sql/v1beta4/cloud_sql.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v1/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/orgpolicy.pb.h&gt;\n#include &lt;google/cloud/orgpolicy/v2/constraint.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/checker.pb.h&gt;\n#include &lt;google/cloud/policytroubleshooter/v1/explanations.pb.h&gt;\n#include &lt;google/cloud/kms/v1/service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/ekm_service.pb.h&gt;\n#include &lt;google/cloud/kms/v1/resources.pb.h&gt;\n#include &lt;google/cloud/iap/v1/service.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v2/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_bindings.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/organizations.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_keys.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/projects.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/folders.pb.h&gt;\n#include &lt;google/cloud/resourcemanager/v3/tag_values.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/service.pb.h&gt;\n#include &lt;google/cloud/security/publicca/v1beta1/resources.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/service.pb.h&gt;\n#include &lt;google/cloud/security/privateca/v1/resources.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/batch.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4beta1/company.pb.h&gt;\n#include &lt;google/cloud/talent/v4/completion_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/filters.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/common.pb.h&gt;\n#include &lt;google/cloud/talent/v4/tenant.pb.h&gt;\n#include &lt;google/cloud/talent/v4/job.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/event.pb.h&gt;\n#include &lt;google/cloud/talent/v4/histogram.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company_service.pb.h&gt;\n#include &lt;google/cloud/talent/v4/company.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/cursor.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/common.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/admin.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/subscriber.pb.h&gt;\n#include &lt;google/cloud/pubsublite/v1/topic_stats.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/logging/v1/g_suite_add_ons_log_entry.pb.h&gt;\n#include &lt;google/cloud/gsuiteaddons/v1/gsuiteaddons.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/service.pb.h&gt;\n#include &lt;google/cloud/essentialcontacts/v1/enums.pb.h&gt;\n#include &lt;google/cloud/dataform/v1alpha2/dataform.pb.h&gt;\n#include &lt;google/cloud/recaptchaenterprise/v1/recaptchaenterprise.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/tether.pb.h&gt;\n#include &lt;google/cloud/apigeeconnect/v1/connection.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/saas_instance_payload.pb.h&gt;\n#include &lt;google/cloud/saasaccelerator/management/logs/v1/notification_service_payload.pb.h&gt;\n#include &lt;google/cloud/vmmigration/v1/vmmigration.pb.h&gt;\n#include &lt;google/cloud/resourcesettings/v1/resource_settings.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1beta1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/service_binding.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tcp_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/grpc_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/tls_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/endpoint_policy.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/http_route.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/network_services.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/mesh.pb.h&gt;\n#include &lt;google/cloud/networkservices/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/video_stitcher_service.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/stitch_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/sessions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/ad_tag_details.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/companions.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/slates.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/cdn_keys.pb.h&gt;\n#include &lt;google/cloud/video/stitcher/v1/events.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/services.pb.h&gt;\n#include &lt;google/cloud/video/transcoder/v1/resources.pb.h&gt;\n#include &lt;google/cloud/video/livestream/logging/v1/logs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/service.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/outputs.pb.h&gt;\n#include &lt;google/cloud/video/livestream/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search_service.pb.h&gt;\n#include &lt;google/cloud/vision/v1/web_detection.pb.h&gt;\n#include &lt;google/cloud/vision/v1/image_annotator.pb.h&gt;\n#include &lt;google/cloud/vision/v1/text_annotation.pb.h&gt;\n#include &lt;google/cloud/vision/v1/product_search.pb.h&gt;\n#include &lt;google/cloud/vision/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/provisioning_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_service.pb.h&gt;\n#include &lt;google/cloud/apigeeregistry/v1/registry_models.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/job.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/cloudscheduler.pb.h&gt;\n#include &lt;google/cloud/scheduler/v1/target.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/trace.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/connectivity_test.pb.h&gt;\n#include &lt;google/cloud/networkmanagement/v1/reachability.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logging.pb.h&gt;\n#include &lt;google/cloud/gkebackup/logging/v1/logged_backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore_plan.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/restore.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/volume.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/common.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/gkebackup.pb.h&gt;\n#include &lt;google/cloud/gkebackup/v1/backup_plan.pb.h&gt;\n#include &lt;google/cloud/common/operation_metadata.pb.h&gt;\n#include &lt;google/cloud/audit/audit_log.pb.h&gt;\n#include &lt;google/cloud/translate/v3/translation_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/instance_os_policies_compliance.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1alpha/config_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_common.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/patch_deployments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignments.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/osconfig_zonal_service.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/os_policy_assignment_reports.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/osconfig/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/guest_policies.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1beta/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/patch_jobs.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/os_policy.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/inventory.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/agentendpoint.pb.h&gt;\n#include &lt;google/cloud/osconfig/agentendpoint/v1/config_common.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/nfs_share.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/instance.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/volume.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/baremetalsolution.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/lun.pb.h&gt;\n#include &lt;google/cloud/baremetalsolution/v2/network.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1alpha/job.pb.h&gt;\n#include &lt;google/cloud/batch/v1/volume.pb.h&gt;\n#include &lt;google/cloud/batch/v1/task.pb.h&gt;\n#include &lt;google/cloud/batch/v1/batch.pb.h&gt;\n#include &lt;google/cloud/batch/v1/job.pb.h&gt;\n#include &lt;google/cloud/ids/v1/ids.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/azure_service.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/common_resources.pb.h&gt;\n#include &lt;google/cloud/gkemulticloud/v1/aws_service.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/operations.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/image_versions.pb.h&gt;\n#include &lt;google/cloud/orchestration/airflow/service/v1/environments.pb.h&gt;\n#include &lt;google/cloud/clouddms/logging/v1/clouddms_platform_logs.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms_resources.pb.h&gt;\n#include &lt;google/cloud/clouddms/v1/clouddms.pb.h&gt;\n#include &lt;google/cloud/location/locations.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_render_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/rollout_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/release_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/target_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/log_enums.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/deliverypipeline_notification_payload.pb.h&gt;\n#include &lt;google/cloud/deploy/v1/cloud_deploy.pb.h&gt;\n#include &lt;google/cloud/certificatemanager/v1/certificate_manager.pb.h&gt;\n#include &lt;google/cloud/accessapproval/v1/accessapproval.pb.h&gt;\n#include &lt;google/cloud/aiplatform/logging/prediction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_schema.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/hyperparameter_tuning_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/job_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/entity_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_monitoring_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/value.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature_selector.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/machine_resources.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/execution.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/training_pipeline.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/vizier_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_labeling_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/data_item.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/batch_prediction_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/artifact.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/completion_stats.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/env_var.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_run.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/io.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_data.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/endpoint_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/dataset_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_index_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_time_series.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore_online_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation_slice.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/specialist_pool_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/featurestore.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_store.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/feature.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/manual_batch_tuning_parameters.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_failure_policy.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/user_action_reference.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/event.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/unmanaged_container_model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/custom_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_state.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_deployment_monitoring_job.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/encryption_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/types.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/index_endpoint.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/operation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/study.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/accelerator_type.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/lineage_subgraph.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migration_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/tensorboard_experiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/pipeline_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/context.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/model_monitoring.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/explanation_metadata.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/migratable_resource.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/saved_query.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/metadata_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/deployed_model_ref.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/instance/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_regression.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/prediction/tabular_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/predict/params/video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/export_evaluated_data_items_config.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_object_detection.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_extraction.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_object_tracking.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_segmentation.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_tables.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_video_action_recognition.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_image_classification.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_sentiment.pb.h&gt;\n#include &lt;google/cloud/aiplatform/v1/schema/trainingjob/definition/automl_text_classification.pb.h&gt;\n#include &lt;google/cloud/datafusion/v1/datafusion.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1beta1/resource.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/managed_identities_service.pb.h&gt;\n#include &lt;google/cloud/managedidentities/v1/resource.pb.h&gt;\n#include &lt;google/cloud/metastore/v1alpha/metastore.pb.h&gt;\n#include &lt;google/cloud/metastore/logging/v1/log_streams.pb.h&gt;\n#include &lt;google/cloud/metastore/v1/metastore.pb.h&gt;\n#include &lt;google/cloud/texttospeech/v1/cloud_tts.pb.h&gt;\n#include &lt;google/cloud/workflows/type/engine_call.pb.h&gt;\n#include &lt;google/cloud/workflows/type/executions_system.pb.h&gt;\n#include &lt;google/cloud/workflows/v1/workflows.pb.h&gt;\n#include &lt;google/cloud/workflows/executions/v1/executions.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/regulatoryintercept/logging/v1/regulatory_intercept_ack_log_entry.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1beta1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/assuredworkloads/v1/assuredworkloads.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/common.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_configs.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_clusters_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/game_server_deployments_service.pb.h&gt;\n#include &lt;google/cloud/gaming/v1/realms.pb.h&gt;\n#include &lt;google/cloud/domains/v1/domains.pb.h&gt;\n#include &lt;google/cloud/tpu/v1/cloud_tpu.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text.pb.h&gt;\n#include &lt;google/cloud/automl/v1/service.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_segment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/operations.pb.h&gt;\n#include &lt;google/cloud/automl/v1/data_items.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_payload.pb.h&gt;\n#include &lt;google/cloud/automl/v1/dataset.pb.h&gt;\n#include &lt;google/cloud/automl/v1/detection.pb.h&gt;\n#include &lt;google/cloud/automl/v1/io.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model_evaluation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/translation.pb.h&gt;\n#include &lt;google/cloud/automl/v1/image.pb.h&gt;\n#include &lt;google/cloud/automl/v1/annotation_spec.pb.h&gt;\n#include &lt;google/cloud/automl/v1/classification.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_extraction.pb.h&gt;\n#include &lt;google/cloud/automl/v1/text_sentiment.pb.h&gt;\n#include &lt;google/cloud/automl/v1/model.pb.h&gt;\n#include &lt;google/cloud/automl/v1/geometry.pb.h&gt;\n#include &lt;google/cloud/automl/v1/prediction_service.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config_error.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_addon.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/crawled_url.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_error_trace.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_config.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding_type_stats.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/finding.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/web_security_scanner.pb.h&gt;\n#include &lt;google/cloud/websecurityscanner/v1/scan_run_warning_trace.pb.h&gt;\n#include &lt;google/cloud/bigquery/connection/v1/connection.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/transfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/datatransfer/v1/datatransfer.pb.h&gt;\n#include &lt;google/cloud/bigquery/logging/v1/audit_data.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/standard_sql.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/encryption_config.pb.h&gt;\n#include &lt;google/cloud/bigquery/v2/model.pb.h&gt;\n#include &lt;google/cloud/bigquery/reservation/v1/reservation.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/common/common.pb.h&gt;\n#include &lt;google/cloud/bigquery/dataexchange/v1beta1/dataexchange.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta2/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/table_reference.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/read_options.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1beta1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/table.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/arrow.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/protobuf.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/avro.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/storage.pb.h&gt;\n#include &lt;google/cloud/bigquery/storage/v1/stream.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_error_details.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_metrics.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_entities.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/migration_service.pb.h&gt;\n#include &lt;google/cloud/bigquery/migration/v2/translation_config.pb.h&gt;\n#include &lt;google/cloud/shell/v1/cloudshell.pb.h&gt;\n#include &lt;google/cloud/networkanalyzer/logging/v1/analyzer_log.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/iam_binding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_message.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/access.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mute_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/notification_config.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/securitycenter_service.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/contact_details.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/resource.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/indicator.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/file.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/source.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/finding.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/mitre_attack.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/process.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/organization_settings.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/connection.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/bigquery_export.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/compliance.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/vulnerability.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/asset.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/run_asset_discovery_response.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/external_system.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/security_marks.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/exfiltration.pb.h&gt;\n#include &lt;google/cloud/securitycenter/v1/folder.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1alpha2/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1beta1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/service.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/feature.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/membership.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/multiclusteringress/multiclusteringress.pb.h&gt;\n#include &lt;google/cloud/gkehub/v1/configmanagement/configmanagement.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway.pb.h&gt;\n#include &lt;google/cloud/apigateway/v1/apigateway_service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/logging/v1/secret_event.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/service.pb.h&gt;\n#include &lt;google/cloud/secretmanager/v1/resources.pb.h&gt;\n#include &lt;google/cloud/channel/v1/service.pb.h&gt;\n#include &lt;google/cloud/channel/v1/operations.pb.h&gt;\n#include &lt;google/cloud/channel/v1/products.pb.h&gt;\n#include &lt;google/cloud/channel/v1/offers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/subscriber_event.pb.h&gt;\n#include &lt;google/cloud/channel/v1/common.pb.h&gt;\n#include &lt;google/cloud/channel/v1/entitlements.pb.h&gt;\n#include &lt;google/cloud/channel/v1/channel_partner_links.pb.h&gt;\n#include &lt;google/cloud/channel/v1/customers.pb.h&gt;\n#include &lt;google/cloud/channel/v1/repricing.pb.h&gt;\n#include &lt;google/cloud/asset/v1/assets.pb.h&gt;\n#include &lt;google/cloud/asset/v1/asset_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2alpha/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2/prediction_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/completion_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/search_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/common.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/serving_config_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/export_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/control.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event_service.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/product.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/user_event.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/catalog.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/purge_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/import_config.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/promotion.pb.h&gt;\n#include &lt;google/cloud/retail/v2beta/prediction_service.pb.h&gt;\n#include &lt;google/cloud/run/v2/service.pb.h&gt;\n#include &lt;google/cloud/run/v2/condition.pb.h&gt;\n#include &lt;google/cloud/run/v2/vendor_settings.pb.h&gt;\n#include &lt;google/cloud/run/v2/k8s.min.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision.pb.h&gt;\n#include &lt;google/cloud/run/v2/traffic_target.pb.h&gt;\n#include &lt;google/cloud/run/v2/revision_template.pb.h&gt;\n#include &lt;google/cloud/videointelligence/v1/video_intelligence.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/common_fields.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/rules.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/transactions.pb.h&gt;\n#include &lt;google/cloud/paymentgateway/issuerswitch/v1/resolutions.pb.h&gt;\n#include &lt;google/cloud/gkeconnect/gateway/v1/gateway.pb.h&gt;\n#include &lt;google/cloud/eventarc/publishing/v1/publisher.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/eventarc.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/trigger.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/discovery.pb.h&gt;\n#include &lt;google/cloud/eventarc/v1/channel_connection.pb.h&gt;\n#include &lt;google/cloud/memcache/v1/cloud_memcache.pb.h&gt;\n#include &lt;google/cloud/oslogin/common/common.pb.h&gt;\n#include &lt;google/cloud/oslogin/v1/oslogin.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/gcs_fileset_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/bigquery.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/datacatalog.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/timestamps.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/common.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/usage.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/dataplex_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/schema.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/table_spec.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanager.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/search.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/data_source.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/tags.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/policytagmanagerserialization.pb.h&gt;\n#include &lt;google/cloud/datacatalog/v1/physical_schema.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream.pb.h&gt;\n#include &lt;google/cloud/datastream/v1/datastream_resources.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/service.pb.h&gt;\n#include &lt;google/cloud/binaryauthorization/v1/resources.pb.h&gt;\n#include &lt;google/cloud/vpcaccess/v1/vpc_access.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientgateways/v1/client_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnections/v1/app_connections_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/resource_info.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connectors_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appconnectors/v1/app_connector_instance_config.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/appgateways/v1/app_gateways_service.pb.h&gt;\n#include &lt;google/cloud/beyondcorp/clientconnectorservices/v1/client_connector_services_service.pb.h&gt;\n#include &lt;google/cloud/webrisk/v1/webrisk.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/async_model.pb.h&gt;\n#include &lt;google/cloud/optimization/v1/fleet_routing.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_model.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/participant.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_profile.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/gcs.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/human_agent_assistant_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/knowledge_base.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_event.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/answer_record.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/conversation_dataset.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/context.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/validation_result.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/document.pb.h&gt;\n#include &lt;google/cloud/dialogflow/v2/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3/webhook.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/validation_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/transition_route_group.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/intent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/test_case.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/security_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/deployment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/environment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/fulfillment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/version.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/response_message.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/changelog.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/agent.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session_entity_type.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/session.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/flow.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/audio_config.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/page.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/advanced_settings.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/experiment.pb.h&gt;\n#include &lt;google/cloud/dialogflow/cx/v3beta1/webhook.pb.h&gt;\n#include &lt;google/cloud/recommender/logging/v1/action_log.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1beta1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_config.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommender_service.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/recommendation.pb.h&gt;\n#include &lt;google/cloud/recommender/v1/insight_type_config.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_billing.pb.h&gt;\n#include &lt;google/cloud/billing/v1/cloud_catalog.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_service.pb.h&gt;\n#include &lt;google/cloud/billing/budgets/v1/budget_model.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/lookup_service.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/endpoint.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/namespace.pb.h&gt;\n#include &lt;google/cloud/servicedirectory/v1/registration_service.pb.h&gt;\n#include &lt;google/cloud/language/v1/language_service.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/resources.pb.h&gt;\n#include &lt;google/cloud/contactcenterinsights/v1/contact_center_insights.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/service.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/logs.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/metadata.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/resources.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/tasks.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/content.pb.h&gt;\n#include &lt;google/cloud/dataplex/v1/analyze.pb.h&gt;\n#include &lt;google/cloud/iot/v1/device_manager.pb.h&gt;\n#include &lt;google/cloud/iot/v1/resources.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/authentication_service.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/mfa_info.pb.h&gt;\n#include &lt;google/cloud/identitytoolkit/v2/account_management_service.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/common.pb.h&gt;\n#include &lt;google/cloud/networkconnectivity/v1/hub.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_events.pb.h&gt;\n#include &lt;google/devtools/build/v1/publish_build_event.pb.h&gt;\n#include &lt;google/devtools/build/v1/build_status.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/action.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_processing_error.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configured_target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/common.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/upload_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file_set.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage_summary.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/configuration.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/file.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_file_download.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/coverage.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/resultstore_upload.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/target.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/download_metadata.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/test_suite.pb.h&gt;\n#include &lt;google/devtools/resultstore/v2/invocation.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/controller.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/data.pb.h&gt;\n#include &lt;google/devtools/clouddebugger/v2/debugger.pb.h&gt;\n#include &lt;google/devtools/cloudbuild/v1/cloudbuild.pb.h&gt;\n#include &lt;google/devtools/cloudprofiler/v2/profiler.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v1/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/trace.pb.h&gt;\n#include &lt;google/devtools/cloudtrace/v2/tracing.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/service.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/package.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/version.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/tag.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/file.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/apt_artifact.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/repository.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/settings.pb.h&gt;\n#include &lt;google/devtools/artifactregistry/v1/yum_artifact.pb.h&gt;\n#include &lt;google/devtools/source/v1/source_context.pb.h&gt;\n#include &lt;google/devtools/testing/v1/application_details.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_environment_discovery.pb.h&gt;\n#include &lt;google/devtools/testing/v1/test_execution.pb.h&gt;\n#include &lt;google/devtools/containeranalysis/v1/containeranalysis.pb.h&gt;\n#include &lt;google/example/library/v1/library.pb.h&gt;\n#include &lt;google/streetview/publish/v1/streetview_publish.pb.h&gt;\n#include &lt;google/streetview/publish/v1/rpcmessages.pb.h&gt;\n#include &lt;google/streetview/publish/v1/resources.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/dlp.pb.h&gt;\n#include &lt;google/privacy/dlp/v2/storage.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/xychart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/text.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/layouts.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/table_display_options.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/common.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/alertchart.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboards_service.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/metrics.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/logs_panel.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard_filter.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/collapsible_group.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/dashboard.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/widget.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/drilldowns.pb.h&gt;\n#include &lt;google/monitoring/dashboard/v1/scorecard.pb.h&gt;\n#include &lt;google/monitoring/v3/span_context.pb.h&gt;\n#include &lt;google/monitoring/v3/alert_service.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service.pb.h&gt;\n#include &lt;google/monitoring/v3/group_service.pb.h&gt;\n#include &lt;google/monitoring/v3/query_service.pb.h&gt;\n#include &lt;google/monitoring/v3/notification.pb.h&gt;\n#include &lt;google/monitoring/v3/metric.pb.h&gt;\n#include &lt;google/monitoring/v3/dropped_labels.pb.h&gt;\n#include &lt;google/monitoring/v3/alert.pb.h&gt;\n#include &lt;google/monitoring/v3/uptime.pb.h&gt;\n#include &lt;google/monitoring/v3/common.pb.h&gt;\n#include &lt;google/monitoring/v3/notification_service.pb.h&gt;\n#include &lt;google/monitoring/v3/metric_service.pb.h&gt;\n#include &lt;google/monitoring/v3/service_service.pb.h&gt;\n#include &lt;google/monitoring/v3/group.pb.h&gt;\n#include &lt;google/monitoring/v3/mutation_record.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scope.pb.h&gt;\n#include &lt;google/monitoring/metricsscope/v1/metrics_scopes.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/environment.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/jobs.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/snapshots.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/metrics.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/templates.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/messages.pb.h&gt;\n#include &lt;google/dataflow/v1beta3/streaming.pb.h&gt;\n#include &lt;google/geo/type/viewport.pb.h&gt;\n#include &lt;google/api/field_behavior.pb.h&gt;\n#include &lt;google/api/service.pb.h&gt;\n#include &lt;google/api/routing.pb.h&gt;\n#include &lt;google/api/annotations.pb.h&gt;\n#include &lt;google/api/metric.pb.h&gt;\n#include &lt;google/api/httpbody.pb.h&gt;\n#include &lt;google/api/system_parameter.pb.h&gt;\n#include &lt;google/api/consumer.pb.h&gt;\n#include &lt;google/api/visibility.pb.h&gt;\n#include &lt;google/api/endpoint.pb.h&gt;\n#include &lt;google/api/distribution.pb.h&gt;\n#include &lt;google/api/backend.pb.h&gt;\n#include &lt;google/api/usage.pb.h&gt;\n#include &lt;google/api/control.pb.h&gt;\n#include &lt;google/api/source_info.pb.h&gt;\n#include &lt;google/api/billing.pb.h&gt;\n#include &lt;google/api/documentation.pb.h&gt;\n#include &lt;google/api/monitored_resource.pb.h&gt;\n#include &lt;google/api/resource.pb.h&gt;\n#include &lt;google/api/launch_stage.pb.h&gt;\n#include &lt;google/api/config_change.pb.h&gt;\n#include &lt;google/api/quota.pb.h&gt;\n#include &lt;google/api/client.pb.h&gt;\n#include &lt;google/api/label.pb.h&gt;\n#include &lt;google/api/context.pb.h&gt;\n#include &lt;google/api/logging.pb.h&gt;\n#include &lt;google/api/monitoring.pb.h&gt;\n#include &lt;google/api/http.pb.h&gt;\n#include &lt;google/api/auth.pb.h&gt;\n#include &lt;google/api/log.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/resources.pb.h&gt;\n#include &lt;google/api/servicemanagement/v1/servicemanager.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/service_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/check_error.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/quota_controller.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/distribution.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/log_entry.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/metric_value.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/operation.pb.h&gt;\n#include &lt;google/api/servicecontrol/v1/http_request.pb.h&gt;\n#include &lt;google/api/servicecontrol/v2/service_controller.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/value.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/decl.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/source.pb.h&gt;\n#include &lt;google/api/expr/v1beta1/expr.pb.h&gt;\n#include &lt;google/api/expr/conformance/v1alpha1/conformance_service.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/value.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/eval.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/explain.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/syntax.pb.h&gt;\n#include &lt;google/api/expr/v1alpha1/checked.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/resources.pb.h&gt;\n#include &lt;google/api/serviceusage/v1/serviceusage.pb.h&gt;\n#include &lt;google/chromeos/uidetection/v1/ui_detection.pb.h&gt;\n#include &lt;google/type/color.pb.h&gt;\n#include &lt;google/type/latlng.pb.h&gt;\n#include &lt;google/type/quaternion.pb.h&gt;\n#include &lt;google/type/decimal.pb.h&gt;\n#include &lt;google/type/timeofday.pb.h&gt;\n#include &lt;google/type/phone_number.pb.h&gt;\n#include &lt;google/type/calendar_period.pb.h&gt;\n#include &lt;google/type/dayofweek.pb.h&gt;\n#include &lt;google/type/date.pb.h&gt;\n#include &lt;google/type/postal_address.pb.h&gt;\n#include &lt;google/type/expr.pb.h&gt;\n#include &lt;google/type/month.pb.h&gt;\n#include &lt;google/type/fraction.pb.h&gt;\n#include &lt;google/type/money.pb.h&gt;\n#include &lt;google/type/datetime.pb.h&gt;\n#include &lt;google/type/interval.pb.h&gt;\n#include &lt;google/chat/logging/v1/chat_app_log_entry.pb.h&gt;\n#include &lt;google/pubsub/v1/schema.pb.h&gt;\n#include &lt;google/pubsub/v1/pubsub.pb.h&gt;\n#include &lt;google/partner/aistreams/v1alpha1/aistreams.pb.h&gt;\n#include &lt;google/maps/routing/v2/maneuver.pb.h&gt;\n#include &lt;google/maps/routing/v2/speed_reading_interval.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_travel_mode.pb.h&gt;\n#include &lt;google/maps/routing/v2/polyline.pb.h&gt;\n#include &lt;google/maps/routing/v2/waypoint.pb.h&gt;\n#include &lt;google/maps/routing/v2/location.pb.h&gt;\n#include &lt;google/maps/routing/v2/fallback_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_passes.pb.h&gt;\n#include &lt;google/maps/routing/v2/routes_service.pb.h&gt;\n#include &lt;google/maps/routing/v2/toll_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routing/v2/units.pb.h&gt;\n#include &lt;google/maps/routing/v2/vehicle_info.pb.h&gt;\n#include &lt;google/maps/routing/v2/route.pb.h&gt;\n#include &lt;google/maps/routing/v2/routing_preference.pb.h&gt;\n#include &lt;google/maps/routing/v2/route_modifiers.pb.h&gt;\n#include &lt;google/maps/routing/v2/navigation_instruction.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/polyline.pb.h&gt;\n#include &lt;google/maps/routes/v1/waypoint.pb.h&gt;\n#include &lt;google/maps/routes/v1/fallback_info.pb.h&gt;\n#include &lt;google/maps/routes/v1/toll_passes.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_matrix_element.pb.h&gt;\n#include &lt;google/maps/routes/v1/vehicle_emission_type.pb.h&gt;\n#include &lt;google/maps/routes/v1/route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_custom_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_routes_response.pb.h&gt;\n#include &lt;google/maps/routes/v1/custom_route.pb.h&gt;\n#include &lt;google/maps/routes/v1/compute_route_matrix_request.pb.h&gt;\n#include &lt;google/maps/routes/v1/route_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_search_values.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_lookup_service.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_match.pb.h&gt;\n#include &lt;google/maps/regionlookup/v1alpha/region_identifier.pb.h&gt;\n#include &lt;google/maps/roads/v1op/roads.pb.h&gt;\n#include &lt;google/iam/admin/v1/iam.pb.h&gt;\n#include &lt;google/iam/admin/v1/audit_data.pb.h&gt;\n#include &lt;google/iam/v1/iam_policy.pb.h&gt;\n#include &lt;google/iam/v1/policy.pb.h&gt;\n#include &lt;google/iam/v1/options.pb.h&gt;\n#include &lt;google/iam/v1/logging/audit_data.pb.h&gt;\n#include &lt;google/iam/v2beta/deny.pb.h&gt;\n#include &lt;google/iam/v2beta/policy.pb.h&gt;\n#include &lt;google/iam/credentials/v1/common.pb.h&gt;\n#include &lt;google/iam/credentials/v1/iamcredentials.pb.h&gt;\n#include &lt;google/networking/trafficdirector/type/traffic_director_log_entry.pb.h&gt;\n#include &lt;google/logging/type/log_severity.pb.h&gt;\n#include &lt;google/logging/type/http_request.pb.h&gt;\n#include &lt;google/logging/v2/log_entry.pb.h&gt;\n#include &lt;google/logging/v2/logging_metrics.pb.h&gt;\n#include &lt;google/logging/v2/logging.pb.h&gt;\n#include &lt;google/logging/v2/logging_config.pb.h&gt;\n#include &lt;google/datastore/admin/v1/datastore_admin.pb.h&gt;\n#include &lt;google/datastore/admin/v1/migration.pb.h&gt;\n#include &lt;google/datastore/admin/v1/index.pb.h&gt;\n#include &lt;google/datastore/v1/entity.pb.h&gt;\n#include &lt;google/datastore/v1/datastore.pb.h&gt;\n#include &lt;google/datastore/v1/query.pb.h&gt;\n#include &lt;google/appengine/logging/v1/request_log.pb.h&gt;\n#include &lt;google/appengine/v1/app_yaml.pb.h&gt;\n#include &lt;google/appengine/v1/firewall.pb.h&gt;\n#include &lt;google/appengine/v1/instance.pb.h&gt;\n#include &lt;google/appengine/v1/service.pb.h&gt;\n#include &lt;google/appengine/v1/certificate.pb.h&gt;\n#include &lt;google/appengine/v1/domain_mapping.pb.h&gt;\n#include &lt;google/appengine/v1/appengine.pb.h&gt;\n#include &lt;google/appengine/v1/deployed_files.pb.h&gt;\n#include &lt;google/appengine/v1/location.pb.h&gt;\n#include &lt;google/appengine/v1/version.pb.h&gt;\n#include &lt;google/appengine/v1/network_settings.pb.h&gt;\n#include &lt;google/appengine/v1/audit_data.pb.h&gt;\n#include &lt;google/appengine/v1/deploy.pb.h&gt;\n#include &lt;google/appengine/v1/operation.pb.h&gt;\n#include &lt;google/appengine/v1/application.pb.h&gt;\n#include &lt;google/appengine/v1/domain.pb.h&gt;\n#include &lt;google/appengine/legacy/audit_data.pb.h&gt;\n#include &lt;google/actions/type/datetime_range.pb.h&gt;\n#include &lt;google/actions/type/date_range.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/type/device_resources.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_policy.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_context_manager.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/gcp_user_access_binding.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/access_level.pb.h&gt;\n#include &lt;google/identity/accesscontextmanager/v1/service_perimeter.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/instance.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/table.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_table_admin.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/common.pb.h&gt;\n#include &lt;google/bigtable/admin/v2/bigtable_instance_admin.pb.h&gt;\n#include &lt;google/bigtable/v2/data.pb.h&gt;\n#include &lt;google/bigtable/v2/bigtable.pb.h&gt;\n#include &lt;google/bigtable/v2/response_params.pb.h&gt;\n#include &lt;google/firestore/admin/v1/index.pb.h&gt;\n#include &lt;google/firestore/admin/v1/location.pb.h&gt;\n#include &lt;google/firestore/admin/v1/operation.pb.h&gt;\n#include &lt;google/firestore/admin/v1/database.pb.h&gt;\n#include &lt;google/firestore/admin/v1/field.pb.h&gt;\n#include &lt;google/firestore/admin/v1/firestore_admin.pb.h&gt;\n#include &lt;google/firestore/v1/firestore.pb.h&gt;\n#include &lt;google/firestore/v1/common.pb.h&gt;\n#include &lt;google/firestore/v1/write.pb.h&gt;\n#include &lt;google/firestore/v1/query.pb.h&gt;\n#include &lt;google/firestore/v1/document.pb.h&gt;\n#include &lt;google/firestore/bundle/bundle.pb.h&gt;\n#include &lt;google/storage/v1/storage_resources.pb.h&gt;\n#include &lt;google/storage/v1/storage.pb.h&gt;\n#include &lt;google/storage/v2/storage.pb.h&gt;\n#include &lt;google/longrunning/operations.pb.h&gt;\n#include &lt;google/rpc/status.pb.h&gt;\n#include &lt;google/rpc/code.pb.h&gt;\n#include &lt;google/rpc/error_details.pb.h&gt;\n#include &lt;google/rpc/context/attribute_context.pb.h&gt;\n#include &lt;google/spanner/admin/instance/v1/spanner_instance_admin.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/backup.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/common.pb.h&gt;\n#include &lt;google/spanner/admin/database/v1/spanner_database_admin.pb.h&gt;\n#include &lt;google/spanner/v1/type.pb.h&gt;\n#include &lt;google/spanner/v1/keys.pb.h&gt;\n#include &lt;google/spanner/v1/transaction.pb.h&gt;\n#include &lt;google/spanner/v1/commit_response.pb.h&gt;\n#include &lt;google/spanner/v1/mutation.pb.h&gt;\n#include &lt;google/spanner/v1/query_plan.pb.h&gt;\n#include &lt;google/spanner/v1/result_set.pb.h&gt;\n#include &lt;google/spanner/v1/spanner.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer.pb.h&gt;\n#include &lt;google/storagetransfer/v1/transfer_types.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance.pb.h&gt;\n#include &lt;grafeas/v1/intoto_statement.pb.h&gt;\n#include &lt;grafeas/v1/provenance.pb.h&gt;\n#include &lt;grafeas/v1/deployment.pb.h&gt;\n#include &lt;grafeas/v1/upgrade.pb.h&gt;\n#include &lt;grafeas/v1/attestation.pb.h&gt;\n#include &lt;grafeas/v1/common.pb.h&gt;\n#include &lt;grafeas/v1/package.pb.h&gt;\n#include &lt;grafeas/v1/cvss.pb.h&gt;\n#include &lt;grafeas/v1/grafeas.pb.h&gt;\n#include &lt;grafeas/v1/build.pb.h&gt;\n#include &lt;grafeas/v1/intoto_provenance.pb.h&gt;\n#include &lt;grafeas/v1/discovery.pb.h&gt;\n#include &lt;grafeas/v1/image.pb.h&gt;\n#include &lt;grafeas/v1/compliance.pb.h&gt;\n#include &lt;grafeas/v1/vulnerability.pb.h&gt;\n#include &lt;grafeas/v1/severity.pb.h&gt;\n#include &lt;grafeas/v1/slsa_provenance_zero_two.pb.h&gt;\n#include &lt;grafeas/v1/dsse_attestation.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/googleapis/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/grpc-proto/","title":"grpc-proto/cci.20220627","text":""},{"location":"packages/v1_50_1/grpc-proto/#grpc-protocci20220627-dependencies","title":"grpc-proto/cci.20220627 dependencies","text":"<ul> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_50_1/grpc-proto/#using-the-grpc-proto-conan-package","title":"Using the grpc-proto Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc-proto in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#using-grpc-proto-with-cmake","title":"Using grpc-proto with CMake","text":""},{"location":"packages/v1_50_1/grpc-proto/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc-proto in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc-proto::grpc-proto CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc-proto_project CXX)\n\nfind_package(grpc-proto)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc-proto::grpc-proto)\n</code></pre> <p></p> <p>To install grpc-proto/cci.20220627, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#using-grpc-proto-with-visual-studio","title":"Using grpc-proto with Visual Studio","text":""},{"location":"packages/v1_50_1/grpc-proto/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#using-grpc-proto-with-autotools-and-pkg-config","title":"Using grpc-proto with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/grpc-proto/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc-proto library and its dependencies  ( protobuf,  googleapis,  zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc-proto dependency like:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc-proto.pc file (and the ones corresponding to grpc-proto dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc-proto/cci.20220627\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc-proto)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc-proto)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc-proto)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/grpc-proto/#exposed-header-files-for-grpc-proto","title":"Exposed header files for grpc-proto","text":"<pre><code>#include &lt;grpc/channelz/v1/channelz.pb.h&gt;\n#include &lt;grpc/gcp/handshaker.pb.h&gt;\n#include &lt;grpc/gcp/transport_security_common.pb.h&gt;\n#include &lt;grpc/gcp/altscontext.pb.h&gt;\n#include &lt;grpc/core/stats.pb.h&gt;\n#include &lt;grpc/health/v1/health.pb.h&gt;\n#include &lt;grpc/reflection/v1alpha/reflection.pb.h&gt;\n#include &lt;grpc/reflection/v1/reflection.pb.h&gt;\n#include &lt;grpc/service_config/service_config.pb.h&gt;\n#include &lt;grpc/testing/stats.pb.h&gt;\n#include &lt;grpc/testing/benchmark_service.pb.h&gt;\n#include &lt;grpc/testing/control.pb.h&gt;\n#include &lt;grpc/testing/worker_service.pb.h&gt;\n#include &lt;grpc/testing/payloads.pb.h&gt;\n#include &lt;grpc/testing/messages.pb.h&gt;\n#include &lt;grpc/testing/report_qps_scenario_service.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls_config.pb.h&gt;\n#include &lt;grpc/lookup/v1/rls.pb.h&gt;\n#include &lt;grpc/binlog/v1/binarylog.pb.h&gt;\n#include &lt;grpc/lb/v1/load_balancer.pb.h&gt;\n#include &lt;grpc/lb/v1/load_reporter.pb.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/grpc-proto/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/grpc/","title":"grpc/1.50.1","text":""},{"location":"packages/v1_50_1/grpc/#grpc1501-setup-with-artifactory","title":"grpc/1.50.1 setup with artifactory","text":"<p>For Conan 1.13 and up, use the following command to activate the revision feature:</p> <p><pre><code>export CONAN_REVISIONS_ENABLED=1\n</code></pre> For your Conan command line client to work with this Conan repository, you first need to add the repository to your client configuration using the following command:</p> <pre><code>conan remote add armv7-armv8-x86_64-linux-thommyho http://artifactory.dns.army:8081/artifactory/api/conan/armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p>No user login required: anonymous read access is always granted!</p> <p>To install the dependencies defined in your project's conanfile.txt from an Artifactory Conan repository, use the following command:</p> <pre><code>conan install . grpc/1.50.1@ -r armv7-armv8-x86_64-linux-thommyho\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/grpc/#grpc1501-dependencies","title":"grpc/1.50.1 dependencies","text":"<ul> <li>abseil/20220623.0</li> <li>c-ares/1.18.1</li> <li>openssl/1.1.1s</li> <li>re2/20220601</li> <li>zlib/1.2.13</li> <li>protobuf/3.21.4</li> <li>googleapis/cci.20220711</li> <li>grpc-proto/cci.20220627</li> </ul>"},{"location":"packages/v1_50_1/grpc/#using-the-grpc-conan-package","title":"Using the grpc Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate grpc in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#using-grpc-with-cmake","title":"Using grpc with CMake","text":""},{"location":"packages/v1_50_1/grpc/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.50.1\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use grpc in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global grpc::grpc CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(grpc_project CXX)\n\nfind_package(gRPC)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} grpc::grpc)\n</code></pre> <p></p> <p>To install grpc/1.50.1, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the grpc Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the grpc address_sorting component, through the gRPC::address_sorting target.</p> <pre><code>...\n# Link just to grpc address_sorting component\ntarget_link_libraries(${PROJECT_NAME} gRPC::address_sorting)\n</code></pre> <p></p> <p>To check all the available components for grpc Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_50_1/grpc/#libcmakeconan_trickgrpc_cpp_plugincmake","title":"lib/cmake/conan_trick/grpc_cpp_plugin.cmake","text":"<pre><code>if(NOT TARGET gRPC::grpc_cpp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CPP_PLUGIN_PROGRAM\nNAMES grpc_cpp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CPP_PLUGIN_PROGRAM NAMES grpc_cpp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CPP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CPP_PLUGIN_PROGRAM\n#         NAMES grpc_cpp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CPP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CPP_PLUGIN_PROGRAM \"${GRPC_CPP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_cpp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_cpp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CPP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_csharp_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_csharp_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_CSHARP_PLUGIN_PROGRAM\nNAMES grpc_csharp_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_CSHARP_PLUGIN_PROGRAM NAMES grpc_csharp_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_CSHARP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_CSHARP_PLUGIN_PROGRAM\n#         NAMES grpc_csharp_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_CSHARP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_CSHARP_PLUGIN_PROGRAM \"${GRPC_CSHARP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_csharp_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_csharp_plugin PROPERTY IMPORTED_LOCATION ${GRPC_CSHARP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_node_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_node_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_NODE_PLUGIN_PROGRAM\nNAMES grpc_node_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_NODE_PLUGIN_PROGRAM NAMES grpc_node_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_NODE_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_NODE_PLUGIN_PROGRAM\n#         NAMES grpc_node_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_NODE_PLUGIN_PROGRAM)\nget_filename_component(GRPC_NODE_PLUGIN_PROGRAM \"${GRPC_NODE_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_node_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_node_plugin PROPERTY IMPORTED_LOCATION ${GRPC_NODE_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_objective_c_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_objective_c_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\nNAMES grpc_objective_c_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM NAMES grpc_objective_c_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_OBJECTIVE_C_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM\n#         NAMES grpc_objective_c_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM)\nget_filename_component(GRPC_OBJECTIVE_C_PLUGIN_PROGRAM \"${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_objective_c_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_objective_c_plugin PROPERTY IMPORTED_LOCATION ${GRPC_OBJECTIVE_C_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_php_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_php_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PHP_PLUGIN_PROGRAM\nNAMES grpc_php_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PHP_PLUGIN_PROGRAM NAMES grpc_php_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PHP_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PHP_PLUGIN_PROGRAM\n#         NAMES grpc_php_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PHP_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PHP_PLUGIN_PROGRAM \"${GRPC_PHP_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_php_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_php_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PHP_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_python_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_python_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_PYTHON_PLUGIN_PROGRAM\nNAMES grpc_python_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_PYTHON_PLUGIN_PROGRAM NAMES grpc_python_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_PYTHON_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_PYTHON_PLUGIN_PROGRAM\n#         NAMES grpc_python_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_PYTHON_PLUGIN_PROGRAM)\nget_filename_component(GRPC_PYTHON_PLUGIN_PROGRAM \"${GRPC_PYTHON_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_python_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_python_plugin PROPERTY IMPORTED_LOCATION ${GRPC_PYTHON_PLUGIN_PROGRAM})\nendif()\nendif()\n\n```#### lib/cmake/conan_trick/grpc_ruby_plugin.cmake\n```cmake\nif(NOT TARGET gRPC::grpc_ruby_plugin)\nif(CMAKE_CROSSCOMPILING)\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS ENV PATH\nNO_DEFAULT_PATH\n)\nelse()\nfind_program(GRPC_RUBY_PLUGIN_PROGRAM\nNAMES grpc_ruby_plugin\nPATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\nNO_DEFAULT_PATH\n)\nendif()\n# TODO: In conan v2 with CMakeToolchain, can be replaced by:\n# find_program(GRPC_RUBY_PLUGIN_PROGRAM NAMES grpc_ruby_plugin))\n# # Nice enough to handle grpc not in build_requires for native build\n# if(NOT GRPC_RUBY_PLUGIN_PROGRAM AND NOT CMAKE_CROSSCOMPILING)\n#     find_program(GRPC_RUBY_PLUGIN_PROGRAM\n#         NAMES grpc_ruby_plugin\n#         PATHS \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/\"\n#         NO_DEFAULT_PATH\n#     )\n# endif()\n\nif(GRPC_RUBY_PLUGIN_PROGRAM)\nget_filename_component(GRPC_RUBY_PLUGIN_PROGRAM \"${GRPC_RUBY_PLUGIN_PROGRAM}\" ABSOLUTE)\nadd_executable(gRPC::grpc_ruby_plugin IMPORTED)\nset_property(TARGET gRPC::grpc_ruby_plugin PROPERTY IMPORTED_LOCATION ${GRPC_RUBY_PLUGIN_PROGRAM})\nendif()\nendif()\n</code></pre>"},{"location":"packages/v1_50_1/grpc/#using-grpc-with-visual-studio","title":"Using grpc with Visual Studio","text":""},{"location":"packages/v1_50_1/grpc/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.50.1\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#using-grpc-with-autotools-and-pkg-config","title":"Using grpc with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/grpc/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the grpc library and its dependencies  ( abseil,  c-ares,  openssl,  re2,  zlib,  protobuf,  googleapis,  grpc-proto) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your grpc dependency like:</p> <pre><code>[requires]\ngrpc/1.50.1\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/grpc/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the grpc.pc file (and the ones corresponding to grpc dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\ngrpc/1.50.1\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags grpc)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l grpc)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other grpc)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the grpc Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for grpc Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#declared-components-for-grpc","title":"Declared components for grpc","text":"<p>These are all the declared components for the grpc Conan package: * Component address_sorting:   * CMake target name: <code>gRPC::address_sorting</code>   * pkg-config .pc file: address_sorting.pc   * Links to libraries: address_sorting   * Systems libs: m, pthread * Component gpr:   * CMake target name: <code>gRPC::gpr</code>   * pkg-config .pc file: gpr.pc   * Requires other components: upb, abseil::absl_base, abseil::absl_memory, abseil::absl_status, abseil::absl_str_format, abseil::absl_strings, abseil::absl_synchronization, abseil::absl_time, abseil::absl_optional   * Links to libraries: gpr   * Systems libs: m, pthread * Component _grpc:   * CMake target name: <code>gRPC::grpc</code>   * pkg-config .pc file: grpc.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_bind_front, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, abseil::absl_random_random, c-ares::cares, openssl::crypto, openssl::ssl, re2::re2, zlib::zlib   * Links to libraries: grpc   * Systems libs: m, pthread * Component grpc++:   * CMake target name: <code>gRPC::grpc++</code>   * pkg-config .pc file: grpc++.pc   * Requires other components: _grpc, protobuf::libprotobuf   * Links to libraries: grpc++   * Systems libs: m, pthread * Component grpc++_alts:   * CMake target name: <code>gRPC::grpc++_alts</code>   * pkg-config .pc file: grpc++_alts.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_alts   * Systems libs: m, pthread * Component grpc++_error_details:   * CMake target name: <code>gRPC::grpc++_error_details</code>   * pkg-config .pc file: grpc++_error_details.pc   * Requires other components: grpc++, protobuf::libprotobuf   * Links to libraries: grpc++_error_details   * Systems libs: m, pthread * Component upb:   * CMake target name: <code>gRPC::upb</code>   * pkg-config .pc file: upb.pc   * Links to libraries: upb   * Systems libs: m, pthread * Component grpc_plugin_support:   * CMake target name: <code>gRPC::grpc_plugin_support</code>   * pkg-config .pc file: grpc_plugin_support.pc   * Requires other components: protobuf::libprotoc, protobuf::libprotobuf   * Links to libraries: grpc_plugin_support   * Systems libs: m, pthread * Component grpc_unsecure:   * CMake target name: <code>gRPC::grpc_unsecure</code>   * pkg-config .pc file: grpc_unsecure.pc   * Requires other components: address_sorting, gpr, upb, abseil::absl_flat_hash_map, abseil::absl_inlined_vector, abseil::absl_statusor, c-ares::cares, re2::re2, zlib::zlib, abseil::absl_random_random   * Links to libraries: grpc_unsecure   * Systems libs: m, pthread * Component grpc++_unsecure:   * CMake target name: <code>gRPC::grpc++_unsecure</code>   * pkg-config .pc file: grpc++_unsecure.pc   * Requires other components: grpc_unsecure, protobuf::libprotobuf   * Links to libraries: grpc++_unsecure   * Systems libs: m, pthread * Component grpc++_reflection:   * CMake target name: <code>gRPC::grpc++_reflection</code>   * pkg-config .pc file: grpc++_reflection.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpc++_reflection   * Systems libs: m, pthread * Component grpcpp_channelz:   * CMake target name: <code>gRPC::grpcpp_channelz</code>   * pkg-config .pc file: grpcpp_channelz.pc   * Requires other components: grpc++, protobuf::libprotobuf, grpc-proto::grpc-proto, googleapis::googleapis   * Links to libraries: grpcpp_channelz   * Systems libs: m, pthread * Component grpc_execs:   * CMake target name: <code>grpc::grpc_execs</code>   * pkg-config .pc file: grpc-grpc_execs.pc</p> <p></p>"},{"location":"packages/v1_50_1/grpc/#exposed-header-files-for-grpc","title":"Exposed header files for grpc","text":"<pre><code>#include &lt;grpc/slice.h&gt;\n#include &lt;grpc/byte_buffer_reader.h&gt;\n#include &lt;grpc/grpc.h&gt;\n#include &lt;grpc/load_reporting.h&gt;\n#include &lt;grpc/grpc_security.h&gt;\n#include &lt;grpc/grpc_security_constants.h&gt;\n#include &lt;grpc/compression.h&gt;\n#include &lt;grpc/fork.h&gt;\n#include &lt;grpc/byte_buffer.h&gt;\n#include &lt;grpc/census.h&gt;\n#include &lt;grpc/status.h&gt;\n#include &lt;grpc/slice_buffer.h&gt;\n#include &lt;grpc/grpc_posix.h&gt;\n#include &lt;grpc/support/atm_windows.h&gt;\n#include &lt;grpc/support/sync_posix.h&gt;\n#include &lt;grpc/support/string_util.h&gt;\n#include &lt;grpc/support/log.h&gt;\n#include &lt;grpc/support/sync_abseil.h&gt;\n#include &lt;grpc/support/cpu.h&gt;\n#include &lt;grpc/support/log_windows.h&gt;\n#include &lt;grpc/support/time.h&gt;\n#include &lt;grpc/support/port_platform.h&gt;\n#include &lt;grpc/support/atm.h&gt;\n#include &lt;grpc/support/sync.h&gt;\n#include &lt;grpc/support/thd_id.h&gt;\n#include &lt;grpc/support/atm_gcc_sync.h&gt;\n#include &lt;grpc/support/sync_windows.h&gt;\n#include &lt;grpc/support/workaround_list.h&gt;\n#include &lt;grpc/support/sync_generic.h&gt;\n#include &lt;grpc/support/atm_gcc_atomic.h&gt;\n#include &lt;grpc/support/sync_custom.h&gt;\n#include &lt;grpc/support/alloc.h&gt;\n#include &lt;grpc/impl/codegen/atm_windows.h&gt;\n#include &lt;grpc/impl/codegen/slice.h&gt;\n#include &lt;grpc/impl/codegen/sync_posix.h&gt;\n#include &lt;grpc/impl/codegen/log.h&gt;\n#include &lt;grpc/impl/codegen/sync_abseil.h&gt;\n#include &lt;grpc/impl/codegen/gpr_slice.h&gt;\n#include &lt;grpc/impl/codegen/port_platform.h&gt;\n#include &lt;grpc/impl/codegen/atm.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer_reader.h&gt;\n#include &lt;grpc/impl/codegen/sync.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_sync.h&gt;\n#include &lt;grpc/impl/codegen/sync_windows.h&gt;\n#include &lt;grpc/impl/codegen/sync_generic.h&gt;\n#include &lt;grpc/impl/codegen/connectivity_state.h&gt;\n#include &lt;grpc/impl/codegen/fork.h&gt;\n#include &lt;grpc/impl/codegen/grpc_types.h&gt;\n#include &lt;grpc/impl/codegen/atm_gcc_atomic.h&gt;\n#include &lt;grpc/impl/codegen/sync_custom.h&gt;\n#include &lt;grpc/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc/impl/codegen/compression_types.h&gt;\n#include &lt;grpc/impl/codegen/gpr_types.h&gt;\n#include &lt;grpc/impl/codegen/status.h&gt;\n#include &lt;grpc/impl/codegen/propagation_bits.h&gt;\n#include &lt;grpc/event_engine/slice.h&gt;\n#include &lt;grpc/event_engine/endpoint_config.h&gt;\n#include &lt;grpc/event_engine/event_engine.h&gt;\n#include &lt;grpc/event_engine/port.h&gt;\n#include &lt;grpc/event_engine/memory_request.h&gt;\n#include &lt;grpc/event_engine/memory_allocator.h&gt;\n#include &lt;grpc/event_engine/slice_buffer.h&gt;\n#include &lt;grpc/event_engine/internal/memory_allocator_impl.h&gt;\n#include &lt;grpc++/grpc++.h&gt;\n#include &lt;grpc++/create_channel.h&gt;\n#include &lt;grpc++/resource_quota.h&gt;\n#include &lt;grpc++/create_channel_posix.h&gt;\n#include &lt;grpc++/alarm.h&gt;\n#include &lt;grpc++/channel.h&gt;\n#include &lt;grpc++/client_context.h&gt;\n#include &lt;grpc++/health_check_service_interface.h&gt;\n#include &lt;grpc++/server_context.h&gt;\n#include &lt;grpc++/completion_queue.h&gt;\n#include &lt;grpc++/server_builder.h&gt;\n#include &lt;grpc++/server.h&gt;\n#include &lt;grpc++/server_posix.h&gt;\n#include &lt;grpc++/security/credentials.h&gt;\n#include &lt;grpc++/security/auth_metadata_processor.h&gt;\n#include &lt;grpc++/security/server_credentials.h&gt;\n#include &lt;grpc++/security/auth_context.h&gt;\n#include &lt;grpc++/support/async_unary_call.h&gt;\n#include &lt;grpc++/support/slice.h&gt;\n#include &lt;grpc++/support/config.h&gt;\n#include &lt;grpc++/support/status_code_enum.h&gt;\n#include &lt;grpc++/support/channel_arguments.h&gt;\n#include &lt;grpc++/support/time.h&gt;\n#include &lt;grpc++/support/stub_options.h&gt;\n#include &lt;grpc++/support/async_stream.h&gt;\n#include &lt;grpc++/support/string_ref.h&gt;\n#include &lt;grpc++/support/sync_stream.h&gt;\n#include &lt;grpc++/support/byte_buffer.h&gt;\n#include &lt;grpc++/support/error_details.h&gt;\n#include &lt;grpc++/support/status.h&gt;\n#include &lt;grpc++/generic/async_generic_service.h&gt;\n#include &lt;grpc++/generic/generic_stub.h&gt;\n#include &lt;grpc++/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpc++/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_option.h&gt;\n#include &lt;grpc++/impl/server_builder_plugin.h&gt;\n#include &lt;grpc++/impl/call.h&gt;\n#include &lt;grpc++/impl/server_initializer.h&gt;\n#include &lt;grpc++/impl/channel_argument_option.h&gt;\n#include &lt;grpc++/impl/service_type.h&gt;\n#include &lt;grpc++/impl/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/rpc_method.h&gt;\n#include &lt;grpc++/impl/grpc_library.h&gt;\n#include &lt;grpc++/impl/serialization_traits.h&gt;\n#include &lt;grpc++/impl/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/slice.h&gt;\n#include &lt;grpc++/impl/codegen/config.h&gt;\n#include &lt;grpc++/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpc++/impl/codegen/time.h&gt;\n#include &lt;grpc++/impl/codegen/proto_utils.h&gt;\n#include &lt;grpc++/impl/codegen/call.h&gt;\n#include &lt;grpc++/impl/codegen/core_codegen.h&gt;\n#include &lt;grpc++/impl/codegen/metadata_map.h&gt;\n#include &lt;grpc++/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpc++/impl/codegen/client_context.h&gt;\n#include &lt;grpc++/impl/codegen/channel_interface.h&gt;\n#include &lt;grpc++/impl/codegen/stub_options.h&gt;\n#include &lt;grpc++/impl/codegen/call_hook.h&gt;\n#include &lt;grpc++/impl/codegen/service_type.h&gt;\n#include &lt;grpc++/impl/codegen/server_interface.h&gt;\n#include &lt;grpc++/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_method.h&gt;\n#include &lt;grpc++/impl/codegen/async_stream.h&gt;\n#include &lt;grpc++/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpc++/impl/codegen/server_context.h&gt;\n#include &lt;grpc++/impl/codegen/string_ref.h&gt;\n#include &lt;grpc++/impl/codegen/sync_stream.h&gt;\n#include &lt;grpc++/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpc++/impl/codegen/grpc_library.h&gt;\n#include &lt;grpc++/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpc++/impl/codegen/completion_queue.h&gt;\n#include &lt;grpc++/impl/codegen/status.h&gt;\n#include &lt;grpc++/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpc++/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpc++/impl/codegen/security/auth_context.h&gt;\n#include &lt;grpcpp/xds_server_builder.h&gt;\n#include &lt;grpcpp/create_channel.h&gt;\n#include &lt;grpcpp/resource_quota.h&gt;\n#include &lt;grpcpp/grpcpp.h&gt;\n#include &lt;grpcpp/create_channel_posix.h&gt;\n#include &lt;grpcpp/alarm.h&gt;\n#include &lt;grpcpp/channel.h&gt;\n#include &lt;grpcpp/client_context.h&gt;\n#include &lt;grpcpp/health_check_service_interface.h&gt;\n#include &lt;grpcpp/create_channel_binder.h&gt;\n#include &lt;grpcpp/server_context.h&gt;\n#include &lt;grpcpp/completion_queue.h&gt;\n#include &lt;grpcpp/server_builder.h&gt;\n#include &lt;grpcpp/server.h&gt;\n#include &lt;grpcpp/server_posix.h&gt;\n#include &lt;grpcpp/security/credentials.h&gt;\n#include &lt;grpcpp/security/tls_certificate_verifier.h&gt;\n#include &lt;grpcpp/security/tls_credentials_options.h&gt;\n#include &lt;grpcpp/security/auth_metadata_processor.h&gt;\n#include &lt;grpcpp/security/server_credentials.h&gt;\n#include &lt;grpcpp/security/binder_security_policy.h&gt;\n#include &lt;grpcpp/security/tls_certificate_provider.h&gt;\n#include &lt;grpcpp/security/binder_credentials.h&gt;\n#include &lt;grpcpp/security/auth_context.h&gt;\n#include &lt;grpcpp/security/authorization_policy_provider.h&gt;\n#include &lt;grpcpp/security/alts_util.h&gt;\n#include &lt;grpcpp/security/alts_context.h&gt;\n#include &lt;grpcpp/support/async_unary_call.h&gt;\n#include &lt;grpcpp/support/slice.h&gt;\n#include &lt;grpcpp/support/config.h&gt;\n#include &lt;grpcpp/support/message_allocator.h&gt;\n#include &lt;grpcpp/support/validate_service_config.h&gt;\n#include &lt;grpcpp/support/client_interceptor.h&gt;\n#include &lt;grpcpp/support/server_interceptor.h&gt;\n#include &lt;grpcpp/support/status_code_enum.h&gt;\n#include &lt;grpcpp/support/channel_arguments.h&gt;\n#include &lt;grpcpp/support/time.h&gt;\n#include &lt;grpcpp/support/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/support/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/support/stub_options.h&gt;\n#include &lt;grpcpp/support/interceptor.h&gt;\n#include &lt;grpcpp/support/async_stream.h&gt;\n#include &lt;grpcpp/support/string_ref.h&gt;\n#include &lt;grpcpp/support/sync_stream.h&gt;\n#include &lt;grpcpp/support/byte_buffer.h&gt;\n#include &lt;grpcpp/support/client_callback.h&gt;\n#include &lt;grpcpp/support/error_details.h&gt;\n#include &lt;grpcpp/support/status.h&gt;\n#include &lt;grpcpp/support/server_callback.h&gt;\n#include &lt;grpcpp/support/method_handler.h&gt;\n#include &lt;grpcpp/generic/async_generic_service.h&gt;\n#include &lt;grpcpp/generic/generic_stub.h&gt;\n#include &lt;grpcpp/ext/proto_server_reflection_plugin.h&gt;\n#include &lt;grpcpp/ext/channelz_service_plugin.h&gt;\n#include &lt;grpcpp/ext/call_metric_recorder.h&gt;\n#include &lt;grpcpp/ext/health_check_service_server_builder_option.h&gt;\n#include &lt;grpcpp/impl/call_op_set_interface.h&gt;\n#include &lt;grpcpp/impl/server_builder_option.h&gt;\n#include &lt;grpcpp/impl/server_builder_plugin.h&gt;\n#include &lt;grpcpp/impl/call.h&gt;\n#include &lt;grpcpp/impl/server_initializer.h&gt;\n#include &lt;grpcpp/impl/channel_argument_option.h&gt;\n#include &lt;grpcpp/impl/call_hook.h&gt;\n#include &lt;grpcpp/impl/service_type.h&gt;\n#include &lt;grpcpp/impl/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/rpc_method.h&gt;\n#include &lt;grpcpp/impl/grpc_library.h&gt;\n#include &lt;grpcpp/impl/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/async_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback_handlers.h&gt;\n#include &lt;grpcpp/impl/codegen/slice.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set.h&gt;\n#include &lt;grpcpp/impl/codegen/call_op_set_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/config.h&gt;\n#include &lt;grpcpp/impl/codegen/async_generic_service.h&gt;\n#include &lt;grpcpp/impl/codegen/message_allocator.h&gt;\n#include &lt;grpcpp/impl/codegen/delegating_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/client_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/status_code_enum.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue_tag.h&gt;\n#include &lt;grpcpp/impl/codegen/time.h&gt;\n#include &lt;grpcpp/impl/codegen/sync.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_utils.h&gt;\n#include &lt;grpcpp/impl/codegen/call.h&gt;\n#include &lt;grpcpp/impl/codegen/intercepted_channel.h&gt;\n#include &lt;grpcpp/impl/codegen/core_codegen.h&gt;\n#include &lt;grpcpp/impl/codegen/metadata_map.h&gt;\n#include &lt;grpcpp/impl/codegen/config_protobuf.h&gt;\n#include &lt;grpcpp/impl/codegen/client_context.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_reader.h&gt;\n#include &lt;grpcpp/impl/codegen/proto_buffer_writer.h&gt;\n#include &lt;grpcpp/impl/codegen/channel_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/stub_options.h&gt;\n#include &lt;grpcpp/impl/codegen/call_hook.h&gt;\n#include &lt;grpcpp/impl/codegen/service_type.h&gt;\n#include &lt;grpcpp/impl/codegen/server_interface.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler_impl.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_method.h&gt;\n#include &lt;grpcpp/impl/codegen/async_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/create_auth_context.h&gt;\n#include &lt;grpcpp/impl/codegen/server_context.h&gt;\n#include &lt;grpcpp/impl/codegen/string_ref.h&gt;\n#include &lt;grpcpp/impl/codegen/sync_stream.h&gt;\n#include &lt;grpcpp/impl/codegen/byte_buffer.h&gt;\n#include &lt;grpcpp/impl/codegen/grpc_library.h&gt;\n#include &lt;grpcpp/impl/codegen/interceptor_common.h&gt;\n#include &lt;grpcpp/impl/codegen/client_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/serialization_traits.h&gt;\n#include &lt;grpcpp/impl/codegen/completion_queue.h&gt;\n#include &lt;grpcpp/impl/codegen/status.h&gt;\n#include &lt;grpcpp/impl/codegen/callback_common.h&gt;\n#include &lt;grpcpp/impl/codegen/rpc_service_method.h&gt;\n#include &lt;grpcpp/impl/codegen/server_callback.h&gt;\n#include &lt;grpcpp/impl/codegen/client_unary_call.h&gt;\n#include &lt;grpcpp/impl/codegen/method_handler.h&gt;\n#include &lt;grpcpp/impl/codegen/security/auth_context.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/grpc/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:31:47.</p>"},{"location":"packages/v1_50_1/openssl/","title":"openssl/1.1.1s","text":""},{"location":"packages/v1_50_1/openssl/#using-the-openssl-conan-package","title":"Using the openssl Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate openssl in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#using-openssl-with-cmake","title":"Using openssl with CMake","text":""},{"location":"packages/v1_50_1/openssl/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use openssl in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..c\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global openssl::openssl CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(openssl_project C)\n\nfind_package(OpenSSL)\n\nadd_executable(${PROJECT_NAME} src/main.c)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} openssl::openssl)\n</code></pre> <p></p> <p>To install openssl/1.1.1s, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the openssl Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the openssl crypto component, through the OpenSSL::Crypto target.</p> <pre><code>...\n# Link just to openssl crypto component\ntarget_link_libraries(${PROJECT_NAME} OpenSSL::Crypto)\n</code></pre> <p></p> <p>To check all the available components for openssl Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_50_1/openssl/#libcmakeconan-official-openssl-variablescmake","title":"lib/cmake/conan-official-openssl-variables.cmake","text":"<pre><code>set(OPENSSL_FOUND TRUE)\nif(DEFINED OpenSSL_INCLUDE_DIR)\nset(OPENSSL_INCLUDE_DIR ${OpenSSL_INCLUDE_DIR})\nendif()\nif(DEFINED OpenSSL_Crypto_LIBS)\nset(OPENSSL_CRYPTO_LIBRARY ${OpenSSL_Crypto_LIBS})\nset(OPENSSL_CRYPTO_LIBRARIES ${OpenSSL_Crypto_LIBS}\n${OpenSSL_Crypto_DEPENDENCIES}\n${OpenSSL_Crypto_FRAMEWORKS}\n${OpenSSL_Crypto_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_Crypto_LIBS_RELEASE)\nset(OPENSSL_CRYPTO_LIBRARY ${openssl_OpenSSL_Crypto_LIBS_RELEASE})\nset(OPENSSL_CRYPTO_LIBRARIES ${openssl_OpenSSL_Crypto_LIBS_RELEASE}\n${openssl_OpenSSL_Crypto_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_Crypto_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_Crypto_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_SSL_LIBS)\nset(OPENSSL_SSL_LIBRARY ${OpenSSL_SSL_LIBS})\nset(OPENSSL_SSL_LIBRARIES ${OpenSSL_SSL_LIBS}\n${OpenSSL_SSL_DEPENDENCIES}\n${OpenSSL_SSL_FRAMEWORKS}\n${OpenSSL_SSL_SYSTEM_LIBS})\nelseif(DEFINED openssl_OpenSSL_SSL_LIBS_RELEASE)\nset(OPENSSL_SSL_LIBRARY ${openssl_OpenSSL_SSL_LIBS_RELEASE})\nset(OPENSSL_SSL_LIBRARIES ${openssl_OpenSSL_SSL_LIBS_RELEASE}\n${openssl_OpenSSL_SSL_DEPENDENCIES_RELEASE}\n${openssl_OpenSSL_SSL_FRAMEWORKS_RELEASE}\n${openssl_OpenSSL_SSL_SYSTEM_LIBS_RELEASE})\nendif()\nif(DEFINED OpenSSL_LIBRARIES)\nset(OPENSSL_LIBRARIES ${OpenSSL_LIBRARIES})\nendif()\nif(DEFINED OpenSSL_VERSION)\nset(OPENSSL_VERSION ${OpenSSL_VERSION})\nendif()\n</code></pre>"},{"location":"packages/v1_50_1/openssl/#using-openssl-with-visual-studio","title":"Using openssl with Visual Studio","text":""},{"location":"packages/v1_50_1/openssl/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#using-openssl-with-autotools-and-pkg-config","title":"Using openssl with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/openssl/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the openssl library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your openssl dependency like:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/openssl/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the openssl.pc file (and the ones corresponding to openssl dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nopenssl/1.1.1s\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags openssl)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l openssl)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other openssl)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the openssl Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for openssl Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#declared-components-for-openssl","title":"Declared components for openssl","text":"<p>These are all the declared components for the openssl Conan package: * Component crypto:   * CMake target name: <code>OpenSSL::Crypto</code>   * pkg-config .pc file: libcrypto.pc   * Links to libraries: crypto   * Systems libs: dl, rt, pthread * Component ssl:   * CMake target name: <code>OpenSSL::SSL</code>   * pkg-config .pc file: libssl.pc   * Requires other components: crypto   * Links to libraries: ssl   * Systems libs: dl, pthread</p> <p></p>"},{"location":"packages/v1_50_1/openssl/#exposed-header-files-for-openssl","title":"Exposed header files for openssl","text":"<pre><code>#include &lt;openssl/e_os2.h&gt;\n#include &lt;openssl/dsaerr.h&gt;\n#include &lt;openssl/opensslconf.h&gt;\n#include &lt;openssl/conf.h&gt;\n#include &lt;openssl/crypto.h&gt;\n#include &lt;openssl/x509err.h&gt;\n#include &lt;openssl/asn1.h&gt;\n#include &lt;openssl/lhash.h&gt;\n#include &lt;openssl/des.h&gt;\n#include &lt;openssl/ocsperr.h&gt;\n#include &lt;openssl/rand_drbg.h&gt;\n#include &lt;openssl/randerr.h&gt;\n#include &lt;openssl/cmserr.h&gt;\n#include &lt;openssl/rc4.h&gt;\n#include &lt;openssl/idea.h&gt;\n#include &lt;openssl/pem.h&gt;\n#include &lt;openssl/conf_api.h&gt;\n#include &lt;openssl/err.h&gt;\n#include &lt;openssl/pkcs12err.h&gt;\n#include &lt;openssl/pemerr.h&gt;\n#include &lt;openssl/buffer.h&gt;\n#include &lt;openssl/obj_mac.h&gt;\n#include &lt;openssl/x509_vfy.h&gt;\n#include &lt;openssl/rc5.h&gt;\n#include &lt;openssl/md5.h&gt;\n#include &lt;openssl/stack.h&gt;\n#include &lt;openssl/ssl3.h&gt;\n#include &lt;openssl/bio.h&gt;\n#include &lt;openssl/ossl_typ.h&gt;\n#include &lt;openssl/aes.h&gt;\n#include &lt;openssl/modes.h&gt;\n#include &lt;openssl/dh.h&gt;\n#include &lt;openssl/rsa.h&gt;\n#include &lt;openssl/comp.h&gt;\n#include &lt;openssl/asn1_mac.h&gt;\n#include &lt;openssl/cast.h&gt;\n#include &lt;openssl/ssl2.h&gt;\n#include &lt;openssl/sslerr.h&gt;\n#include &lt;openssl/safestack.h&gt;\n#include &lt;openssl/hmac.h&gt;\n#include &lt;openssl/symhacks.h&gt;\n#include &lt;openssl/ssl.h&gt;\n#include &lt;openssl/kdferr.h&gt;\n#include &lt;openssl/bn.h&gt;\n#include &lt;openssl/srp.h&gt;\n#include &lt;openssl/buffererr.h&gt;\n#include &lt;openssl/dsa.h&gt;\n#include &lt;openssl/ecerr.h&gt;\n#include &lt;openssl/ui.h&gt;\n#include &lt;openssl/comperr.h&gt;\n#include &lt;openssl/engineerr.h&gt;\n#include &lt;openssl/store.h&gt;\n#include &lt;openssl/rand.h&gt;\n#include &lt;openssl/pkcs12.h&gt;\n#include &lt;openssl/ocsp.h&gt;\n#include &lt;openssl/pem2.h&gt;\n#include &lt;openssl/pkcs7.h&gt;\n#include &lt;openssl/async.h&gt;\n#include &lt;openssl/cterr.h&gt;\n#include &lt;openssl/asyncerr.h&gt;\n#include &lt;openssl/bnerr.h&gt;\n#include &lt;openssl/objects.h&gt;\n#include &lt;openssl/cryptoerr.h&gt;\n#include &lt;openssl/opensslv.h&gt;\n#include &lt;openssl/x509v3.h&gt;\n#include &lt;openssl/tls1.h&gt;\n#include &lt;openssl/asn1err.h&gt;\n#include &lt;openssl/dtls1.h&gt;\n#include &lt;openssl/pkcs7err.h&gt;\n#include &lt;openssl/rc2.h&gt;\n#include &lt;openssl/md4.h&gt;\n#include &lt;openssl/ts.h&gt;\n#include &lt;openssl/kdf.h&gt;\n#include &lt;openssl/txt_db.h&gt;\n#include &lt;openssl/ebcdic.h&gt;\n#include &lt;openssl/evp.h&gt;\n#include &lt;openssl/md2.h&gt;\n#include &lt;openssl/ec.h&gt;\n#include &lt;openssl/ecdh.h&gt;\n#include &lt;openssl/objectserr.h&gt;\n#include &lt;openssl/uierr.h&gt;\n#include &lt;openssl/dherr.h&gt;\n#include &lt;openssl/bioerr.h&gt;\n#include &lt;openssl/evperr.h&gt;\n#include &lt;openssl/x509.h&gt;\n#include &lt;openssl/camellia.h&gt;\n#include &lt;openssl/rsaerr.h&gt;\n#include &lt;openssl/mdc2.h&gt;\n#include &lt;openssl/cmac.h&gt;\n#include &lt;openssl/seed.h&gt;\n#include &lt;openssl/tserr.h&gt;\n#include &lt;openssl/engine.h&gt;\n#include &lt;openssl/blowfish.h&gt;\n#include &lt;openssl/conferr.h&gt;\n#include &lt;openssl/storeerr.h&gt;\n#include &lt;openssl/cms.h&gt;\n#include &lt;openssl/asn1t.h&gt;\n#include &lt;openssl/sha.h&gt;\n#include &lt;openssl/whrlpool.h&gt;\n#include &lt;openssl/srtp.h&gt;\n#include &lt;openssl/ecdsa.h&gt;\n#include &lt;openssl/ct.h&gt;\n#include &lt;openssl/x509v3err.h&gt;\n#include &lt;openssl/ripemd.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/openssl/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/protobuf/","title":"protobuf/3.21.4","text":""},{"location":"packages/v1_50_1/protobuf/#protobuf3214-dependencies","title":"protobuf/3.21.4 dependencies","text":"<ul> <li>zlib/1.2.13</li> </ul>"},{"location":"packages/v1_50_1/protobuf/#using-the-protobuf-conan-package","title":"Using the protobuf Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate protobuf in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#using-protobuf-with-cmake","title":"Using protobuf with CMake","text":""},{"location":"packages/v1_50_1/protobuf/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use protobuf in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global protobuf::protobuf CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(protobuf_project CXX)\n\nfind_package(protobuf)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} protobuf::protobuf)\n</code></pre> <p></p> <p>To install protobuf/3.21.4, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p> <p>As the protobuf Conan package defines components, you can link only the desired parts of the library in your project. For example, linking only with the protobuf libprotobuf component, through the protobuf::libprotobuf target.</p> <pre><code>...\n# Link just to protobuf libprotobuf component\ntarget_link_libraries(${PROJECT_NAME} protobuf::libprotobuf)\n</code></pre> <p></p> <p>To check all the available components for protobuf Conan package, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#declared-cmake-build-modules","title":"Declared CMake build modules","text":""},{"location":"packages/v1_50_1/protobuf/#libcmakeprotobufprotobuf-generatecmake","title":"lib/cmake/protobuf/protobuf-generate.cmake","text":"<pre><code># User options\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-options.cmake\")\n\n# Depend packages\n# BEGIN CONAN PATCH\n#_protobuf_FIND_ZLIB@\n# END CONAN PATCH\n\n# Imported targets\nif(NOT TARGET protobuf::protoc)\nif(CMAKE_CROSSCOMPILING)\nfind_program(PROTOC_PROGRAM protoc PATHS ENV PATH NO_DEFAULT_PATH)\nendif()\nif(NOT PROTOC_PROGRAM)\nset(PROTOC_PROGRAM \"${CMAKE_CURRENT_LIST_DIR}/../../../bin/protoc\")\nendif()\nget_filename_component(PROTOC_PROGRAM \"${PROTOC_PROGRAM}\" ABSOLUTE)\nset(Protobuf_PROTOC_EXECUTABLE ${PROTOC_PROGRAM} CACHE FILEPATH \"The protoc compiler\")\nadd_executable(protobuf::protoc IMPORTED)\nset_property(TARGET protobuf::protoc PROPERTY IMPORTED_LOCATION ${Protobuf_PROTOC_EXECUTABLE})\nendif()\n\n\nfunction(protobuf_generate)\ninclude(CMakeParseArguments)\n\nset(_options APPEND_PATH)\nset(_singleargs LANGUAGE OUT_VAR EXPORT_MACRO PROTOC_OUT_DIR PLUGIN PLUGIN_OPTIONS)\nif(COMMAND target_sources)\nlist(APPEND _singleargs TARGET)\nendif()\nset(_multiargs PROTOS IMPORT_DIRS GENERATE_EXTENSIONS PROTOC_OPTIONS)\n\ncmake_parse_arguments(protobuf_generate \"${_options}\" \"${_singleargs}\" \"${_multiargs}\" \"${ARGN}\")\n\nif(NOT protobuf_generate_PROTOS AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without any targets or source files\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_OUT_VAR AND NOT protobuf_generate_TARGET)\nmessage(SEND_ERROR \"Error: protobuf_generate called without a target or output variable\")\nreturn()\nendif()\n\nif(NOT protobuf_generate_LANGUAGE)\nset(protobuf_generate_LANGUAGE cpp)\nendif()\nstring(TOLOWER ${protobuf_generate_LANGUAGE} protobuf_generate_LANGUAGE)\n\nif(NOT protobuf_generate_PROTOC_OUT_DIR)\nset(protobuf_generate_PROTOC_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR})\nendif()\n\nif(protobuf_generate_EXPORT_MACRO AND protobuf_generate_LANGUAGE STREQUAL cpp)\nset(_dll_export_decl \"dllexport_decl=${protobuf_generate_EXPORT_MACRO}\")\nendif()\n\nforeach(_option ${_dll_export_decl} ${protobuf_generate_PLUGIN_OPTIONS})\n# append comma - not using CMake lists and string replacement as users\n# might have semicolons in options\nif(_plugin_options)\nset( _plugin_options \"${_plugin_options},\")\nendif()\nset(_plugin_options \"${_plugin_options}${_option}\")\nendforeach()\n\nif(protobuf_generate_PLUGIN)\nset(_plugin \"--plugin=${protobuf_generate_PLUGIN}\")\nendif()\n\nif(NOT protobuf_generate_GENERATE_EXTENSIONS)\nif(protobuf_generate_LANGUAGE STREQUAL cpp)\nset(protobuf_generate_GENERATE_EXTENSIONS .pb.h .pb.cc)\nelseif(protobuf_generate_LANGUAGE STREQUAL python)\nset(protobuf_generate_GENERATE_EXTENSIONS _pb2.py)\nelse()\nmessage(SEND_ERROR \"Error: protobuf_generate given unknown Language ${LANGUAGE}, please provide a value for GENERATE_EXTENSIONS\")\nreturn()\nendif()\nendif()\n\nif(protobuf_generate_TARGET)\nget_target_property(_source_list ${protobuf_generate_TARGET} SOURCES)\nforeach(_file ${_source_list})\nif(_file MATCHES \"proto$\")\nlist(APPEND protobuf_generate_PROTOS ${_file})\nendif()\nendforeach()\nendif()\n\nif(NOT protobuf_generate_PROTOS)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any .proto files\")\nreturn()\nendif()\n\nif(protobuf_generate_APPEND_PATH)\n# Create an include path for each file specified\nforeach(_file ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_file} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\nlist(FIND _protobuf_include_path ${_abs_dir} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${_abs_dir})\nendif()\nendforeach()\nendif()\n\nforeach(DIR ${protobuf_generate_IMPORT_DIRS})\nget_filename_component(ABS_PATH ${DIR} ABSOLUTE)\nlist(FIND _protobuf_include_path ${ABS_PATH} _contains_already)\nif(${_contains_already} EQUAL -1)\nlist(APPEND _protobuf_include_path -I ${ABS_PATH})\nendif()\nendforeach()\n\nif(NOT _protobuf_include_path)\nset(_protobuf_include_path -I ${CMAKE_CURRENT_SOURCE_DIR})\nendif()\n\nset(_generated_srcs_all)\nforeach(_proto ${protobuf_generate_PROTOS})\nget_filename_component(_abs_file ${_proto} ABSOLUTE)\nget_filename_component(_abs_dir ${_abs_file} DIRECTORY)\n\nget_filename_component(_file_full_name ${_proto} NAME)\nstring(FIND \"${_file_full_name}\" \".\" _file_last_ext_pos REVERSE)\nstring(SUBSTRING \"${_file_full_name}\" 0 ${_file_last_ext_pos} _basename)\n\nset(_suitable_include_found FALSE)\nforeach(DIR ${_protobuf_include_path})\nif(NOT DIR STREQUAL \"-I\")\nfile(RELATIVE_PATH _rel_dir ${DIR} ${_abs_dir})\nstring(FIND \"${_rel_dir}\" \"../\" _is_in_parent_folder)\nif (NOT ${_is_in_parent_folder} EQUAL 0)\nset(_suitable_include_found TRUE)\nbreak()\nendif()\nendif()\nendforeach()\n\nif(NOT _suitable_include_found)\nmessage(SEND_ERROR \"Error: protobuf_generate could not find any correct proto include directory.\")\nreturn()\nendif()\n\nset(_generated_srcs)\nforeach(_ext ${protobuf_generate_GENERATE_EXTENSIONS})\nlist(APPEND _generated_srcs \"${protobuf_generate_PROTOC_OUT_DIR}/${_rel_dir}/${_basename}${_ext}\")\nendforeach()\nlist(APPEND _generated_srcs_all ${_generated_srcs})\n\nset(_comment \"Running ${protobuf_generate_LANGUAGE} protocol buffer compiler on ${_proto}\")\nif(protobuf_generate_PROTOC_OPTIONS)\nset(_comment \"${_comment}, protoc-options: ${protobuf_generate_PROTOC_OPTIONS}\")\nendif()\nif(_plugin_options)\nset(_comment \"${_comment}, plugin-options: ${_plugin_options}\")\nendif()\n\nadd_custom_command(\nOUTPUT ${_generated_srcs}\nCOMMAND protobuf::protoc\nARGS ${protobuf_generate_PROTOC_OPTIONS} --${protobuf_generate_LANGUAGE}_out ${_plugin_options}:${protobuf_generate_PROTOC_OUT_DIR} ${_plugin} ${_protobuf_include_path} ${_abs_file}\nDEPENDS ${_abs_file} protobuf::protoc\nCOMMENT ${_comment}\nVERBATIM )\nendforeach()\n\nset_source_files_properties(${_generated_srcs_all} PROPERTIES GENERATED TRUE)\nif(protobuf_generate_OUT_VAR)\nset(${protobuf_generate_OUT_VAR} ${_generated_srcs_all} PARENT_SCOPE)\nendif()\nif(protobuf_generate_TARGET)\ntarget_sources(${protobuf_generate_TARGET} PRIVATE ${_generated_srcs_all})\nendif()\n\nendfunction()\n\n# CMake FindProtobuf module compatible file\nif(protobuf_MODULE_COMPATIBLE)\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/protobuf-module.cmake\")\nendif()\n\n```#### lib/cmake/protobuf/protobuf-module.cmake\n```cmake\n# This file contains backwards compatibility patches for various legacy functions and variables\n# Functions\n\nfunction(PROTOBUF_GENERATE_CPP SRCS HDRS)\ncmake_parse_arguments(protobuf_generate_cpp \"\" \"EXPORT_MACRO\" \"\" ${ARGN})\n\nset(_proto_files \"${protobuf_generate_cpp_UNPARSED_ARGUMENTS}\")\nif(NOT _proto_files)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_CPP() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE cpp EXPORT_MACRO ${protobuf_generate_cpp_EXPORT_MACRO} OUT_VAR _outvar ${_import_arg} PROTOS ${_proto_files})\n\nset(${SRCS})\nset(${HDRS})\nforeach(_file ${_outvar})\nif(_file MATCHES \"cc$\")\nlist(APPEND ${SRCS} ${_file})\nelse()\nlist(APPEND ${HDRS} ${_file})\nendif()\nendforeach()\nset(${SRCS} ${${SRCS}} PARENT_SCOPE)\nset(${HDRS} ${${HDRS}} PARENT_SCOPE)\nendfunction()\n\nfunction(PROTOBUF_GENERATE_PYTHON SRCS)\nif(NOT ARGN)\nmessage(SEND_ERROR \"Error: PROTOBUF_GENERATE_PYTHON() called without any proto files\")\nreturn()\nendif()\n\nif(PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(_append_arg APPEND_PATH)\nendif()\n\nif(DEFINED Protobuf_IMPORT_DIRS)\nset(_import_arg IMPORT_DIRS ${Protobuf_IMPORT_DIRS})\nendif()\n\nset(_outvar)\nprotobuf_generate(${_append_arg} LANGUAGE python OUT_VAR _outvar ${_import_arg} PROTOS ${ARGN})\nset(${SRCS} ${_outvar} PARENT_SCOPE)\nendfunction()\n\n# Environment\n\n# Backwards compatibility\n# Define camel case versions of input variables\nforeach(UPPER\nPROTOBUF_SRC_ROOT_FOLDER\nPROTOBUF_IMPORT_DIRS\nPROTOBUF_DEBUG\nPROTOBUF_LIBRARY\nPROTOBUF_PROTOC_LIBRARY\nPROTOBUF_INCLUDE_DIR\nPROTOBUF_PROTOC_EXECUTABLE\nPROTOBUF_LIBRARY_DEBUG\nPROTOBUF_PROTOC_LIBRARY_DEBUG\nPROTOBUF_LITE_LIBRARY\nPROTOBUF_LITE_LIBRARY_DEBUG\n)\nif (DEFINED ${UPPER})\nstring(REPLACE \"PROTOBUF_\" \"Protobuf_\" Camel ${UPPER})\nif (NOT DEFINED ${Camel})\nset(${Camel} ${${UPPER}})\nendif()\nendif()\nendforeach()\n\nif(0)\nif(DEFINED Protobuf_SRC_ROOT_FOLDER)\nmessage(AUTHOR_WARNING \"Variable Protobuf_SRC_ROOT_FOLDER defined, but not\"\n\" used in CONFIG mode\")\nendif()\n\ninclude(SelectLibraryConfigurations)\n\n# Internal function: search for normal library as well as a debug one\n#    if the debug one is specified also include debug/optimized keywords\n#    in *_LIBRARIES variable\nfunction(_protobuf_find_libraries name filename)\nif(${name}_LIBRARIES)\n# Use result recorded by a previous call.\nelseif(${name}_LIBRARY)\n# Honor cache entry used by CMake 3.5 and lower.\nset(${name}_LIBRARIES \"${${name}_LIBRARY}\" PARENT_SCOPE)\nelseif(TARGET protobuf::lib${filename})\nget_target_property(${name}_LIBRARY_RELEASE protobuf::lib${filename}\nLOCATION_RELEASE)\nget_target_property(${name}_LIBRARY_RELWITHDEBINFO protobuf::lib${filename}\nLOCATION_RELWITHDEBINFO)\nget_target_property(${name}_LIBRARY_MINSIZEREL protobuf::lib${filename}\nLOCATION_MINSIZEREL)\nget_target_property(${name}_LIBRARY_DEBUG protobuf::lib${filename}\nLOCATION_DEBUG)\n\nselect_library_configurations(${name})\nset(${name}_LIBRARY ${${name}_LIBRARY} PARENT_SCOPE)\nset(${name}_LIBRARIES ${${name}_LIBRARIES} PARENT_SCOPE)\nendif()\nendfunction()\n\n#\n# Main.\n#\n\n# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n# for each directory where a proto file is referenced.\nif(NOT DEFINED PROTOBUF_GENERATE_CPP_APPEND_PATH)\nset(PROTOBUF_GENERATE_CPP_APPEND_PATH TRUE)\nendif()\n\n# The Protobuf library\n_protobuf_find_libraries(Protobuf protobuf)\n\n# The Protobuf Lite library\n_protobuf_find_libraries(Protobuf_LITE protobuf-lite)\n\n# The Protobuf Protoc Library\n_protobuf_find_libraries(Protobuf_PROTOC protoc)\n\n# Set the include directory\nget_target_property(Protobuf_INCLUDE_DIRS protobuf::libprotobuf\nINTERFACE_INCLUDE_DIRECTORIES)\n\n# Set the protoc Executable\nif(NOT Protobuf_PROTOC_EXECUTABLE AND TARGET protobuf::protoc)\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELEASE)\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_RELWITHDEBINFO)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_MINSIZEREL)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_DEBUG)\nendif()\nif(NOT EXISTS \"${Protobuf_PROTOC_EXECUTABLE}\")\nget_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc\nIMPORTED_LOCATION_NOCONFIG)\nendif()\nendif()\n\n# Version info variable\nset(Protobuf_VERSION \"3.21.4.0\")\n\ninclude(FindPackageHandleStandardArgs)\nFIND_PACKAGE_HANDLE_STANDARD_ARGS(Protobuf\nREQUIRED_VARS Protobuf_PROTOC_EXECUTABLE Protobuf_LIBRARIES Protobuf_INCLUDE_DIRS\nVERSION_VAR Protobuf_VERSION\n)\n\n# Backwards compatibility\nendif()\nforeach(Camel\nProtobuf_VERSION\nProtobuf_SRC_ROOT_FOLDER\nProtobuf_IMPORT_DIRS\nProtobuf_DEBUG\nProtobuf_INCLUDE_DIRS\nProtobuf_LIBRARIES\nProtobuf_PROTOC_LIBRARIES\nProtobuf_LITE_LIBRARIES\nProtobuf_LIBRARY\nProtobuf_PROTOC_LIBRARY\nProtobuf_INCLUDE_DIR\nProtobuf_PROTOC_EXECUTABLE\nProtobuf_LIBRARY_DEBUG\nProtobuf_PROTOC_LIBRARY_DEBUG\nProtobuf_LITE_LIBRARY\nProtobuf_LITE_LIBRARY_DEBUG\n)\nstring(TOUPPER ${Camel} UPPER)\nset(${UPPER} ${${Camel}})\nendforeach()\n\n```#### lib/cmake/protobuf/protobuf-options.cmake\n```cmake\n# Verbose output\noption(protobuf_VERBOSE \"Enable for verbose output\" OFF)\nmark_as_advanced(protobuf_VERBOSE)\n\n# FindProtobuf module compatible\noption(protobuf_MODULE_COMPATIBLE \"CMake built-in FindProtobuf.cmake module compatible\" OFF)\nmark_as_advanced(protobuf_MODULE_COMPATIBLE)\n</code></pre>"},{"location":"packages/v1_50_1/protobuf/#using-protobuf-with-visual-studio","title":"Using protobuf with Visual Studio","text":""},{"location":"packages/v1_50_1/protobuf/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#using-protobuf-with-autotools-and-pkg-config","title":"Using protobuf with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/protobuf/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the protobuf library and its dependencies  ( zlib) are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your protobuf dependency like:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/protobuf/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the protobuf_full_package.pc file (and the ones corresponding to protobuf dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nprotobuf/3.21.4\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags protobuf)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l protobuf)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other protobuf)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p> <p>As the protobuf Conan package defines components you can use them to link only that desired part of the library in your project.  To check all the available components for protobuf Conan package, and the corresponding .pc files names, please check the dedicated section at the end of this document.</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#declared-components-for-protobuf","title":"Declared components for protobuf","text":"<p>These are all the declared components for the protobuf Conan package: * Component libprotobuf:   * CMake target name: <code>protobuf::libprotobuf</code>   * pkg-config .pc file: protobuf.pc   * Requires other components: zlib::zlib   * Links to libraries: protobuf   * Systems libs: pthread, atomic * Component libprotoc:   * CMake target name: <code>protobuf::libprotoc</code>   * pkg-config .pc file: protobuf_full_package-libprotoc.pc   * Requires other components: libprotobuf   * Links to libraries: protoc</p> <p></p>"},{"location":"packages/v1_50_1/protobuf/#exposed-header-files-for-protobuf","title":"Exposed header files for protobuf","text":"<pre><code>#include &lt;google/protobuf/api.pb.h&gt;\n#include &lt;google/protobuf/field_mask.pb.h&gt;\n#include &lt;google/protobuf/generated_message_util.h&gt;\n#include &lt;google/protobuf/implicit_weak_message.h&gt;\n#include &lt;google/protobuf/any.pb.h&gt;\n#include &lt;google/protobuf/type.proto&gt;\n#include &lt;google/protobuf/text_format.h&gt;\n#include &lt;google/protobuf/descriptor.h&gt;\n#include &lt;google/protobuf/map_field.h&gt;\n#include &lt;google/protobuf/map_field_inl.h&gt;\n#include &lt;google/protobuf/arenaz_sampler.h&gt;\n#include &lt;google/protobuf/type.pb.h&gt;\n#include &lt;google/protobuf/extension_set_inl.h&gt;\n#include &lt;google/protobuf/timestamp.proto&gt;\n#include &lt;google/protobuf/struct.proto&gt;\n#include &lt;google/protobuf/duration.proto&gt;\n#include &lt;google/protobuf/arenastring.h&gt;\n#include &lt;google/protobuf/message.h&gt;\n#include &lt;google/protobuf/arena_impl.h&gt;\n#include &lt;google/protobuf/has_bits.h&gt;\n#include &lt;google/protobuf/metadata.h&gt;\n#include &lt;google/protobuf/empty.pb.h&gt;\n#include &lt;google/protobuf/map_entry.h&gt;\n#include &lt;google/protobuf/field_mask.proto&gt;\n#include &lt;google/protobuf/descriptor_database.h&gt;\n#include &lt;google/protobuf/wire_format_lite.h&gt;\n#include &lt;google/protobuf/wrappers.proto&gt;\n#include &lt;google/protobuf/struct.pb.h&gt;\n#include &lt;google/protobuf/any.proto&gt;\n#include &lt;google/protobuf/port.h&gt;\n#include &lt;google/protobuf/repeated_ptr_field.h&gt;\n#include &lt;google/protobuf/endian.h&gt;\n#include &lt;google/protobuf/generated_message_tctable_decl.h&gt;\n#include &lt;google/protobuf/generated_message_reflection.h&gt;\n#include &lt;google/protobuf/map_entry_lite.h&gt;\n#include &lt;google/protobuf/reflection_ops.h&gt;\n#include &lt;google/protobuf/metadata_lite.h&gt;\n#include &lt;google/protobuf/repeated_field.h&gt;\n#include &lt;google/protobuf/wire_format.h&gt;\n#include &lt;google/protobuf/field_access_listener.h&gt;\n#include &lt;google/protobuf/service.h&gt;\n#include &lt;google/protobuf/duration.pb.h&gt;\n#include &lt;google/protobuf/port_def.inc&gt;\n#include &lt;google/protobuf/dynamic_message.h&gt;\n#include &lt;google/protobuf/generated_enum_util.h&gt;\n#include &lt;google/protobuf/explicitly_constructed.h&gt;\n#include &lt;google/protobuf/api.proto&gt;\n#include &lt;google/protobuf/message_lite.h&gt;\n#include &lt;google/protobuf/generated_enum_reflection.h&gt;\n#include &lt;google/protobuf/map_type_handler.h&gt;\n#include &lt;google/protobuf/unknown_field_set.h&gt;\n#include &lt;google/protobuf/map_field_lite.h&gt;\n#include &lt;google/protobuf/timestamp.pb.h&gt;\n#include &lt;google/protobuf/descriptor.pb.h&gt;\n#include &lt;google/protobuf/empty.proto&gt;\n#include &lt;google/protobuf/generated_message_tctable_impl.h&gt;\n#include &lt;google/protobuf/reflection.h&gt;\n#include &lt;google/protobuf/descriptor.proto&gt;\n#include &lt;google/protobuf/wrappers.pb.h&gt;\n#include &lt;google/protobuf/parse_context.h&gt;\n#include &lt;google/protobuf/map.h&gt;\n#include &lt;google/protobuf/generated_message_bases.h&gt;\n#include &lt;google/protobuf/arena.h&gt;\n#include &lt;google/protobuf/port_undef.inc&gt;\n#include &lt;google/protobuf/source_context.proto&gt;\n#include &lt;google/protobuf/extension_set.h&gt;\n#include &lt;google/protobuf/inlined_string_field.h&gt;\n#include &lt;google/protobuf/source_context.pb.h&gt;\n#include &lt;google/protobuf/any.h&gt;\n#include &lt;google/protobuf/util/type_resolver.h&gt;\n#include &lt;google/protobuf/util/time_util.h&gt;\n#include &lt;google/protobuf/util/message_differencer.h&gt;\n#include &lt;google/protobuf/util/json_util.h&gt;\n#include &lt;google/protobuf/util/field_comparator.h&gt;\n#include &lt;google/protobuf/util/delimited_message_util.h&gt;\n#include &lt;google/protobuf/util/field_mask_util.h&gt;\n#include &lt;google/protobuf/util/type_resolver_util.h&gt;\n#include &lt;google/protobuf/stubs/macros.h&gt;\n#include &lt;google/protobuf/stubs/hash.h&gt;\n#include &lt;google/protobuf/stubs/bytestream.h&gt;\n#include &lt;google/protobuf/stubs/once.h&gt;\n#include &lt;google/protobuf/stubs/template_util.h&gt;\n#include &lt;google/protobuf/stubs/common.h&gt;\n#include &lt;google/protobuf/stubs/logging.h&gt;\n#include &lt;google/protobuf/stubs/port.h&gt;\n#include &lt;google/protobuf/stubs/callback.h&gt;\n#include &lt;google/protobuf/stubs/mutex.h&gt;\n#include &lt;google/protobuf/stubs/platform_macros.h&gt;\n#include &lt;google/protobuf/stubs/map_util.h&gt;\n#include &lt;google/protobuf/stubs/casts.h&gt;\n#include &lt;google/protobuf/stubs/stringpiece.h&gt;\n#include &lt;google/protobuf/stubs/status.h&gt;\n#include &lt;google/protobuf/stubs/stl_util.h&gt;\n#include &lt;google/protobuf/stubs/strutil.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl_lite.h&gt;\n#include &lt;google/protobuf/io/printer.h&gt;\n#include &lt;google/protobuf/io/gzip_stream.h&gt;\n#include &lt;google/protobuf/io/strtod.h&gt;\n#include &lt;google/protobuf/io/coded_stream.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream.h&gt;\n#include &lt;google/protobuf/io/tokenizer.h&gt;\n#include &lt;google/protobuf/io/zero_copy_stream_impl.h&gt;\n#include &lt;google/protobuf/io/io_win32.h&gt;\n#include &lt;google/protobuf/compiler/plugin.h&gt;\n#include &lt;google/protobuf/compiler/command_line_interface.h&gt;\n#include &lt;google/protobuf/compiler/importer.h&gt;\n#include &lt;google/protobuf/compiler/code_generator.h&gt;\n#include &lt;google/protobuf/compiler/parser.h&gt;\n#include &lt;google/protobuf/compiler/plugin.proto&gt;\n#include &lt;google/protobuf/compiler/plugin.pb.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_names.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_generator.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_doc_comment.h&gt;\n#include &lt;google/protobuf/compiler/csharp/csharp_options.h&gt;\n#include &lt;google/protobuf/compiler/php/php_generator.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_helpers.h&gt;\n#include &lt;google/protobuf/compiler/objectivec/objectivec_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/cpp_generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/generator.h&gt;\n#include &lt;google/protobuf/compiler/cpp/names.h&gt;\n#include &lt;google/protobuf/compiler/cpp/helpers.h&gt;\n#include &lt;google/protobuf/compiler/cpp/file.h&gt;\n#include &lt;google/protobuf/compiler/java/generator.h&gt;\n#include &lt;google/protobuf/compiler/java/kotlin_generator.h&gt;\n#include &lt;google/protobuf/compiler/java/names.h&gt;\n#include &lt;google/protobuf/compiler/java/java_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/generator.h&gt;\n#include &lt;google/protobuf/compiler/python/python_generator.h&gt;\n#include &lt;google/protobuf/compiler/python/pyi_generator.h&gt;\n#include &lt;google/protobuf/compiler/ruby/ruby_generator.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/protobuf/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"},{"location":"packages/v1_50_1/re2/","title":"re2/20220601","text":""},{"location":"packages/v1_50_1/re2/#using-the-re2-conan-package","title":"Using the re2 Conan Package","text":"<p>Conan integrates with different build systems. You can declare which build system you want your project to use setting in the [generators] section of the conanfile.txt or using the generators attribute in the conanfile.py. Here, there is some basic information you can use to integrate re2 in your own project. For more detailed information, please check the Conan documentation.</p> <p></p>"},{"location":"packages/v1_50_1/re2/#using-re2-with-cmake","title":"Using re2 with CMake","text":""},{"location":"packages/v1_50_1/re2/#conan-cmake-generators","title":"Conan CMake generators","text":"<ul> <li> <p>CMakeDeps: generates information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. CMake will use this files when you invoke <code>find_package()</code> in your CMakeLists.txt.</p> </li> <li> <p>CMakeToolchain: generates a CMake toolchain file that you can later invoke with CMake in the command line using <code>-DCMAKE_TOOLCHAIN_FILE=conantoolchain.cmake</code>.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nCMakeDeps\nCMakeToolchain\n</code></pre> <p></p> <p>To use re2 in a simple CMake project with this structure:</p> <pre><code>.\n|-- CMakeLists.txt\n|-- conanfile.txt\n`-- src\n    `-- main..cpp\n</code></pre> <p></p> <p>Your CMakeLists.txt could look similar to this, using the global re2::re2 CMake's target:</p> <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(re2_project CXX)\n\nfind_package(re2)\n\nadd_executable(${PROJECT_NAME} src/main.cpp)\n\n# Use the global target\ntarget_link_libraries(${PROJECT_NAME} re2::re2)\n</code></pre> <p></p> <p>To install re2/20220601, its dependencies and build your project, you just have to do:</p> <pre><code># for Linux/macOS\n$ conan install . --install-folder cmake-build-release --build=missing\n$ cmake . -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release\n$ cmake --build .\n\n# for Windows and Visual Studio 2017\n$ conan install . --output-folder cmake-build --build=missing\n$ cmake . -G \"Visual Studio 15 2017\" -DCMAKE_TOOLCHAIN_FILE=cmake-build/conan_toolchain.cmake\n$ cmake --build . --config Release\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/re2/#using-re2-with-visual-studio","title":"Using re2 with Visual Studio","text":""},{"location":"packages/v1_50_1/re2/#visual-studio-conan-generators","title":"Visual Studio Conan generators","text":"<ul> <li> <p>MSBuildDeps: generates the conandeps.props properties file with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration.</p> </li> <li> <p>MSBuildToolchain: Generates the conantoolchain.props properties file with the current package configuration, settings, and options.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nMSBuildDeps\nMSBuildToolchain\n</code></pre> <p></p> <p>Please, check the Conan documentation for more detailed information on how to add these properties files to your Visual Studio projects.</p> <p></p>"},{"location":"packages/v1_50_1/re2/#using-re2-with-autotools-and-pkg-config","title":"Using re2 with Autotools and pkg-config","text":""},{"location":"packages/v1_50_1/re2/#autotools-conan-generators","title":"Autotools Conan generators","text":"<ul> <li> <p>AutotoolsToolchain: generates the conanautotoolstoolchain.sh/bat script translating information from the current package configuration, settings, and options setting some enviroment variables for Autotools like: <code>CPPFLAGS</code>, <code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>. It will also generate a <code>deactivate_conanautotoolstoolchain.sh/bat</code> so you can restore your environment.</p> </li> <li> <p>AutotoolsDeps: generates the conanautotoolsdeps.sh/bat script with information about where the re2 library and its dependencies  are installed together with other information like version, flags, and directory data or configuration. This is done setting some enviroment variables for Autotools like: <code>LIBS</code>, <code>CPPFLAGS</code>,<code>CXXFLAGS</code>, <code>CFLAGS</code> and <code>LDFLAGS</code>.  It will also generate a <code>deactivate_conanautotoolsdeps.sh/bat</code> so you can restore your environment.</p> </li> </ul> <p>Declare these generators in your conanfile.txt along with your re2 dependency like:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nAutotoolsDeps\n</code></pre> <p></p> <p>Then, building your project is as easy as:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n$ source conanautotoolsdeps.sh\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n$ source deactivate_conanautotoolsdeps.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/re2/#pkg-config-conan-generator","title":"pkg-config Conan generator","text":"<ul> <li>PkgConfigDeps: generates the re2.pc file (and the ones corresponding to re2 dependencies) with information about the dependencies that can be later used by the pkg-config tool pkg-config to collect data about the libraries Conan installed.</li> </ul> <p>You can use this generator instead of the AutotoolsDeps one:</p> <pre><code>[requires]\nre2/20220601\n\n[generators]\nAutotoolsToolchain\nPkgConfigDeps\n</code></pre> <p></p> <p>And then using pkg-config to set the environment variables you want, like:</p> <pre><code>$ conan install .\n# set the environment variables for Autotools\n$ source conanautotoolstoolchain.sh\n\n$ export CPPFLAGS=\"$CPPFLAGS $(pkg-config --cflags re2)\"\n$ export LIBS=\"$LIBS $(pkg-config --libs-only-l re2)\"\n$ export LDFLAGS=\"$LDFLAGS $(pkg-config --libs-only-L --libs-only-other re2)\"\n\n$ ./configure\n$ make\n\n# restore the environment after the build is completed\n$ source deactivate_conanautotoolstoolchain.sh\n</code></pre> <p></p>"},{"location":"packages/v1_50_1/re2/#other-build-systems","title":"Other build systems","text":"<p>Please, check the Conan documentation for other integrations besides the ones listed in this document.</p> <p></p>"},{"location":"packages/v1_50_1/re2/#exposed-header-files-for-re2","title":"Exposed header files for re2","text":"<pre><code>#include &lt;re2/filtered_re2.h&gt;\n#include &lt;re2/set.h&gt;\n#include &lt;re2/stringpiece.h&gt;\n#include &lt;re2/re2.h&gt;\n</code></pre>"},{"location":"packages/v1_50_1/re2/#-","title":"---","text":"<p>Conan 1.58.0. JFrog LTD. https://conan.io. Autogenerated 2023-02-05 17:37:10.</p>"}]}